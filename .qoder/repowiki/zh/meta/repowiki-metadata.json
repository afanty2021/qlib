{"knowledge_relations":[{"id":1,"source_id":"57b82c04-cfe3-42f1-8df9-ee1558c044e0","target_id":"f87e2e81-8dba-47db-aeae-66851f4e334e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 57b82c04-cfe3-42f1-8df9-ee1558c044e0 -\u003e f87e2e81-8dba-47db-aeae-66851f4e334e","gmt_create":"2025-09-27T12:45:02.519045+08:00","gmt_modified":"2025-09-27T12:45:02.519045+08:00"},{"id":2,"source_id":"57b82c04-cfe3-42f1-8df9-ee1558c044e0","target_id":"fa82e7f3-bc7b-4508-ba34-88dd67fba7ba","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 57b82c04-cfe3-42f1-8df9-ee1558c044e0 -\u003e fa82e7f3-bc7b-4508-ba34-88dd67fba7ba","gmt_create":"2025-09-27T12:45:02.524007+08:00","gmt_modified":"2025-09-27T12:45:02.524007+08:00"},{"id":3,"source_id":"57b82c04-cfe3-42f1-8df9-ee1558c044e0","target_id":"60149ab0-1a90-4bc3-90d8-aac7282879c8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 57b82c04-cfe3-42f1-8df9-ee1558c044e0 -\u003e 60149ab0-1a90-4bc3-90d8-aac7282879c8","gmt_create":"2025-09-27T12:45:02.528926+08:00","gmt_modified":"2025-09-27T12:45:02.528926+08:00"},{"id":4,"source_id":"fd83fbf3-e184-49e3-b7ab-8b34c702eb79","target_id":"89c56e46-725f-4591-9730-d3618702ce34","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: fd83fbf3-e184-49e3-b7ab-8b34c702eb79 -\u003e 89c56e46-725f-4591-9730-d3618702ce34","gmt_create":"2025-09-27T12:45:02.533862+08:00","gmt_modified":"2025-09-27T12:45:02.533862+08:00"},{"id":5,"source_id":"fd83fbf3-e184-49e3-b7ab-8b34c702eb79","target_id":"45feaeec-31fe-48b5-9358-f6baeedbddce","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: fd83fbf3-e184-49e3-b7ab-8b34c702eb79 -\u003e 45feaeec-31fe-48b5-9358-f6baeedbddce","gmt_create":"2025-09-27T12:45:02.538905+08:00","gmt_modified":"2025-09-27T12:45:02.538905+08:00"},{"id":6,"source_id":"fd83fbf3-e184-49e3-b7ab-8b34c702eb79","target_id":"7a7a138a-dc9c-47e1-90f1-3cbcf87b13aa","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: fd83fbf3-e184-49e3-b7ab-8b34c702eb79 -\u003e 7a7a138a-dc9c-47e1-90f1-3cbcf87b13aa","gmt_create":"2025-09-27T12:45:02.539333+08:00","gmt_modified":"2025-09-27T12:45:02.539333+08:00"},{"id":7,"source_id":"fd83fbf3-e184-49e3-b7ab-8b34c702eb79","target_id":"194f996d-70eb-4f9b-a395-3411a76464ac","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: fd83fbf3-e184-49e3-b7ab-8b34c702eb79 -\u003e 194f996d-70eb-4f9b-a395-3411a76464ac","gmt_create":"2025-09-27T12:45:02.548005+08:00","gmt_modified":"2025-09-27T12:45:02.548005+08:00"},{"id":8,"source_id":"fd83fbf3-e184-49e3-b7ab-8b34c702eb79","target_id":"c960e17b-cf66-47e2-9172-dcd66656ffe7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: fd83fbf3-e184-49e3-b7ab-8b34c702eb79 -\u003e c960e17b-cf66-47e2-9172-dcd66656ffe7","gmt_create":"2025-09-27T12:45:02.55319+08:00","gmt_modified":"2025-09-27T12:45:02.55319+08:00"},{"id":9,"source_id":"2ae26fdf-5764-4db9-93ff-24342f4417b1","target_id":"76ba2f38-8a7d-4810-a928-debe4746b88e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2ae26fdf-5764-4db9-93ff-24342f4417b1 -\u003e 76ba2f38-8a7d-4810-a928-debe4746b88e","gmt_create":"2025-09-27T12:45:02.558201+08:00","gmt_modified":"2025-09-27T12:45:02.558201+08:00"},{"id":10,"source_id":"2ae26fdf-5764-4db9-93ff-24342f4417b1","target_id":"6a788a69-1c71-4b55-81ad-0b9249ea5430","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2ae26fdf-5764-4db9-93ff-24342f4417b1 -\u003e 6a788a69-1c71-4b55-81ad-0b9249ea5430","gmt_create":"2025-09-27T12:45:02.55858+08:00","gmt_modified":"2025-09-27T12:45:02.55858+08:00"},{"id":11,"source_id":"2ae26fdf-5764-4db9-93ff-24342f4417b1","target_id":"58731dd3-4271-40bc-9351-48947147f25a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2ae26fdf-5764-4db9-93ff-24342f4417b1 -\u003e 58731dd3-4271-40bc-9351-48947147f25a","gmt_create":"2025-09-27T12:45:02.562625+08:00","gmt_modified":"2025-09-27T12:45:02.562625+08:00"},{"id":12,"source_id":"2ae26fdf-5764-4db9-93ff-24342f4417b1","target_id":"6a430da4-1e2a-4014-a745-8f8f7462e37b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2ae26fdf-5764-4db9-93ff-24342f4417b1 -\u003e 6a430da4-1e2a-4014-a745-8f8f7462e37b","gmt_create":"2025-09-27T12:45:02.562953+08:00","gmt_modified":"2025-09-27T12:45:02.562953+08:00"},{"id":13,"source_id":"46f67cd1-d3bd-4776-97ad-e777e3a23fea","target_id":"668fb3e4-a5c3-4a86-9b88-64b3976db207","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 46f67cd1-d3bd-4776-97ad-e777e3a23fea -\u003e 668fb3e4-a5c3-4a86-9b88-64b3976db207","gmt_create":"2025-09-27T12:45:02.567672+08:00","gmt_modified":"2025-09-27T12:45:02.567672+08:00"},{"id":14,"source_id":"46f67cd1-d3bd-4776-97ad-e777e3a23fea","target_id":"42b18d0d-eb21-47f4-bc83-187883aa77ec","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 46f67cd1-d3bd-4776-97ad-e777e3a23fea -\u003e 42b18d0d-eb21-47f4-bc83-187883aa77ec","gmt_create":"2025-09-27T12:45:02.572514+08:00","gmt_modified":"2025-09-27T12:45:02.572515+08:00"},{"id":15,"source_id":"46f67cd1-d3bd-4776-97ad-e777e3a23fea","target_id":"179adc5e-e5e0-4be5-a3af-7ea2f0a43cb1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 46f67cd1-d3bd-4776-97ad-e777e3a23fea -\u003e 179adc5e-e5e0-4be5-a3af-7ea2f0a43cb1","gmt_create":"2025-09-27T12:45:02.572943+08:00","gmt_modified":"2025-09-27T12:45:02.572943+08:00"},{"id":16,"source_id":"57a1df55-fd34-450a-8b8e-fed10ce82762","target_id":"720ebbf1-bd52-45cf-b247-39d14501c050","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 57a1df55-fd34-450a-8b8e-fed10ce82762 -\u003e 720ebbf1-bd52-45cf-b247-39d14501c050","gmt_create":"2025-09-27T12:45:02.573241+08:00","gmt_modified":"2025-09-27T12:45:02.573241+08:00"},{"id":17,"source_id":"57a1df55-fd34-450a-8b8e-fed10ce82762","target_id":"b4e0198a-a632-4257-9807-52ef3d9b134a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 57a1df55-fd34-450a-8b8e-fed10ce82762 -\u003e b4e0198a-a632-4257-9807-52ef3d9b134a","gmt_create":"2025-09-27T12:45:02.573514+08:00","gmt_modified":"2025-09-27T12:45:02.573514+08:00"},{"id":18,"source_id":"57a1df55-fd34-450a-8b8e-fed10ce82762","target_id":"dfde1a7b-beb6-46cb-aa4f-7d57b342775a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 57a1df55-fd34-450a-8b8e-fed10ce82762 -\u003e dfde1a7b-beb6-46cb-aa4f-7d57b342775a","gmt_create":"2025-09-27T12:45:02.573781+08:00","gmt_modified":"2025-09-27T12:45:02.573781+08:00"},{"id":19,"source_id":"57a1df55-fd34-450a-8b8e-fed10ce82762","target_id":"b5d745d8-480a-4aea-b812-43c8a58acf18","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 57a1df55-fd34-450a-8b8e-fed10ce82762 -\u003e b5d745d8-480a-4aea-b812-43c8a58acf18","gmt_create":"2025-09-27T12:45:02.574055+08:00","gmt_modified":"2025-09-27T12:45:02.574055+08:00"},{"id":20,"source_id":"cb8e5643-fbcb-4ae8-8d29-8c284ba0f9f8","target_id":"d17b79d6-d9bd-4511-b94b-bc5c42907209","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cb8e5643-fbcb-4ae8-8d29-8c284ba0f9f8 -\u003e d17b79d6-d9bd-4511-b94b-bc5c42907209","gmt_create":"2025-09-27T12:45:02.574332+08:00","gmt_modified":"2025-09-27T12:45:02.574332+08:00"},{"id":21,"source_id":"cb8e5643-fbcb-4ae8-8d29-8c284ba0f9f8","target_id":"8ebaa9ef-626a-4ddc-91fd-59e73d25db3b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cb8e5643-fbcb-4ae8-8d29-8c284ba0f9f8 -\u003e 8ebaa9ef-626a-4ddc-91fd-59e73d25db3b","gmt_create":"2025-09-27T12:45:02.574596+08:00","gmt_modified":"2025-09-27T12:45:02.574596+08:00"},{"id":22,"source_id":"cb8e5643-fbcb-4ae8-8d29-8c284ba0f9f8","target_id":"e764fdd1-3855-4ddb-9d41-b13d72ea5385","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cb8e5643-fbcb-4ae8-8d29-8c284ba0f9f8 -\u003e e764fdd1-3855-4ddb-9d41-b13d72ea5385","gmt_create":"2025-09-27T12:45:02.574857+08:00","gmt_modified":"2025-09-27T12:45:02.574857+08:00"},{"id":23,"source_id":"cb8e5643-fbcb-4ae8-8d29-8c284ba0f9f8","target_id":"a4a3e3e3-7e2d-4262-b534-7f97344db15e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cb8e5643-fbcb-4ae8-8d29-8c284ba0f9f8 -\u003e a4a3e3e3-7e2d-4262-b534-7f97344db15e","gmt_create":"2025-09-27T12:45:02.575149+08:00","gmt_modified":"2025-09-27T12:45:02.575149+08:00"},{"id":24,"source_id":"cb8e5643-fbcb-4ae8-8d29-8c284ba0f9f8","target_id":"770e1c77-7373-4f0e-95c2-947464fda647","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cb8e5643-fbcb-4ae8-8d29-8c284ba0f9f8 -\u003e 770e1c77-7373-4f0e-95c2-947464fda647","gmt_create":"2025-09-27T12:45:02.575422+08:00","gmt_modified":"2025-09-27T12:45:02.575422+08:00"},{"id":25,"source_id":"cb8e5643-fbcb-4ae8-8d29-8c284ba0f9f8","target_id":"e5fd08cc-0b62-4277-ac16-ea1eba771fb3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cb8e5643-fbcb-4ae8-8d29-8c284ba0f9f8 -\u003e e5fd08cc-0b62-4277-ac16-ea1eba771fb3","gmt_create":"2025-09-27T12:45:02.575683+08:00","gmt_modified":"2025-09-27T12:45:02.575683+08:00"},{"id":26,"source_id":"cb8e5643-fbcb-4ae8-8d29-8c284ba0f9f8","target_id":"a593ed80-4235-4577-a5ee-9ef619dd6067","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cb8e5643-fbcb-4ae8-8d29-8c284ba0f9f8 -\u003e a593ed80-4235-4577-a5ee-9ef619dd6067","gmt_create":"2025-09-27T12:45:02.575946+08:00","gmt_modified":"2025-09-27T12:45:02.575946+08:00"},{"id":27,"source_id":"a2343f51-31ff-4af0-bf66-fd438158f5c4","target_id":"723bac0b-5c87-405e-bf6a-3664ba8be10e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a2343f51-31ff-4af0-bf66-fd438158f5c4 -\u003e 723bac0b-5c87-405e-bf6a-3664ba8be10e","gmt_create":"2025-09-27T12:45:02.576201+08:00","gmt_modified":"2025-09-27T12:45:02.576201+08:00"},{"id":28,"source_id":"a2343f51-31ff-4af0-bf66-fd438158f5c4","target_id":"e6194b42-486f-43a1-b018-35f7220e6753","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a2343f51-31ff-4af0-bf66-fd438158f5c4 -\u003e e6194b42-486f-43a1-b018-35f7220e6753","gmt_create":"2025-09-27T12:45:02.576472+08:00","gmt_modified":"2025-09-27T12:45:02.576472+08:00"},{"id":29,"source_id":"a2343f51-31ff-4af0-bf66-fd438158f5c4","target_id":"b1cf45f5-f62e-4348-a29e-4907c47df22a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a2343f51-31ff-4af0-bf66-fd438158f5c4 -\u003e b1cf45f5-f62e-4348-a29e-4907c47df22a","gmt_create":"2025-09-27T12:45:02.576749+08:00","gmt_modified":"2025-09-27T12:45:02.576749+08:00"},{"id":30,"source_id":"76ba2f38-8a7d-4810-a928-debe4746b88e","target_id":"320c8298-49ef-45fe-9160-1f78ec1285bf","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 76ba2f38-8a7d-4810-a928-debe4746b88e -\u003e 320c8298-49ef-45fe-9160-1f78ec1285bf","gmt_create":"2025-09-27T12:45:02.577052+08:00","gmt_modified":"2025-09-27T12:45:02.577052+08:00"},{"id":31,"source_id":"76ba2f38-8a7d-4810-a928-debe4746b88e","target_id":"b20957fe-f99f-4423-a792-1fb55c00b1e6","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 76ba2f38-8a7d-4810-a928-debe4746b88e -\u003e b20957fe-f99f-4423-a792-1fb55c00b1e6","gmt_create":"2025-09-27T12:45:02.577314+08:00","gmt_modified":"2025-09-27T12:45:02.577314+08:00"},{"id":32,"source_id":"76ba2f38-8a7d-4810-a928-debe4746b88e","target_id":"f89421b5-670a-4f2a-abe1-c0eca651ba01","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 76ba2f38-8a7d-4810-a928-debe4746b88e -\u003e f89421b5-670a-4f2a-abe1-c0eca651ba01","gmt_create":"2025-09-27T12:45:02.577583+08:00","gmt_modified":"2025-09-27T12:45:02.577583+08:00"},{"id":33,"source_id":"4529e857-9d92-41e5-b4ba-5625ee3480f3","target_id":"b3cb5f56-2e91-41b8-a484-9bb47d6fd5e4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4529e857-9d92-41e5-b4ba-5625ee3480f3 -\u003e b3cb5f56-2e91-41b8-a484-9bb47d6fd5e4","gmt_create":"2025-09-27T12:45:02.577842+08:00","gmt_modified":"2025-09-27T12:45:02.577842+08:00"},{"id":34,"source_id":"6a788a69-1c71-4b55-81ad-0b9249ea5430","target_id":"20fd67bd-92f0-41ba-9caa-de5f550fed7a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6a788a69-1c71-4b55-81ad-0b9249ea5430 -\u003e 20fd67bd-92f0-41ba-9caa-de5f550fed7a","gmt_create":"2025-09-27T12:45:02.578196+08:00","gmt_modified":"2025-09-27T12:45:02.578196+08:00"},{"id":35,"source_id":"6a788a69-1c71-4b55-81ad-0b9249ea5430","target_id":"a1fa60be-e7af-42a5-8e8f-0d7ba5aa1227","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6a788a69-1c71-4b55-81ad-0b9249ea5430 -\u003e a1fa60be-e7af-42a5-8e8f-0d7ba5aa1227","gmt_create":"2025-09-27T12:45:02.578444+08:00","gmt_modified":"2025-09-27T12:45:02.578444+08:00"},{"id":36,"source_id":"6a788a69-1c71-4b55-81ad-0b9249ea5430","target_id":"d125a199-e8d1-4096-9965-8544be4eb6b2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6a788a69-1c71-4b55-81ad-0b9249ea5430 -\u003e d125a199-e8d1-4096-9965-8544be4eb6b2","gmt_create":"2025-09-27T12:45:02.578693+08:00","gmt_modified":"2025-09-27T12:45:02.578693+08:00"},{"id":37,"source_id":"4529e857-9d92-41e5-b4ba-5625ee3480f3","target_id":"25e7a8d2-9593-45af-a272-07f6e822edf5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4529e857-9d92-41e5-b4ba-5625ee3480f3 -\u003e 25e7a8d2-9593-45af-a272-07f6e822edf5","gmt_create":"2025-09-27T12:45:02.578994+08:00","gmt_modified":"2025-09-27T12:45:02.578994+08:00"},{"id":38,"source_id":"45feaeec-31fe-48b5-9358-f6baeedbddce","target_id":"22ff4161-ed9a-4978-80b1-17064eda1d49","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 45feaeec-31fe-48b5-9358-f6baeedbddce -\u003e 22ff4161-ed9a-4978-80b1-17064eda1d49","gmt_create":"2025-09-27T12:45:02.579283+08:00","gmt_modified":"2025-09-27T12:45:02.579283+08:00"},{"id":39,"source_id":"45feaeec-31fe-48b5-9358-f6baeedbddce","target_id":"4c1817ea-b5f9-4b73-b93d-7adda685d29b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 45feaeec-31fe-48b5-9358-f6baeedbddce -\u003e 4c1817ea-b5f9-4b73-b93d-7adda685d29b","gmt_create":"2025-09-27T12:45:02.579528+08:00","gmt_modified":"2025-09-27T12:45:02.579528+08:00"},{"id":40,"source_id":"45feaeec-31fe-48b5-9358-f6baeedbddce","target_id":"af9e713a-3ac7-45e1-a52e-03aa6f6ac077","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 45feaeec-31fe-48b5-9358-f6baeedbddce -\u003e af9e713a-3ac7-45e1-a52e-03aa6f6ac077","gmt_create":"2025-09-27T12:45:02.579781+08:00","gmt_modified":"2025-09-27T12:45:02.579781+08:00"},{"id":41,"source_id":"42b18d0d-eb21-47f4-bc83-187883aa77ec","target_id":"a4b4a27d-ac27-499e-8bad-08265281c65b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 42b18d0d-eb21-47f4-bc83-187883aa77ec -\u003e a4b4a27d-ac27-499e-8bad-08265281c65b","gmt_create":"2025-09-27T12:45:02.580074+08:00","gmt_modified":"2025-09-27T12:45:02.580074+08:00"},{"id":42,"source_id":"42b18d0d-eb21-47f4-bc83-187883aa77ec","target_id":"a33e108b-297a-48c6-9854-28f2ce6919c6","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 42b18d0d-eb21-47f4-bc83-187883aa77ec -\u003e a33e108b-297a-48c6-9854-28f2ce6919c6","gmt_create":"2025-09-27T12:45:02.580348+08:00","gmt_modified":"2025-09-27T12:45:02.580348+08:00"},{"id":43,"source_id":"58731dd3-4271-40bc-9351-48947147f25a","target_id":"f72675b5-802c-4bde-8003-527276e1bf47","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 58731dd3-4271-40bc-9351-48947147f25a -\u003e f72675b5-802c-4bde-8003-527276e1bf47","gmt_create":"2025-09-27T12:45:02.580666+08:00","gmt_modified":"2025-09-27T12:45:02.580666+08:00"},{"id":44,"source_id":"58731dd3-4271-40bc-9351-48947147f25a","target_id":"5a8d60e8-49e7-43af-86ad-53cd20d56589","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 58731dd3-4271-40bc-9351-48947147f25a -\u003e 5a8d60e8-49e7-43af-86ad-53cd20d56589","gmt_create":"2025-09-27T12:45:02.580931+08:00","gmt_modified":"2025-09-27T12:45:02.580931+08:00"},{"id":45,"source_id":"58731dd3-4271-40bc-9351-48947147f25a","target_id":"b11fde74-4bd2-49a9-9eff-17842552c100","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 58731dd3-4271-40bc-9351-48947147f25a -\u003e b11fde74-4bd2-49a9-9eff-17842552c100","gmt_create":"2025-09-27T12:45:02.581186+08:00","gmt_modified":"2025-09-27T12:45:02.581186+08:00"},{"id":46,"source_id":"4529e857-9d92-41e5-b4ba-5625ee3480f3","target_id":"42acae5d-3e25-4051-8ece-70bcf5bf7ce2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4529e857-9d92-41e5-b4ba-5625ee3480f3 -\u003e 42acae5d-3e25-4051-8ece-70bcf5bf7ce2","gmt_create":"2025-09-27T12:45:02.581436+08:00","gmt_modified":"2025-09-27T12:45:02.581436+08:00"},{"id":47,"source_id":"7a7a138a-dc9c-47e1-90f1-3cbcf87b13aa","target_id":"a8011235-363a-45b2-a8cd-a70cfa3f3601","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7a7a138a-dc9c-47e1-90f1-3cbcf87b13aa -\u003e a8011235-363a-45b2-a8cd-a70cfa3f3601","gmt_create":"2025-09-27T12:45:02.581728+08:00","gmt_modified":"2025-09-27T12:45:02.581728+08:00"},{"id":48,"source_id":"7a7a138a-dc9c-47e1-90f1-3cbcf87b13aa","target_id":"ac9aeaf0-dd9d-42b5-88ed-77e33a385f6e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7a7a138a-dc9c-47e1-90f1-3cbcf87b13aa -\u003e ac9aeaf0-dd9d-42b5-88ed-77e33a385f6e","gmt_create":"2025-09-27T12:45:02.581982+08:00","gmt_modified":"2025-09-27T12:45:02.581982+08:00"},{"id":49,"source_id":"7a7a138a-dc9c-47e1-90f1-3cbcf87b13aa","target_id":"785f38f8-6adc-47ff-b84b-146f32a1989e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7a7a138a-dc9c-47e1-90f1-3cbcf87b13aa -\u003e 785f38f8-6adc-47ff-b84b-146f32a1989e","gmt_create":"2025-09-27T12:45:02.582231+08:00","gmt_modified":"2025-09-27T12:45:02.582231+08:00"},{"id":50,"source_id":"7a7a138a-dc9c-47e1-90f1-3cbcf87b13aa","target_id":"983bae29-dcfe-455c-83d1-c2365b038253","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7a7a138a-dc9c-47e1-90f1-3cbcf87b13aa -\u003e 983bae29-dcfe-455c-83d1-c2365b038253","gmt_create":"2025-09-27T12:45:02.582474+08:00","gmt_modified":"2025-09-27T12:45:02.582474+08:00"},{"id":51,"source_id":"7a7a138a-dc9c-47e1-90f1-3cbcf87b13aa","target_id":"da15e0ba-4fa9-41b8-89d3-2f8a9408b36a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7a7a138a-dc9c-47e1-90f1-3cbcf87b13aa -\u003e da15e0ba-4fa9-41b8-89d3-2f8a9408b36a","gmt_create":"2025-09-27T12:45:02.582739+08:00","gmt_modified":"2025-09-27T12:45:02.582739+08:00"},{"id":52,"source_id":"60149ab0-1a90-4bc3-90d8-aac7282879c8","target_id":"37ad86e5-7747-483d-aa95-2783e59169ba","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 60149ab0-1a90-4bc3-90d8-aac7282879c8 -\u003e 37ad86e5-7747-483d-aa95-2783e59169ba","gmt_create":"2025-09-27T12:45:02.584068+08:00","gmt_modified":"2025-09-27T12:45:02.584068+08:00"},{"id":53,"source_id":"60149ab0-1a90-4bc3-90d8-aac7282879c8","target_id":"b4a3386a-084a-4ff3-80ee-bc59140f8b3c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 60149ab0-1a90-4bc3-90d8-aac7282879c8 -\u003e b4a3386a-084a-4ff3-80ee-bc59140f8b3c","gmt_create":"2025-09-27T12:45:02.584398+08:00","gmt_modified":"2025-09-27T12:45:02.584398+08:00"},{"id":54,"source_id":"4529e857-9d92-41e5-b4ba-5625ee3480f3","target_id":"c6c8b9ca-963a-4f7d-b902-b9f980aef6d9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4529e857-9d92-41e5-b4ba-5625ee3480f3 -\u003e c6c8b9ca-963a-4f7d-b902-b9f980aef6d9","gmt_create":"2025-09-27T12:45:02.584734+08:00","gmt_modified":"2025-09-27T12:45:02.584734+08:00"},{"id":55,"source_id":"194f996d-70eb-4f9b-a395-3411a76464ac","target_id":"f41f27e0-0ccd-4b7c-8d38-0605d3e8b2b8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 194f996d-70eb-4f9b-a395-3411a76464ac -\u003e f41f27e0-0ccd-4b7c-8d38-0605d3e8b2b8","gmt_create":"2025-09-27T12:45:02.585037+08:00","gmt_modified":"2025-09-27T12:45:02.585037+08:00"},{"id":56,"source_id":"194f996d-70eb-4f9b-a395-3411a76464ac","target_id":"a915225e-a4cd-4e7c-9fcc-78dc33c449da","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 194f996d-70eb-4f9b-a395-3411a76464ac -\u003e a915225e-a4cd-4e7c-9fcc-78dc33c449da","gmt_create":"2025-09-27T12:45:02.585284+08:00","gmt_modified":"2025-09-27T12:45:02.585284+08:00"},{"id":57,"source_id":"4529e857-9d92-41e5-b4ba-5625ee3480f3","target_id":"11bd547b-5995-4e3a-8e28-a0f8aed25daa","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4529e857-9d92-41e5-b4ba-5625ee3480f3 -\u003e 11bd547b-5995-4e3a-8e28-a0f8aed25daa","gmt_create":"2025-09-27T12:45:02.585547+08:00","gmt_modified":"2025-09-27T12:45:02.585547+08:00"},{"id":58,"source_id":"a8011235-363a-45b2-a8cd-a70cfa3f3601","target_id":"0e609b74-dffb-49fc-ac24-e2cb98be6a81","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a8011235-363a-45b2-a8cd-a70cfa3f3601 -\u003e 0e609b74-dffb-49fc-ac24-e2cb98be6a81","gmt_create":"2025-09-27T12:45:02.58608+08:00","gmt_modified":"2025-09-27T12:45:02.58608+08:00"},{"id":59,"source_id":"a8011235-363a-45b2-a8cd-a70cfa3f3601","target_id":"bd9ca7df-728b-4b84-94c4-227975c8162b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a8011235-363a-45b2-a8cd-a70cfa3f3601 -\u003e bd9ca7df-728b-4b84-94c4-227975c8162b","gmt_create":"2025-09-27T12:45:02.586334+08:00","gmt_modified":"2025-09-27T12:45:02.586334+08:00"},{"id":60,"source_id":"a1fa60be-e7af-42a5-8e8f-0d7ba5aa1227","target_id":"e131f93a-c799-4c30-a094-0600f5ed5d57","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a1fa60be-e7af-42a5-8e8f-0d7ba5aa1227 -\u003e e131f93a-c799-4c30-a094-0600f5ed5d57","gmt_create":"2025-09-27T12:45:02.587401+08:00","gmt_modified":"2025-09-27T12:45:02.587401+08:00"},{"id":61,"source_id":"a1fa60be-e7af-42a5-8e8f-0d7ba5aa1227","target_id":"6cfe768b-e3be-4b38-bd4f-493e4624ae86","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a1fa60be-e7af-42a5-8e8f-0d7ba5aa1227 -\u003e 6cfe768b-e3be-4b38-bd4f-493e4624ae86","gmt_create":"2025-09-27T12:45:02.587869+08:00","gmt_modified":"2025-09-27T12:45:02.587869+08:00"},{"id":62,"source_id":"a1fa60be-e7af-42a5-8e8f-0d7ba5aa1227","target_id":"584d0247-a0c9-4a06-8165-0bee6a644af4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a1fa60be-e7af-42a5-8e8f-0d7ba5aa1227 -\u003e 584d0247-a0c9-4a06-8165-0bee6a644af4","gmt_create":"2025-09-27T12:45:02.588242+08:00","gmt_modified":"2025-09-27T12:45:02.588242+08:00"},{"id":63,"source_id":"a1fa60be-e7af-42a5-8e8f-0d7ba5aa1227","target_id":"8d80a15a-6d0e-4435-9b3d-af8a48afa84f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a1fa60be-e7af-42a5-8e8f-0d7ba5aa1227 -\u003e 8d80a15a-6d0e-4435-9b3d-af8a48afa84f","gmt_create":"2025-09-27T12:45:02.588502+08:00","gmt_modified":"2025-09-27T12:45:02.588502+08:00"},{"id":64,"source_id":"a1fa60be-e7af-42a5-8e8f-0d7ba5aa1227","target_id":"0de4e0aa-92e3-4537-b34a-ef1480e6205c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a1fa60be-e7af-42a5-8e8f-0d7ba5aa1227 -\u003e 0de4e0aa-92e3-4537-b34a-ef1480e6205c","gmt_create":"2025-09-27T12:45:02.58876+08:00","gmt_modified":"2025-09-27T12:45:02.58876+08:00"},{"id":65,"source_id":"4c1817ea-b5f9-4b73-b93d-7adda685d29b","target_id":"a1c33804-e302-4b79-847b-29caae87fbdc","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4c1817ea-b5f9-4b73-b93d-7adda685d29b -\u003e a1c33804-e302-4b79-847b-29caae87fbdc","gmt_create":"2025-09-27T12:45:02.589053+08:00","gmt_modified":"2025-09-27T12:45:02.589053+08:00"},{"id":66,"source_id":"4c1817ea-b5f9-4b73-b93d-7adda685d29b","target_id":"b7d12a1e-1cf9-45bc-b159-230efcb31ca5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4c1817ea-b5f9-4b73-b93d-7adda685d29b -\u003e b7d12a1e-1cf9-45bc-b159-230efcb31ca5","gmt_create":"2025-09-27T12:45:02.589393+08:00","gmt_modified":"2025-09-27T12:45:02.589393+08:00"},{"id":67,"source_id":"4c1817ea-b5f9-4b73-b93d-7adda685d29b","target_id":"7bc6a925-5728-405f-88f6-68a17609745b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4c1817ea-b5f9-4b73-b93d-7adda685d29b -\u003e 7bc6a925-5728-405f-88f6-68a17609745b","gmt_create":"2025-09-27T12:45:02.589643+08:00","gmt_modified":"2025-09-27T12:45:02.589643+08:00"},{"id":68,"source_id":"af9e713a-3ac7-45e1-a52e-03aa6f6ac077","target_id":"0e92b56a-7cb8-47d2-9c04-879769b57e25","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: af9e713a-3ac7-45e1-a52e-03aa6f6ac077 -\u003e 0e92b56a-7cb8-47d2-9c04-879769b57e25","gmt_create":"2025-09-27T12:45:02.590002+08:00","gmt_modified":"2025-09-27T12:45:02.590002+08:00"},{"id":69,"source_id":"af9e713a-3ac7-45e1-a52e-03aa6f6ac077","target_id":"e34b7156-e33b-4b1c-b7f5-59a4af98058f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: af9e713a-3ac7-45e1-a52e-03aa6f6ac077 -\u003e e34b7156-e33b-4b1c-b7f5-59a4af98058f","gmt_create":"2025-09-27T12:45:02.590401+08:00","gmt_modified":"2025-09-27T12:45:02.590401+08:00"},{"id":70,"source_id":"af9e713a-3ac7-45e1-a52e-03aa6f6ac077","target_id":"d1ec3261-ab76-42c2-aaac-39a93d6eb772","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: af9e713a-3ac7-45e1-a52e-03aa6f6ac077 -\u003e d1ec3261-ab76-42c2-aaac-39a93d6eb772","gmt_create":"2025-09-27T12:45:02.590649+08:00","gmt_modified":"2025-09-27T12:45:02.590649+08:00"},{"id":71,"source_id":"af9e713a-3ac7-45e1-a52e-03aa6f6ac077","target_id":"7b8fabe2-7f9a-4888-bd98-43603fb403c3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: af9e713a-3ac7-45e1-a52e-03aa6f6ac077 -\u003e 7b8fabe2-7f9a-4888-bd98-43603fb403c3","gmt_create":"2025-09-27T12:45:02.590919+08:00","gmt_modified":"2025-09-27T12:45:02.590919+08:00"},{"id":72,"source_id":"785f38f8-6adc-47ff-b84b-146f32a1989e","target_id":"d91bd2c0-5c9b-40e1-b18c-e6f374ecc0d6","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 785f38f8-6adc-47ff-b84b-146f32a1989e -\u003e d91bd2c0-5c9b-40e1-b18c-e6f374ecc0d6","gmt_create":"2025-09-27T12:45:02.591241+08:00","gmt_modified":"2025-09-27T12:45:02.591241+08:00"},{"id":73,"source_id":"785f38f8-6adc-47ff-b84b-146f32a1989e","target_id":"383668db-1ef2-4b74-a0b0-9e05902b56c5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 785f38f8-6adc-47ff-b84b-146f32a1989e -\u003e 383668db-1ef2-4b74-a0b0-9e05902b56c5","gmt_create":"2025-09-27T12:45:02.59149+08:00","gmt_modified":"2025-09-27T12:45:02.59149+08:00"},{"id":74,"source_id":"da15e0ba-4fa9-41b8-89d3-2f8a9408b36a","target_id":"f2584071-0123-4762-96e1-7995575ec722","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: da15e0ba-4fa9-41b8-89d3-2f8a9408b36a -\u003e f2584071-0123-4762-96e1-7995575ec722","gmt_create":"2025-09-27T12:45:02.591868+08:00","gmt_modified":"2025-09-27T12:45:02.591868+08:00"},{"id":75,"source_id":"da15e0ba-4fa9-41b8-89d3-2f8a9408b36a","target_id":"7af442e4-ec6a-4e47-a351-9a609561f6b4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: da15e0ba-4fa9-41b8-89d3-2f8a9408b36a -\u003e 7af442e4-ec6a-4e47-a351-9a609561f6b4","gmt_create":"2025-09-27T12:45:02.592248+08:00","gmt_modified":"2025-09-27T12:45:02.592248+08:00"},{"id":76,"source_id":"584d0247-a0c9-4a06-8165-0bee6a644af4","target_id":"c0597fe4-fd33-4478-83d2-339381b0fad3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 584d0247-a0c9-4a06-8165-0bee6a644af4 -\u003e c0597fe4-fd33-4478-83d2-339381b0fad3","gmt_create":"2025-09-27T12:45:02.592717+08:00","gmt_modified":"2025-09-27T12:45:02.592717+08:00"},{"id":77,"source_id":"584d0247-a0c9-4a06-8165-0bee6a644af4","target_id":"c092b022-a042-4aa1-8b33-d3fa7ca768f8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 584d0247-a0c9-4a06-8165-0bee6a644af4 -\u003e c092b022-a042-4aa1-8b33-d3fa7ca768f8","gmt_create":"2025-09-27T12:45:02.592967+08:00","gmt_modified":"2025-09-27T12:45:02.592967+08:00"},{"id":78,"source_id":"584d0247-a0c9-4a06-8165-0bee6a644af4","target_id":"1634d1e3-e82d-4175-8062-a7d901f75809","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 584d0247-a0c9-4a06-8165-0bee6a644af4 -\u003e 1634d1e3-e82d-4175-8062-a7d901f75809","gmt_create":"2025-09-27T12:45:02.593204+08:00","gmt_modified":"2025-09-27T12:45:02.593204+08:00"}],"wiki_catalogs":[{"id":"9e358b07-2b8b-4786-9cdb-dd3d08eae06b","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"项目概述","description":"project-overview","prompt":"创建关于Qlib项目的综合性内容，重点介绍其作为量化投资领域AI导向开源平台的核心目标与功能。解释其在机器学习驱动的金融研究中的定位，涵盖从数据处理、模型训练到回测和投资组合优化的完整流程。描述系统架构抽象概念，包括模块化设计、配置驱动的工作流机制以及插件式扩展能力。使用代码库中的实际术语，说明其支持监督学习、强化学习和元学习等多种范式的能力。结合README中的性能对比表格和框架抽象图（framework-abstract.jpg）阐述技术优势。为初学者提供清晰的概念引导，同时为高级用户提供技术深度，包括与PyTorch、LightGBM、MLflow等关键技术栈的集成方式。","progress_status":"completed","dependent_files":"README.md,CHANGES.rst,pyproject.toml,setup.py","gmt_create":"2025-09-27T10:34:17.040151+08:00","gmt_modified":"2025-09-27T12:44:42.001181+08:00","raw_data":"WikiEncrypted:0MI1/XkBoMl0lTbK6t0Cn/+8FdvqrJ62ianMLvZj02elJtBUgH0Ns0veIx1WPtM9wwkxI+/XAqHLxJLlHB8wV7ojrH0+b4JMz5OewwhBN1FqJG1v1WFDEa8PlmzjDywVsHr6wh7CZkog7VzxTxfZpQdKLF7UBr/kD0Z7Fo9EL/kbQ2l+HgEKtCo81RAhKAwkXF9RjyfIhdQVqzwo4s2rlRwbvGfD+rb1A/qrCJIyOOXyfBvQKKDvtaiMnMHtuuQDMBSrnHm0isQwfUJt4GxR6ZQ27hq1DNOeTDSJvJh66eAGFfMeexYi/iw+aEErdh1HGKOCIwaZ9/C0ZvZ1v4CcGuRQ1kT3hTggNcD3jwsvN5CeiMF4eZLTh7wq3Q5AcDxV+tAqr1wpjMjwHTrYAXUob0qkGDoWThSePV0jtsRMDjBb1lFYfJV68hvedCWm/O7Qh09ptCzpRNQd772rBcablMQjSYN8rTAtkNLMf0FL73w9rHLH+v//j6biu64t11s/SgNnHnGSsSq4CYM/jInYGAAoflMIWoZFAP5aHiQKgLfovHRWhIjHy+tFMf8jwo3ROvxEqIH+2sjouxZeNxZFDBMgan4xGVGW0mjAf1dZ9P/0AXv1U3lyCqdluoeq8+PnSIaTw49j8fKIKGjbJ19WO4t66gVkjVn2MLjZjfSvJM1nruus7y8lW8WIs4eFXDOWjR43pksZdqJZnjEjd8xl10xD4DZLHg+QUXepjTp9T7YJ4Y76NwCRMTEnVyKzmQSIrWoK0j2zvy3gATcas9IspvGRtqZSKQ5OxZET6pHdEyhgNRcuK+upcwrbC1Hr2jNdNfibqcFnzVxSHLW7ClOf9/IO2IORj9OrXAqax+jwgewq1PLFVQL9CxTdOvi16CUUxpKeIGLby8Ij0ZehBbqz/Pj2GPFBlIopi4MwV3pmhI2qv+7ER3AbRj+wtP0YBvugehkdh2L5en6gGm8hoH+NpCWJrtH9Kh42gWsAAZQxeJEinAUHV1paQcDT9tfGnGaqnZN5TtR4BbDOF+W+P974b3drBhoSHXJGL7KKYPPLjYU3apkN1PUbTbsMZvwSTcyirD4JzIskLZSS09HLQKzDed/RbxgJ3q9f4fpMLzAbV7/tzvVcRLlLWgGob2TANpC6bxa1B4rlTcDaaRDODUn5rtOy24/rK9t25+y+ZX2b4tHz2i0Soc0OQMYWJJvBR9XG7YVqMiH7u8aNzXM5NumkTldC2UN/TQANT0PlMYhizlDuFIfd1zbddSoTJNhuwOEDa+m9I2fnxr1cBGdPLhIqKk78MW638/pPjSjyHGoB90PMekVNsc1h/hBUJxhU5cmQa91Romjjj8uVBkCeqX1fCg2tdKGB+X6vSP1Ne3fDF6U="},{"id":"2d6c0203-db64-4a78-9f37-7283382ae7d7","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"模型训练框架","description":"model-training-framework","prompt":"深入解析Qlib中模型训练的核心架构。详细阐述base.Model接口的设计原则，包括init、fit、predict等方法的契约规范。说明trainer.Trainer如何通过统一接口协调不同模型的训练流程，并支持实验管理（如MLflow集成）。结合workflow_by_code.py中的示例，展示从配置定义到模型训练执行的完整过程。解释init_instance_by_config工厂模式在动态实例化模型和训练器中的作用机制。涵盖训练过程中的日志记录、检查点保存与恢复、分布式训练支持等关键功能。","parent_id":"d2a28939-7c7a-4533-8058-05a082de18d0","progress_status":"completed","dependent_files":"qlib/model/base.py,qlib/model/trainer.py,qlib/workflow/exp.py,qlib/contrib/tuner/pipeline.py","gmt_create":"2025-09-27T10:34:57.347566+08:00","gmt_modified":"2025-09-27T11:03:11.659407+08:00","raw_data":"WikiEncrypted:o5cr6Bo4m333A3G+lRdTT9/5p+0dOm3x3a+nNtKxxZ2wJeYCYmSagrM0+ySlsTzYV6M/KZL1fKa4+Zy/p3vXVHL7aSLfd9/evkteZa4tEGFhbNXIPzkcnVH5YobSdRqRraYdxEJ3cF3l/4CGXbb1gddjgm4wXBFZR4PK6cHOgsrZ619WGwRmloED1dBqx/+kH4Q8iyAI3RUyZnW0/T3IUOh8E9AXh4gSpF5gjCEc+6qxKv00lwv/hFsKoenl01N2/Jl6Ht3zkVSJgdMdRfA/8fa6L0GzuYb4o7k4lb7KyCCXCNLqnA8gFlPlfnbFGgbtxGUemsmX35HEKIWrM4rd1O9xXOdxeRg/BiLTTqF1MoIZPeWkkb+g8/1edPGmmkGVxws9uDxB8dw7KOK96IPevEpSAMFvpmUKm7WEGqC0p5yb2YmWyg7zP/GI5UFR9zUHE/q1Fx82Bg4QQCLqsGewSZsrLJGwrwQLBWvrxFQ/nikh31iG3jsOj2kp+qd+3WkbZhc2MJfg3KrqJegv9nBv9D4K1c19SPUGWDgV93HZFtJ5ofM6ofy96r+puG6KKC63ObiitiwAdaMeeFjYyUitFHa8919kOYube3IglwA5oyOcVCrQ61iHNzwDoPdXfNcsvcEyXvEI6DyJ6v4EXwLUGYt1NFnMOA9Ox8L0sos+kwj/YDR1OLWP+2BhrpEDLMDljim9kOCtb/Isqb8h4khsFdZtp7VtwZvAhW5tHw6pRqvQXIZnE1sBThizUFFPa7dB8OZr2dnkgdRPFXlyxkqctERoyNjCx2SN44ez8yxZDvNt1sLICehlVcUkMt8oUOIA5ieTz8t6Nsz12o85iMYu30HMGPS9qJv4vA0JG92MnKem9MleDAEEPCw39+lVE6XMvM3oeH4QbgGwZqijmnTtWJhrOsbk1LosSCrzEmvltPRef9WgbIWEB9eVhfbiKmowcgloW/gTCs8F/D7A1m+H+1NRpUA8y2447oEHhmRRUOuUodkF12BZzpko3mfw88HrlZVqyrMpG+9Cnv612tOqOnAXqwoujq5mOJyoOPLZnPz7tZYzeeBQrg+1qMShJmjk00H6nUxEaKrb48Ym2QB+I3HYsuUsWK2NKBYUTetO2sOGQ7zpBJIfCJDB2MqhFm7M8r6a1H2+18728rYnwqeZOZfnazVx8aWyDBobrfBqGskW2MTy3aPC5YbhTK2cLlQVszFio3stoFPCNmsaBdWpLB7XVMgMEKS59D5vlI3OHxs82vfvHvUcw8gDLxKbsTNh4XDcWhsDBaZvZuBK26atg0tTecaMbtQXAyjACA+tBYrWHybs0/o1s3SXUWGXeyk6","layer_level":1},{"id":"043cc9d7-ad60-4051-a9eb-6011db75f9bb","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"数据加载","description":"data-loading","prompt":"深入解析Qlib的数据加载机制，重点阐述Loader类的设计与实现。详细说明如何通过`loader.py`中的DatasetLoader从底层存储中高效读取时间序列数据，并结合`data.py`中的DataProvider接口实现统一的数据访问抽象。解释异步加载、批量读取和内存映射等性能优化技术的应用场景与配置方式。提供自定义数据源扩展的编程接口示例，展示如何继承BaseProvider和register_provider注册新的数据提供者。结合实际用例说明在大规模因子回测中如何避免I/O瓶颈，并给出常见加载错误（如键不存在、格式不匹配）的排查方法。","parent_id":"ee2e30e0-2b00-44a7-a86d-d24456832772","progress_status":"completed","dependent_files":"qlib/data/dataset/loader.py,qlib/data/data.py,qlib/data/client.py","gmt_create":"2025-09-27T10:35:10.381153+08:00","gmt_modified":"2025-09-27T11:04:16.197305+08:00","raw_data":"WikiEncrypted:WUqMXEcJKIYjwvMXzVIDok2kI2eeN0d86tYpz06kwOvfdAY1IVlVTLPAg/TJYmKpW8peb8nzWpDFRvBeMhPD3RoM2PkJgdezJiFlQmvw6SWf5yYmEe6EgownWl4FG10gHdEFo+vJYuBel55EmU7/O8p72ua06wk+FCxgaGel+/jv93CiVgLXYSTyqsGmVanU7KhMM9B8a7pGIaP1uHwx+uAOumjefRUxvJFFmT9nfe+IfGKZRzc3M+jAXZVVWIR5HAkZ9IVtdfm90ys12df1q06K6Uocs3US2qK+uViO7cJWZdI31sNAjA4MmZHTzLFqQkDWvAdUO6GP91EIg+6OxP0H8Jv4chfpH/zTv7dgVrBRbWj0cV4JxNW++IsDs1yRb+1Vg0N7KHDcxqtYpoRKiVXkbNp2+vI/cUmtTkrBUEdZRDPfW9t7MIXxVowCi57SAkHU3dphpBCZo2NOZxU3Ukv6OefyWpEwsR1z+0tX743zdkvF+u+hzAw5fI/bYlpMALF0weZrcOq53hXCrtq6jsWuFkIKESctCYkktUX5Z83A7VfsfZaMKb3wZALj2ohbzdrKcsHBmJFg4riXnQVXwknI0OfXlTmno/wb8O1wWJ8HXVxj6EXP8no7AXNf4A1SHAi1vpPezHYDdcZbgxf3ANjDjrdHNyv1d/Oukve/zfL8X7qV9Dl/XF+59V3KY4xcuZQRQrWOipo4WuLqiqz9JHNR37zDhIUwR6xmoC2GKTf8eQXHyJZrHnvUDoKZZsWm/VmrCDRGjDL6TJDLK2KAz0KZsrIzYjgTLmIHMQk7CgHoZEugxEoJUnPBiVC+9+xWFCLQLZjqxxDiMGr9O1a4lxFCNiA8llDNoEgdzJr6uJCVOoKLaDtwfnhZzK6VHoKVj1BFbosHe2nvipT4xsf0JDFL1RKzFo1lmEGEAGRr8klYYaZ+Mus9hAQ87uMYD7mq1SULBVmVA9goJJpEBShrSlUlMJbWFBV1afCnMMGIoKr1n9fue5tlblne0UtzJ3DppHECB2d31xs+NGsuTU83YPKUK6+T+gBqZo1Zc3nSl4zeCrW3XMMNend9Qlc4Kg719qslgv4n0oNEbF1d5+6XP1m+A4+SWxufOD5mclKBJloLLuns/7Xgek7VLEvvoL3H5GTA/3/PrwmydrNNniR/Fkjcyh/ujSer+/QwOJ0vaX4NmJGewOrTzjUCHAv6fUIriC/5BYuohpNNPsScNMZV4xS9MBIBfb9WWMZYDuxq823GptibwosEqnNGQn594NUQuOQ5ySLodZBVTiyloG+3qA==","layer_level":1},{"id":"e8f0b24c-4064-4eb4-8c05-5b7ae8c0abe3","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"回测引擎核心","description":"backtest-engine","prompt":"创建关于Qlib回测引擎核心（Backtest类）的全面文档。详细说明其作为整个回测流程控制中枢的角色，包括时间序列驱动机制、市场事件调度逻辑以及与Executor、Exchange等组件的交互协议。解释init_instance_by_config如何根据YAML配置动态初始化回测环境，并描述回测生命周期中的各个阶段：初始化、数据加载、信号生成、订单执行、状态更新和结果报告。结合workflow_by_code.py中的示例展示如何通过代码方式构建自定义回测流程。提供性能优化建议，如使用high_performance_ds.py中的高性能数据结构减少内存开销，并指出常见配置错误及其调试方法。","parent_id":"a87540af-7ec3-4c36-b16a-41d9eedae177","progress_status":"completed","dependent_files":"qlib/backtest/backtest.py","gmt_create":"2025-09-27T10:35:18.489388+08:00","gmt_modified":"2025-09-27T11:06:46.373885+08:00","raw_data":"WikiEncrypted:GW0J6qhdI+Co5+lmnL12Js8Gh0Dg+yeUzJS/n4ruZm5kG4+Na0zide/eIYO8J22AOO0WIT+Y7u0MWhgsBSW1BJpvphbryPL64VTLNgT8YqO6qlR2nEhgp1qBU5H79cIeGxcZhZAI+RbKFmhSHhrC5kg3h9A9yMj+CkkCZikDFDw4ZB/Owah/MOXGGBH6+EjOgV/CGURqJOcaJi1dC9XbenHHA5bTJct6H9eSxwtAybuWjQSecTigpq5IUVOoCCriM3ZELEPsYsTJQ09OLLJRS+vmWzLBj1lV3qNpESWvphxPzOP61+NBPfrdUoQP7Ulp6ykZWfkmjSaeAzzQMZs6z+d5LgAxXCLXAgSVAOF2ilwKmIhmCjAvQJ+/ZNRkOqND/Vg0zlVp6nHMGUi7xmmeyGNsCJoBMKqOVkZXBRZ7wfLsey+Li7eLyrmzWtI7FWlrPQYdbQ0HTAODP9KS57763+FVj3vKE6FqGJm2EDq2zumn/BjQhmbOs8JJV/MBAJemtjOiZofy464tSrbC/psmMNk4/NZM2Pbl3TQfkm9x7dvsdZLvpwZG17qJouEjW1KmdEcxilJ93Cu/ax60394KsEMAKAzcs0DTU/wbGAmkGCYPeW/B0xfinxMLX/eg3hjQfK3WVeOI5hgGybQ0QXxspSeccqhnrGKIRzqI+fsI10g6CbmK71TTJN+Ufpf2vbquZgkub4mI60sybKfFzDq4vgQVFY97UrpIy0Qt9UK0xqDQ11DHtwHmGZqMN5/4BblG4ca5eZZn2vgP0+pDh3ukOoB0XTWMFZjYzWDrAt6LSEAxsxZZFV79QMB6Ime7yDIXL5XNyt8QAnBd6QjAdOyvzMCVQhwOmtzZt3puc/sCJhqtrHHCPYxGjHipDtDt9AELkHURIhYIY00KkbnagNmgibKtlM2R5Xg/HGynohMBa8RtBFuWarW4INpm1BJZTPT1NLJeLNn1s+4Eo1gYFbrPe+dZyom5+QIl2cyt8/4UYGdj5AojuqLeuyq1fqvMuSDSpxjTZh4rokH/qbCPrRZEIPWH/oWpUNHosG/3622G5kP1M2QT9hr1gRtKArVrx9kshpjojDyZ6WIbgH3gWnNWnrOVsUs+O8ZrnRA3ubDHvqAeg0uZGVGrTFR8ZduBwwBUrbXGTOiRxGaMknSW2yDiTPy3WlC8vgh/KfRmhwnywz02HPxrhYhUL74pWakLPoQ8vlnKQAiSBF8aWQ0zIrlmQArBU+GMfZvfZb205YNX3N8P36KBZ99Q3NutjOCnT82BM05j8rKOvh4unUCYmSWwNQ==","layer_level":1},{"id":"b737c40a-3bd3-4864-99d7-ab208252032a","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"基础策略","description":"base-strategy","prompt":"深入解析Qlib中Strategy基类的设计原理与实现机制，阐述其作为所有交易策略公共接口的核心职责。说明init、generate_trading_commands等关键方法的调用流程及扩展方式。结合rule_strategy.py中的具体实现，展示如何基于时间规则或市场状态触发交易决策。详细描述策略与回测系统（backtest.py）和执行器（executor.py）之间的交互协议，包括信号传递格式与订单生成逻辑。提供自定义策略继承开发的完整示例，并指出常见实现错误及其调试方法。","parent_id":"c59872d2-5d34-4292-8555-4dc28a9b4d2d","progress_status":"completed","dependent_files":"qlib/strategy/base.py,qlib/contrib/strategy/rule_strategy.py","gmt_create":"2025-09-27T10:35:37.703987+08:00","gmt_modified":"2025-09-27T11:07:35.248991+08:00","raw_data":"WikiEncrypted:5LF7XW9XcPQyjyrZizRHIFMsFajYH1tQ4ZnJSRnnX+aAxSpcG7F3yyoUPDd+lVs+OPH8+LwPy2SGTh+WIt7DUgbxZSTTTOV2nEqoSnPxZwcZCUSTQUQnd+s6y4DNO4dZ1nL01oWqAEsYhWs8HXZ6uSKcuJQ9ISybCoIn2/6ajPHS9QlcqphkPyB9D1AzDIKswZWGt3KEXWXJhMYCD4J7Kd8lho35J/GGFqszYfOcTA7xzm6UwJ659CTpKRKxaeiy6SVSRLgN4cKQvocsljEXM+pWru4CDQItwo0Vygbl+fT9SUHERR6/C6yFIC7tTiD/VfT5vhWLq8otY6QfsH6F/9i/Pfa+MDxAlsTrJDCazwdOfCTXAF+0qH7Lo0XvfGJHQsmdpgKtKvMZgWZ5gD7N01uM7iD3K8S03tWgeRukTwF4OBLfvubiXpYamsUecfXfVCZo9hIuR/qHPll+C7pnrGs/g9Mbu15RJBKyvMridQoacEMX0pVki5i3hsowF3bE114veA6yPHinNxys8y1Fx2ovaWAm6qtJjX4o7NrN0H/DS28UCj045TroGNrMYIRcYq5vCEpnHbbsztizrSUPMb0HfBt3zQB7UkU+01j5zQj8fcdTdf+aWWP95fXH9yuXO9P39yPt2Av0nKxOFVEF9pUbpjtOBYZFOv9M6rZewDp4tn2DBEUa5dEnJ5iK2i/EuZFb3KapUiuzdOiq2n8OvMi/TbUXEcgU7zFCCD/F8Q7zDPmi3l7ujqRp4/0Wg512ec70ftdkP+FMSR/YlRV4RtSk1aIAufhjDW3q6Ut/3Q6htLvPp0E0P8Q4BMrSDU54g3KatwYy0S3Xbl0SmeVqqDkhlbW/UXWyNarwZLc7NffWC20XA0vXvcmzlNJ1aJQFJW/uhxiGgkqoV3q3TDS7HCUgmEZCrIl/5rN/6dZnLdzAmn8D2AlnVgEdXiXsx73VGVr7cf5hhucM+eSZrXF55AGzHQnTLO9Ce8EVRKqEWFAn8A1v12aSYgy2hZrz1G404kJ7zzq3CQX5Np0c515Pu2/P4rrZg1rJ8L49r+UKm+t+ROf1fkxArqsoTdC85l0uQlVtGmGVRnnndFzV2ZVj+/1+vruHxseePQsDFJW587OySiMp3GPEiEt49zVxPX0P","layer_level":1},{"id":"af87a56e-9df4-42a5-bcda-d53d2b76b95f","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"实验管理","description":"experiment-management","prompt":"深入解析Qlib的实验（Experiment）与记录器（Recorder）系统，阐述其在机器学习工作流中的核心作用。详细说明如何通过exp.py创建和管理实验上下文，利用recorder.py记录模型指标、参数、资产和元数据，并与MLflow进行无缝集成以实现可视化追踪和版本控制。结合run_all_model.py示例展示批量运行多个模型时的实验组织结构。涵盖实验生命周期管理、自动日志保存、跨任务结果比较以及分布式环境下的并发控制机制。提供在实际研究中高效使用实验系统的最佳实践，包括标签管理、自定义指标记录和结果回溯方法。","parent_id":"c1615506-454c-4d28-91e9-d3a5c2e4b021","progress_status":"completed","dependent_files":"qlib/workflow/exp.py,qlib/workflow/expm.py,qlib/workflow/recorder.py,examples/run_all_model.py","gmt_create":"2025-09-27T10:35:48.110068+08:00","gmt_modified":"2025-09-27T11:06:57.608764+08:00","raw_data":"WikiEncrypted:Q0g4ZUH/PMn/R/k0w33taUUwRz94pEcvcZmf/Q/VS5ts0V4Eaend8YRtP5tTFJw4OaGuGCc45ZJPB1Cwd9UPZJ3DNN2ShXoL5oFRIJxSAh0pDiJVeDzmQyy0MCSL9s4DRIZAB8F0lobTl901Vn+5wDNS3NKY9ZmkGE92J3ZUBgqgdEgnYQu5MgstLdiBojiO40b9tR+pe5CVVSSD9nqgTAugRxkSoUFWbr+7w2iyZopK2bPYM8MDkruSQgtJ7aW2tBqRja/A3wJliRL1XnDAg9vRPBdXMIIuoHAu0F8C+CUefG50mI4BdX28F79KMpZyJktCSCPzVQcYy29+hnxrtUPGmQMBSfYRrdSQ2pMQJ1iv/l63m9lvIIhGiX+3eU+TXvTvLWjQhRBSu7HulBLS4Chs6zNzc0mIxS2T8djhqFAxhGGi/aRLmpnjTKzwLfaDbPjYtruFatOIXiyFtJ9saf7dy/KL5eD4K0lQEO6KCnBEhtXyynnUPsm7wecnbfjfrjJWudHs3E7AIAJ4c5s/kLsC6erB7APNKwhBzxS1g6fvg9mteqyfPQc5z6L4ndkcrVUUWiyDT6+6ZgnlUfH/0iXfvR8SmYMwa9zjUW48tyFWo0QdsRE27iatYPK+Z5/JWojynujlM8OD3vvTq4i7GNYQFFCUQC4P9nHNvRQaLiqgbsupXOFy15+OwGzPz586hCAepDt6jlJVjf9FddH60J8llJeyH0lH9D84a9qQeHaDfcMGWfnpP+cH3xh89/yhpIxDQbBsifoVx5W1XCSpSnClwlbZ2xYDj0BGTTfBj7bZr0KajlsHU9atsyzJfh5/Hts4jTs1VEnYHYtRZ4tLs+9IH18YN8JhNqglIMXcaVmPYh/9rK1v37OWXlpEUcw05Gvw9GPOmM1txlfvlaR4FQg13OXf82pm88EkkxSsff0xflfb66+T3jsYTq1hzUHkpaeeJ4DTUq4uScm/59hjkpF9j/imThUsjw1+YzeeyB52qO71o8FL04LFAsMpgYgI4WuTg5z+0pRjTWtBPOjWss0CPhaTMEbClSdMx/MP/ElfwET4Z1nLg61a+01ZdwkdpzNvi8ipTJYbiEFLMZLWSk5ioCFHz/TzY1a177JdzvDDrQFKgQe0aTJbgJ7U4WuVlIY0Jrj0Xijnur8MaH79A9A0Qo7eml5Fvd0VFeRk1YHhfRY6FYbM4HCc1LuUu0oIcdoPDILSmBm9eJ6u25a0GfZA8oW4GgMGj9F9eRVIMQ6IQ/qySIIT2plhsTidSXbDHOmmKt/h8sXFS5rS/19dJYCZHMrwwMdLWOJ/XuaYUxh0xFciuUHvp9iYSLa6dQGSxS0Bola4WNjHpj/vbamFUA4HvJlriCZe09uLwaFxXhCl0AMK/EpSW8rB9ujrgOhV","layer_level":1},{"id":"38c260e9-2df8-4c2b-bb2a-735ac3c31c53","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"高频交易","description":"high-frequency-trading","prompt":"深入探讨Qlib中高频交易系统的实现机制。详细解析highfreq_handler.py和highfreq_processor.py如何支持毫秒级行情数据的处理，包括逐笔数据（tick data）的清洗、聚合与特征提取。说明highfreq_ops.py中定义的专用操作符如何优化高性能计算场景下的数据流。结合workflow.py中的示例工作流，展示事件驱动回测的配置方式与执行逻辑。文档需涵盖高频数据加载性能优化策略、内存复用技术以及与标准日频流程的差异。提供实际代码片段说明如何自定义高频特征处理器，并解释executor在高频模式下的订单撮合机制。同时指出常见问题如时序错乱、滑点模拟不准的解决方案。","parent_id":"ce98115e-5189-4b0f-a4a9-025618b5ef1a","progress_status":"completed","dependent_files":"examples/highfreq/README.md,examples/highfreq/highfreq_handler.py,examples/highfreq/highfreq_processor.py,examples/highfreq/workflow.py,qlib/contrib/data/highfreq_handler.py,qlib/contrib/data/highfreq_processor.py,qlib/contrib/ops/high_freq.py","gmt_create":"2025-09-27T10:35:59.325618+08:00","gmt_modified":"2025-09-27T11:10:06.359705+08:00","raw_data":"WikiEncrypted:QUhtGgsoyJOuiehQIsDFKgaqQm92+KOrlSTBiWftFxyM95EorZ5zxbqoA8n+0DaJQmepz6GLaxaXGYFMhDPoXYgneHOZDMzpLwTKpdXzzEVXQJLYBqB+gmfIWuEEN8eNLITp7oAAmL0lPUHiaGVPcuw2IFb4FEt1NCltFOcaz1tJgDcAAbZXg9Rw9DX98eWYAwdANqFMUd4iA/fgNt8gifGyzW/+DWC1pc4RQeUnpVw9MXdrOgFmMbUJMyUp0Mo48T97G8m7ZGgAAt5aVsIQR6sCPW3iBJxKK9Hswn3JbABsnuMfAIBkYER+E8TwnZlLY2dyYrW40n04/EXqlq1y1f625ITSdmfltgP3HJKjUdQxrBjbvGwOHZ0VGtE8+xGYtvg8+hskHeQKMOHMy29dMEMIzpjToUGqDl+pYgpnkxjbB2SO/vx4+77SbwdzQcOKDRVjAE3oW+DCjWVd6y5ZXUMOgycs/lchH5V0uLXyQNeApkXx/n89mFz+AL4NZcJWQlnuMb9PCWr4PbpPO4SDZYAYZ1NwafJ7Fo17PF+vIq7v2hFCVLoo4MLdboxuNlaThllHPy8fTMbhM/gaqCqqbydeA0xXXeufzH7nnz/joAGQu+UNcIHuSYG7JUBbMoguacq0UE7OLEUmj47Bgu4TRvLZQP6i8VYhnVnuMS+2LKO0oT9dr0jBkNTEoXWNSv9Se7NsE9GzzQPe8LtKtu3s68EgAL2iuU5hpiWwf2HNVm4tyU9DBqJflnbDDbrxqRsdBWP7pzCnxnmgeHt5zieGFAB8DJL5UEx/zm4gZadGC4dQGHkSscr46sjO3SIIJTLyaxG5tcyKnGTRqR8R8SOehJ/YoGlB3+fbI9CPPqqwM4bMA4oI/G+GxMfp3Gt+OsNUz/7f/FJpB/mLG9OJmwgRhDwR8xMtarfv3dCovG0S69/aU5QILriyjQAvICaJbSqUYfWXzxhOX2OmaShivVTq2OHHoVFourWmVtYQ7GGZDWiGNh3DGEPy7G8PW+v54u03OT+SQNMXfYQOsdBZ7Wq+ErgHTue/eykIUENIYUeDvqZHChKNwdRiczz0a73JRpE20M7Aiyt41JpigiZLv2MpLeQnrHS0hAvr1vsO5jlzE3+oifB1ZLBD0/g7ncVguNJiPKW2oKw6++j64+GbThOGrhddo5DAQP7r6vU0nnw41/zAwMrXSNObDbI2HRr959ckmQgtfbTS3brKBG6wPOty8PhhWHz2uDI+gDvirIZ7emOV3+61WzYOcRWQc04/PK+GOzYUnfgbvr4nTS4V796y41bfEMADFSEUMzmpwlhMzy3sWUqQJYYXGMhLHAtZcAuEnjb28FnWJvo4hMg6TjO2dFSBmYZLj/pAR+4sTrW35J1CQzADkckjJFeFJtwBv4PzVkdsC2NQaR1NsVMDnKGSW+KR0r4vsjZZ5ZAw9s782GMKqr2WsBsGILuwayLoeASD0k8SXzodRTK4mzGcX81Pqil1Lkv0VJQtQwyTQLazGmpbm8CnowF9rSF7nmifSy7cq5hYxdx+jUaP4PAgz7uk2ZwWi6bWj87NmTVcbyArazrCfpegUfpK2LgLlgd5p+/m1zlK9B7NlrNZxhdRiItOL5mM42f4VoCUK1QRY/pY0jNKGa5eA3K7wMYs1VIve8bRy3H2Ao4rOaeK2CKcr5ld108S9qPoOScDX+869oNibfw=","layer_level":1},{"id":"c10254f8-a52d-4bcc-8567-070acde13848","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"数据采集工具","description":"data-collection-tools","prompt":"详细说明Qlib中各类数据采集工具的实现机制与使用方法。重点介绍baostock_5min、yahoo、crypto等数据源采集器的配置参数、认证方式和调用流程，结合get_data.py脚本展示如何统一调度不同数据源。提供实际代码示例演示增量采集、异常重试和数据格式转换等关键操作。解释各采集器的依赖管理（requirements.txt）和运行环境隔离策略。针对高频数据（如5分钟级别）说明时间对齐和交易日历处理逻辑，并指出常见网络请求失败、数据缺失等问题的排查路径。","parent_id":"92216737-d741-43cb-a9ca-9366bed85f6d","progress_status":"completed","dependent_files":"scripts/data_collector/baostock_5min/collector.py,scripts/data_collector/yahoo/collector.py,scripts/data_collector/crypto/collector.py,scripts/get_data.py,scripts/data_collector/README.md","gmt_create":"2025-09-27T10:36:22.348097+08:00","gmt_modified":"2025-09-27T11:16:14.742609+08:00","raw_data":"WikiEncrypted:/j3nBh2eZGsOhaH4GyKbord+MptOOCfYT6UX78XhgHSTzMRnzuB9ba55bkMAeB0tgQ20WSMI4o0Esm6D6vKIExho5Ic+2Jz6QrFcFHBJMlyJb3DG3MnlwqZzadEY9NfvyoNM879voi5VkdpYpaoIUr1b2BjEFQYvuCVPmmZqyl6vxi33zUFj8QIpsouBQ7lAifuJld2uilglUqUTn2mBsVQXBlXATpYm6LYxFzQ66nAI4H0AzQG07fBlq5s43cQY84nPLQ7iciBHL4WKCsAv9uZCzg6j+PQfUAivC549sTM47vvdzabHDM0TQZED1x+wnNNMpKxgLSO1oiYbcBfkJy5yKb9K+QVzUd6AoksmpMwLjyuv8zye9WcRqT3usvXquyAlmhQSZHU3IQOp2yi3jl+mkESvj9U/TlvTkiPJZyP54wE5zH2RMuLNTgGH0EKd+xriU18KeO/ZFtDuyPihH3G31jTlQ+JQ0ixfaB9K+h+91jgZMDO9378rmjLDTHx0DL4Wl2HTyX1yuLtT1MfKu2ycqHhzM1Z+mzQCEqFHEPys3AUcN1DCYbD42F6aT/rA7pFi5MDxK5qVI7ke6RjhPd75H/AGR2SC1tVGLmK1yzkaX6Pe3Xaaz/k6EwRjDtqnZ4N/E3rmri38ATLpWQXyJeBthuHjNZXy05TpwD7qHTjWzk4jvatSqA6t38Qk64z02ZBitIQXXRUf4foiPvO+Zmgz9Cvq9Q2zzwZcOWtZwH1m3uy1ezKSO1ZgxVCRDSgDQDpDdMDPbXq6Sf/75rw05wxCuYiY9U88tdHCLOTvZ6ahhBW+X9c0N2m/1DsqiIl/eN1sZ16IphtCD2wJyeI95cCajaXtMEvzbXAE13dzUjw97QhDW7A5vJdva0EX+BrtqeD6Xyz/TdKT0dDZdeQX1TgrqmqXQCfm6cUkIXGGQYMEjWrN22dVQ/kbajbqZCON7blXze1ECdTPrwRFXKDq9oM8S5tr960zaUi8F98QZ6SjBk8pJkdmYMVn1ObxmG7e8t0A9Ljt13BMINgT8dvdAGrVgukZDDJ3Oe1fo2nFAK3v3TB/XTG6Iylf/t3B9Hiqk8Ud/r05i0csWIcITrcy+mL7uhUUez8IkOQknIFx7QQLk0OL/zwlnxtDgqqtfh6n4eTmI35v7rnRg1LVi9SSp1CqHpOthXxhucNg78fbgAp7a4kaZyDF4vVloFvbACEAVBgqpq2ZsSvfT9ri0yHEhkqFd3mbS1zgz4IcNfbRuVHRmytZFPrf187waHrEH0oJOr6uDbTcMzvf4ON/++JccWd2opWQd2tH9OZToWPeZ8T7rB3l/bc/r2Y68Wn1+DnaJ/oitPlhuSR+9XQ4DFVWYDTuCA6nViU4o1nu0cebUXXKCfohxiRi5OqJSp+EMlyFsQSn5a8EpKUXxgZPRa6Ymg==","layer_level":1},{"id":"c9481076-7cb9-470f-97c3-f5e2e363c34c","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"模型训练核心接口","description":"model-training-core-interface","prompt":"深入解析Qlib中模型训练的核心接口设计。详细阐述base.Model抽象基类的契约规范，包括init、fit、predict、get_feature_names等方法的语义定义与实现要求。说明trainer.Trainer类如何通过统一接口协调不同机器学习框架（如PyTorch、LightGBM）的模型训练流程，涵盖训练配置解析、数据集绑定、损失函数管理及评估指标回调机制。结合pytorch_lstm.py和lightgbm_model.py中的具体实现，展示自定义模型如何继承并扩展这些接口。解释训练器在分布式环境下的兼容性设计与资源管理策略。","parent_id":"2d6c0203-db64-4a78-9f37-7283382ae7d7","progress_status":"completed","dependent_files":"qlib/model/base.py,qlib/model/trainer.py","gmt_create":"2025-09-27T10:36:32.782442+08:00","gmt_modified":"2025-09-27T11:42:34.298704+08:00","raw_data":"WikiEncrypted:o5cr6Bo4m333A3G+lRdTTxUD6Ljj8Z/FQg+eHva0qBg96fnsMZPHcbios3bh9/C1E4aIBR0fCBOamXYwL6LFwTxM5F0k8DAz8ispwXd5YJ9K+yYlOz6eRVWEO6fA8X1UFt9TOxECV7GI9FN4TSRDKziIDpnu1U22vUAGpcmXBpeAk7lCLGPGkiknPrx/NGNIUFAAkkgmRW+LfkKuHXo1DuHl4oPOzyii4iVUSjo88jOrmJ82RxIxE9sLwbSQLyYGVKFWrFbN/2wrAh79RkA+Z+UySZf9J7KHakXDe9tkxhI8MEJUeVr8oE2FuYBRsutS5VyQNF5tWt/XgmFp100Q3ToNs9dg5AcSr/4V4bCsiijjDmUjelWUDbMXrELfgiHxLM8cJPQ7rbZGbyMD6/VzzBQJM3zSeTVvvAG5DwlamW3sMrT6Buiha7fRAR/BQxjDyOfpa1lx3Knpg3g2a7d/SKXT6P8c9xiPviGQnW2KIYvZnda6qEjBOZMYlbs062twiKb1k7jZ9EPanlAe22jPa2LVbCo1f3gpaLQ51nTH5Cccxa5DzW/JrtoJYz2Zo/1RvSTaIEBt/tsjXoUH98YqyJp/ijfxxaEwg8iWNDOHPSmWSzkmlsldFIvuJT/bGwGdo+atJUxUaQVKuxQzV25mF/nMqq13j+2FoND/CjRS1c6yzlWSY11tAsWoPYh4Lgq5Lk/sYud5Yl3K7QepzTgEW/CkQTXIlFEq+LcdMCqOP1hs1mTtycDvR5Er7g3UP/7kWwkrzzeVqCqbn2Q4h0lJBOh7JR4YIN8wkfC4HOXuYPz2ADdOKKmBN/0wixHqmFSMnnDk5HikiAx6M1xnLt2zITCs8gFY2tBMbYDO4e+UWsMuhsVjulv/Wl/0Hg+OfkC8XrxXs1c02JGdorgOWwqL/DyKD4BV4LR2bKRMVG+39og8eQVIvxZ1ryy7i6O0WSnG7UEUU+LrkHa77s8nPGk/kJk/3j4gL4QImjzZgO/N63Y8W71psX1NzydSp4vRRGGRX+omP/G6DeX1sbeMmyymTH4io7ACrhzVSfGVwSqb7ll+XOx7vmC//IVbbUyKUHXP4V3TCcDNTqWIJyGPDkcpa1Yt9aB17ZWIgpxea1FRupbX8Y7EuEUGmLhyApTA1olnUlIhXeicbVn0NW+lZ6+ThevdGdoxScqbYYWWhqTpY6/AnC7f/kr5N07z0AV41WjxYCpKyPyEVxEWMhQY0nCt9g==","layer_level":2},{"id":"35c975e3-f685-4df6-a0ee-07b10140a00e","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"GBDT系列模型","description":"gbdt-models","prompt":"深入介绍Qlib中GBDT系列模型（LightGBM、XGBoost、CatBoost）的实现机制与技术特性。详细说明gbdt.py基类设计，以及各具体模型在参数配置、训练流程和预测优化方面的差异。结合YAML配置文件分析关键超参数如num_leaves、learning_rate、max_depth等的设置策略及其对量化因子效果的影响。提供代码示例展示如何通过Python API加载预训练模型、进行批量预测及特征重要性分析，并对比三种GBDT模型在Alpha因子构建中的性能表现与适用场景。","parent_id":"66a35b0c-ba2e-43d8-a417-168f6e3e423a","progress_status":"completed","dependent_files":"qlib/contrib/model/gbdt.py,qlib/contrib/model/catboost_model.py,qlib/contrib/model/xgboost.py,examples/benchmarks/LightGBM/workflow_config_lightgbm_Alpha158.yaml,examples/benchmarks/CatBoost/workflow_config_catboost_Alpha360.yaml,examples/benchmarks/XGBoost/workflow_config_xgboost_Alpha360.yaml","gmt_create":"2025-09-27T10:36:54.821233+08:00","gmt_modified":"2025-09-27T11:43:18.357433+08:00","raw_data":"WikiEncrypted:qYVAhtzIAD2LqmVcH29ZKooRsexe6EIB534NtGabpwB8/vEyhi+niTtcMJ7PQb48U5pKfzr2JL8HThLj7El092b8ZVdSGC9AWxRD5jypAhVZncdPDhfStc8N8nPtYR2BonDucDmSdladxSzR2xPEDDwD6XywkdlK1NzKT5etOkbddIb9RIn5+038IpOM7xKewI5fuN1jtQPd1OhRe0oyIw9frCXDgc+oXiiWoTi73MucqpnvalJBrhK2CW+Ht3ykjF9pcuIJNv++N6UD5psuAm0FApdq5uLcTS1Y/IlPLwKAw5MtW07dn+05zkdwmTBQ0nCKdTEQOzmV3fbHS4UkBklr1rLh5wGpXPaROd10PAv4Cc1FMsAjrF5BRodYSP2ZXoSY2+zubFPvTUHzFJZt3BtAW33Fulv69lRmUO2gHGfMZTAEQDyePJCb9UWjFdnAXYqgMRGZD5tbHJLqeOFKaaGswt15Eq0WH6wQLRo5rZENbXqFCB/q6XEfkFZam0kDT/ZZvwiwoXn1ouUPDzSTpKSWKqj0+vTWOxNaOqEgMHEoWKWdopluaYWnqaIEjY59bKpuRGPZ1MwyceUjzlYroptuXaOjBxf3IikoQTWZcPMHLOs5iSI/oI3E/E+4ncTcP/QTqsyjWAed3iq2AUEc+lLsjsMc/tpbaMsut0qdibGEK/NjGgNH7RWCKszBKzS42TTy8M+6apD3nyJOXtqPZiQDI87NV+9w3iNmh7xTNrt7jO/lO7OCCDHojkUav+89eMYFMnO6iCAPEO6HZX+XpNZ+IAUi1LaYZCsffbyckkSu5GKrmOfR+Q3ugrY4ZehQ+S2ycP4zj5dNSUVvqgwKFvoHDc0v0ZSNsEHVDC1ud5lKqLzCBWdKHjL62SXuYpMst2mbeYOtXUh9Qhl44OEmczaagnRHSMHP9TD77+yOZYhsj0B+MlceawcNGm/S0FGXDOnUz1uOb8vgaK4GLcGGe+C0ebkYTu0JJ4pTQF3nsJgXCjePojif5RHtDWromvlzSREb+JdsbArsN1+1uqivPItAxz7JAqbA/9Lm7QvVoeWIIeqiNMIuVRFhAdG+H+KtbVpMmRs7hWYT9ZX5jQC8iencN063p6A6ItBFEc4kNUzLAGX3HHXK9NeVoe1vClkc5iaFLAvQYZ4afPDzJWVSLKNpnfClBEzzSTNWAvqVznl51cImaEQqYb1zR4zssM5+i4xk9IaxX8wNhofnlNjhg3ob8i6cMm0E6ISXr5C4a3m0sSwuZsPNXXUg0ajaxKuCVOTQlv0nAkq9QMajhic3LGGCKT31L5jfUCi/IGYPifNT3WTyZJ2n07po/y1sNHFhzX2TGwQAyKUUT6+wb6JrziHHK926v3r8WJtGBnNwlpIWaNIBKcziK6rs0+z24bQH+ZusOiJ8G/wlR6RBAj4fdEvhGwpmMbjGpAWduaNL9O9GoTSi/CKKw1Xs+ZQ66Nxk96i+61gcD8rKb/F2PE4YCv+MmlsVaJCiQYsFPONGXHWrY1iYKkigMpeSoe/uOVwrsPFVrdQWtid8CbwN3LDJhQ==","layer_level":2},{"id":"fdd3ce66-d34b-4d6d-aeb2-55379e51aaf0","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"数据模块API","description":"api-reference-data","prompt":"创建数据模块的完整API参考文档，涵盖所有数据相关接口。详细说明`qlib.data`中导出的核心类和函数，包括数据加载（Dataloader）、数据集构建（Dataset）、特征处理器（Processor）以及缓存机制（H）。解释每个API的参数配置、返回值类型及使用场景，结合实际代码示例展示如何通过YAML配置或编程方式调用这些接口。重点描述`init_instance_by_config`在数据组件初始化中的作用，并提供常见问题如数据路径未挂载、缓存冲突等的解决方案。强调高性能数据访问模式与PIT（Point-in-Time）一致性保障机制。","parent_id":"f0a006c3-89a9-481f-b536-5c95399bd31f","progress_status":"completed","dependent_files":"qlib/data/__init__.py,qlib/data/data.py,qlib/data/dataset/loader.py,qlib/data/dataset/processor.py,qlib/data/cache.py","gmt_create":"2025-09-27T10:37:00.518947+08:00","gmt_modified":"2025-09-27T11:15:33.870255+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg60d30aP1pHH2YccpkFYw9h7PGfOij5OY88Cy3R3NNa+lNW2IYxmXAnC9/HGkUPof9+hPdpQIPCns8FyGQgquqYuat83TemoQsSDUKHTdApQkyIs4fWoGgllp1Vy4/Kfr9oTFtfbToBMtxLMi9frtx9zqmHRiOQBDLE27d8PobhHmGIajh5Z46kYx8IKQ+OP/Aigg1vXLakReYHSG5xF1dKhvopu1f+elPIbx/UzNV6y5l2oDB46ND2flMRcR1yKvBCoZ/dn81uxP2aAC+1ny99iKFGIpS1o0pV3v7GzNQd38f2G69jTTe14EL85z2NxrXS7Dd7wYzhCX0/eYoFCfFoLXHlmSSoYoB5CLc54XZ8Yn+jWPGNrL3uqWF/i/aA+aMYMyE6KKIPTfsflZcvWMHWZViarjmw9UAwT+W5uDJ25rEN+5zNKpScZqgqEZkpzDvUvLDSDDV7dVTfv0upFevKheQu/1IblrZBigAFPNsCd+9Z0bwIQ8gtmCNkU8AiyEPTUjpRc7P3udkMUQXnXdutqV+NrhGvniv+cZPV0DWGd0ZCXgkBctBiwLq584rMD/S2G3OCrVxVvwqPSTUz2HPCcU4pvAYLKiy5Tn+FZlShQKiAdxcO5ZfCtobryxJblDPtMIhFhsDBCQU89Ba+2hF3mdeh6wHyZZroRcIKAhWL/9vRlMQr/okDwW5+AveS70JYot5kjlzeQA6MrgcjzbkYf31iLK5oFhxhoEZSPLggQ0uIP/nSFEvQcQUmH5REL5PdfEI0l8Zz4U8hUEE+JnPpBrSwi7UgC/IpsAA9jsSvNDl8fJFL7MZLKABKwIMZZ0Eroxn1W4f2OEagTinEYDu2eRqmm2nF5r/8FtLAYl6KjxYLYRk2oZQ/XwcqgfPvQPzabH4SeCc9KbvJtdNo4Dynn2+EuasZfIDPYIBRoOgpcqN0SJ4REmFHilYLf3YQHmbI8i7jdJ8A2CRMEn/r7SEqUISE3G/ZoyxScL6tGMSh527SMU1X3CGt8S4GNBib+W4OIbu2W4T34opeE0bpw9WFDogYCHwylbgENRPz3MWMfbYoJ+RI/PGPhHDKWIPGACdFWB8M9qJZQ5WJHxr6eMYv62sU0NxIFtpKk+9IVbTpsxm3BPvu4Um1qPSkObRkgrkIDScvsjXldhJnHDLr8glRxDCat6SKYb5Vhk91RqAEORmw8GiryFnlXWMYn50Eopp9Ex7102GuJ+2IPIP8WGhzKDlGe7dGEkE+2JpIlt8QMhvrZ1Apy/g9aDCXL0gkpEQ5E0dFjbvzk00bH3TRPu6ryJKCXRuXwtQRYNYhRBN8ZPfpAG8RAPKnfiv/NOmp81w==","layer_level":1},{"id":"594a266c-ef43-48f5-bcd9-ff523751ad62","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"超参数配置定义","description":"hyperparameter-configuration","prompt":"详细讲解Qlib中如何定义超参数搜索空间。深入解析space.py模块中的搜索空间构建机制，包括连续、离散和条件参数的表达方式。结合hyperparameter_158.py中的实际LightGBM超参数配置，展示如何为n_estimators、learning_rate、max_depth等关键参数设置合理的取值范围。说明嵌套参数结构与依赖关系的建模方法，并提供自定义搜索空间的最佳实践示例。解释参数先验分布的选择对优化效率的影响。","parent_id":"b53ca906-fc21-4221-b5b8-74cec2815a72","progress_status":"completed","dependent_files":"qlib/contrib/tuner/space.py,examples/hyperparameter/LightGBM/hyperparameter_158.py","gmt_create":"2025-09-27T10:37:11.414182+08:00","gmt_modified":"2025-09-27T11:45:02.321164+08:00","raw_data":"WikiEncrypted:5UlmXk5e8xfEQqYcx/OSoMiGsc39GfF6k9Ou10KfNO0Wmu1ZX/yucLvGVZ/rJ5njgo/1jy+kwI8e/8aYEok6ibjm/2lsxlxDntEv+9+Y5HHnvXVYZiWJG+r/Wthu3uEBeTxjkj0LUB8kFnOtXa3SH3PP0cvhs5q57ymctMAJseDr/KXAVhxmo2Ekj/s2bH9EmLzUp+Z9CsF6iHz7bT1eCmO7UleI/sKtDVpdCqf4Rtpc1mpbctJpOmwbU1JeRUE9ePO2DIz6cJ2UGLdQegF07K3wlzFV+lVu6cv7L5kHws521dVCp9nuNIZnx6WpCSLYPWKvb6M2OBnnzrbaoy33yu8bbS8u4XgYIzIqsdnPQErfFr9ZGwunOKBtW0pXNp1nVt0XTC4db4lvObTVw8UHzeTQImc6lgnESNk+2PnT9JLcXo2DrWNI95APB7D1rKH20eYtDIlfcZbx98mnvUyMBeRAS8wsQcZyFQLUlroXYDjTRIjhZ6uAK9AwNvGjixl7BWkYYcxKyI2ge6AGSv6ip5/q9RT/k7p+XpvAM57uMmy8GElavjKLweVCn2DJx5+JB/DWpBER5O41wXvGNZKKVc8khCT1K7fkEYdHHc2enMTlq+fcs/dqHYYnV082znhPMbkVyO2XCKcMdfX47wv8ak9s854GHzTtfo/g984PaqyKYHyUI1uG3TJQFEzlFhPzIo/X1j1c0LshxZLSdM8mUVNSGbdfbXXrry4oc5IKX15vdI4UzuqszX+wrZGsl4CskJfIpMlBFqJCI7V4nwwKyZ+mb/yBSz3Sl5IroiULlo4zW3a7rQ5L4UH6DX9VYZMcBbSBqAZDOo78pLtPhFcgMlA0xEqsomxFoAwvDsnz5osdAm051+iPLhdFHE95Xv0e3cc8hig1Vltt4COU17+uKKyowbzak8j7LJMfQdxB1m0F1FVJU680oqZMQa7bnDiN8aVKbzxQd4ZbA8sC7oF7hqGJ44UysAYQZ6GnUke1JXo8qdLlerMfLUYAik/mMKIvoyNJ0YkczltfGJoSS9tyJdGxpqeiDyWgSvm4WO8ISn7OQt02goQtwtQT9/xqJi8g","layer_level":2},{"id":"66fdb51e-5633-4980-bf5b-5a453f594ca1","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"日频标准执行器","description":"daily-executor","prompt":"深入开发DailyExecutor的实现细节，重点阐述其作为基类Executor的标准日频回测执行逻辑。详细说明其在每个交易日结束时（如'15:00'）集中处理所有订单的机制，包括订单撮合流程、价格填充策略（如收盘价成交）和滑点计算模型（如固定比例或百分比滑点）。结合executor.py中的execute函数实现，分析其与Exchange组件的交互方式，以及如何通过配置参数控制bar对齐行为和执行延迟。提供在workflow配置中启用DailyExecutor的具体YAML示例，并对比不同滑点参数对策略收益曲线的影响。同时解释该模式下的性能优化手段，如批量订单处理和状态缓存机制。","parent_id":"36ea3fec-0792-4dd4-8cfc-d9f1beed50d9","progress_status":"completed","dependent_files":"qlib/backtest/executor.py,qlib/backtest/exchange.py","gmt_create":"2025-09-27T10:37:22.911845+08:00","gmt_modified":"2025-09-27T11:47:38.857434+08:00","raw_data":"WikiEncrypted:Dmn2WSDytSyXriNXg+5YffWHRRi4JEg1LR7MF3BS2I123LtTmg/gM6PLctIrVVD54kMUbjqx1MNErPubtEgQameLyxuGD2ZaWLvb+kiMRTmAllXtCoNLdrezFBnM1e1s+NDi9cDoOvnCDuE6BLCK/05gfXyeCoinwhZoHHiZOUSXGt1fO1RgpkwAz661cy14MVOfdSTxqfpsuimCOSVmmErE39n9elGFrgLr3RiE8nGGepDpj55eIjWh5Zqo4+w+cnVsDwpmdXJXl2s5euOTFdTLMb03WIHVHQqPtXX0BlHacqVXPc0KO5PAgB25NXjPaqrN7ROhQ2TPofD7nHCSbRSzyJIQbHw3YyZgawLYoh+PUJ5i0pQ9q2rlZ1Ikse04nh8L+k4Pc/XB0UPSg+ZsYhL+O4foc9J09bKpBAv3CQW7snvYB3Guz5qAAtEJLQCMTyjyyPjCKxmaI+mV/c4UzUYvAmPoAZs/pmiK+ii/zWzxhWs49OwrZ8vWHmRekhd60EwYZW8eONo/RcNJ4VXsEvvWmHrquk9xp0b0foC2rhrTLViPKP0HXuaQvvvb02aAoy6S9Txkgl9PcY5uXLHIBTGubuM3NK7MBjl71bG5Xskf1KWlxbP0VAO++8afzASZu8iNkKJQHIxjs8EIyJ/snL2iU2iE/QSm7LuFPeGMbOPo1i18x1aeYJMe0sm24AOAGFkhkAUaxiHGrY81JkB8w35tlKQGAmu2dj5qgEkRWcMfi8d2VRQzXgp7GZ3WXVf1FcGZl2QUkaEg+AlnQl5xgx7+f73Mep+G4AYMhlyVOJBjePr0JejD21w8yivPIbQp6bAtzTKW5i1LwGgawdvM6jwg8uudtefF1D3NTTu0ICevDodJXReqUnCYEGFWfpay8hZj0djuoUrEnygQTG7Brh1gTEcWfPr/i5VoM3c7Pl9apoq5tajELoZyi00ba0RqgSkOH65Mh6lYQN2XjafcfKvwApiK9VOzWB/zGqK56iOAoZ4h+6CzHO3olaCjbaaUwaeFMCHpWaWQ4kSBnHKhRs1dKYaoMa0ecfJX/p6PS5RvzTJwqYkVGfJQEHaFfOR81Pw922gCt5ATQzbCECjCrraDmLbKzkG8R06T0Cug2bAaf5hoHTcBKesz2ruk+eSwW73SRGAfyu4n0W/FDmom8NqIh85nA3P34W7poDPlOjnoRBCEb0hUBzUhS+yYkVvSkxtALuo3wcV1Rs9AzxR3Jvp+G89IKYhNm2PgZY8YsfMzHe4qpMUpGL2Ldy46OL/zOQGKbZWxRb3FkrI3H/VEk5AUyHZn5MbFqMDcP3/KCe/lKaoe6ZgK4k+t+GtInD+8jfaEPDtOlOdiduMRbDoyLw==","layer_level":2},{"id":"1bfa88c2-7422-47a5-bc2f-1846db7a5341","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"账户系统","description":"account-system","prompt":"深入解析Account类的设计与实现，详细说明其在回测过程中如何管理现金余额、总资产、交易流水及历史净值曲线。阐述账户初始化流程、资金变动机制以及与Executor执行器的交互方式。结合代码示例展示账户状态的更新逻辑，包括买入卖出操作后的资金扣减与返还、手续费扣除、以及每日结算时的资产重估过程。文档需涵盖多币种支持（如适用）、杠杆账户配置、保证金计算等高级特性，并解释在极端市场条件下可能出现的资金透支保护机制。同时提供常见问题排查指南，例如账户余额异常、净值跳变等问题的定位方法。","parent_id":"a45e1a1c-ff24-45a5-ba1b-2460d5c65266","progress_status":"completed","dependent_files":"qlib/backtest/account.py","gmt_create":"2025-09-27T10:37:39.464494+08:00","gmt_modified":"2025-09-27T11:47:25.562035+08:00","raw_data":"WikiEncrypted:3dIsHCE5EGeVKP2C6D6lOA6k0G/G+5s+ixWdPEOBwMRBYmhNtf+2u429jj7hLuw7OoK86troVtDvOq6dS09hzt+oW7S3AaGILjJl+wllS3ZRROdNvAwN7ERd+9zOB28U514J8s9zQePSmBGaNUy6zh8TOqrCD5qkKf8jwsjsGV0IAw40POj5Sy0Kutx29mOh1ck9P7JmWHtcrYVaLnpdSPNPvgYS0Y6/qXDnbl57FOMULueXSwdolmaXWRt5rY3jyuyxcLF++zIgguZJQrd+NU064OvTp4o154a/qF9hMqi0tT3z8y2rPXKnJDvJO68AFS22ko+juKiMEoiMsZBzx4YSYPJagzWddB6/e3PR7rQGCfE1nk0taEvzGYeHirvgAKqRpI1SCKHL4o59XuYr3/DItJ4iZ5DCKxLhyeAAfZ32iNltRms1jC3AAzEg7hhd0X9F2UgqYb5pQ6CGC6kBvID9aVLzVCqZnFhJQ2dz7/OuEBzMB8e+YfVoqLAki9xx1cWCupnhscJ8cVwYUvAUW9O1ssyW5fRCcAYjO0zQaqkdL7fiW/G+YvmSQ6XkvI32zovITs/YupH9eAUQlUyUgMpoBYZvA0bM7ZZGjcBfRTCcjipz5dtdDznIEP6d8GJrgLTKrKol55ZmRo3Aw/0m0/NP7/litEDscMHE0Z1j+q/b8jzawfQCc4Dz553foxcNzlxKY8ySSL4OAy+YTtSBgXTePjB02y901Ood3FOOfRBjuPl7qubWElak+GK3Yf5F5RCeeIADnUMvpEZU9nBad/v9Ff9gEkvgqTIYygJpv3UHYCFPifENJ7vIdRFR9aupoamqc2QYQc8p8rbYd/PdoGPbTUvZhKGkx8L/YGAAi59NGaeLwtTcr8V9YYwJlvRQecvZOSjeGi0OVkRsDdwuTvvyiGCaAvZxC6y6XqOm+gJ276uLQT/YIGA2WYLE8HK35z0KbKLCXc+xykSnr3nZRCugbgOykb2HpyhOulf52WSpVtjo24brllQysSnIqmiUArjIIt8SjQ352f7+PguFaIsLL85341uj2XeS63x8TMsPIAQhttlsn2Nya5ti4wOnf2jxSLs7meuLTz4GiT565tWVsI120tWd54+3J7cDPU56Xm9bhQIyDKpjDb9FkM937EjV0MBKkLJt4cdQP0fMl+aoMMp6QvezlsqRsm7AOeraaKA6pzk4fFrI1pDj/swsPRpPwdVio4BuTxGCuHIL6KEWyN7qflWEnRIEHwpLECc=","layer_level":2},{"id":"e8340bf5-ddcf-44fd-a015-1067f62a447e","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"核心优化器架构","description":"portfolio-optimizer-core","prompt":"深入解析Qlib投资组合优化引擎的核心架构，重点阐述base.py中OptimizationStrategy基类的设计模式与接口规范，以及optimizer.py中多阶段优化任务调度器的实现机制。详细说明目标函数注册系统、约束条件动态构建方法、求解器抽象层（支持CVXPY、OSQP等）的封装逻辑。通过代码示例展示如何扩展自定义优化算法，并解释风险预算分配模块与交易成本模型的集成方式。分析大规模资产组合下的稀疏矩阵优化技巧和并行计算支持能力。","parent_id":"aac29f43-9f90-4c80-9269-26885f4e524b","progress_status":"completed","dependent_files":"qlib/contrib/strategy/optimizer/base.py,qlib/contrib/strategy/optimizer/optimizer.py","gmt_create":"2025-09-27T10:37:47.600572+08:00","gmt_modified":"2025-09-27T11:48:36.302154+08:00","raw_data":"WikiEncrypted:H90fZHaIqcQtWj82/8FonTxCNgX1eY8d/KwEwKvrL+gO9vhCuBqymu9PKXI7VV/3IJFkBRNJPZrpi8YWVM3p2Wws83CENEJj/rZWapiPnu90qwclm49VhwF089iaa+VHHUmliWpxorSR5iec9lg4MeRZVnPF4OUQCqOTd9bIvVeXBXv2/MFAiico8zZcTataUy/0gCwjxEHrv0crNtnaCaFOaLjiM/9cG98HTHoqvXBmuT6iXhnXzNbMYAn5IcoJc/3lWI6Q8bPFKX1UW0YaO8d434L9t/b+Y7V8jzjIUpk7gp2Gyv2ZiMRLbn1ZGtcUP9LOmwTfEPVVN4csu+SUbDD4cNvX1Co6T9g7ewCLxAB++HHdZj0mpWorZY42oKvHjSI7oDZP7NPq07hcLroBgpZSnQimRqdrCQ41JD0XUIIBbE/2FTlubOOmASfyOkbWssJJgiUyTxt8NWIopcGrW0d0V1/sjZsaYISVifs2IKwVutTa8QnPiqSHH5WHDrDRa1cX+fbB00oah45ubXtF4yqsdzSI0uR3mKUlMMqOEWJ1lHS7x7ge/+nyVWEuQOp4G3Cr+4OiwG1V9wttjFEeh8QlQqX6imdxA1Y/JbOnsctJhJ8D3bWtGpxqWB2jFqmmmqiwD2E4RGazEIO9LV56z9PAfKPHh4EcD5vQcCC2yblvtNWhD0FXbQm6OmUq7V1zbsB55ZA7toqBhtTRvdVD8EFtqsWxJrH0OEGvxJm9Fk8NL3BpkUwmaeNrJZubaf8NXr5F/5YMEEajY5NmGi+v9YSqQVtTip7+oGzkmvhvuBZwk3HIlTIqgSgXBIPPXnWvsF69RPhQcmbc5YGvsbqYWmT1IhaJ9NOuhrbdnc5W3Lpl6D9v4/aEuMakcKGWWf7fzEkkGd3TEDFdu6Af8PVc8/1r21AgcfJiTQsjiBvZs69uX3VSxTDBN2fZXdoEDVb56e1QRXrQYvZzZiOHGGa8Z03/ZsKhcAsVJ78wWGNxjT5UZMUZrRwZZ8OaXNhYr5HPXOswoVXprG62e3HtSAakt8uTt2zxAV3Sc1cP+MxR9RmVt0K4tBGWtR6pZudxw94byaEjHt5N524DIac7UyAnh+mHMb4AODyIVBNlom9KnFGGc9PKGP6TgwyRlGkcc0WebSgHRJPl7lYFfJ6USWVDalqPNoEl4PN1+QI/OstYsr4=","layer_level":2},{"id":"aca40851-d9fb-43c7-b5d7-4b03ced8e88a","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"订单撮合规则","description":"order-matching-rules","prompt":"系统性地文档化Exchange模块中限价单与市价单的撮合逻辑。详细说明价格优先、时间优先原则在回测环境下的实现机制，包括订单队列管理、成交判定条件以及部分成交（partial fill）的处理流程。解释订单方向（买入/卖出）如何影响撮合行为，并结合Order类和OrderHelper工具说明订单生命周期中的状态转换。提供实际代码示例展示不同市场条件下订单的撮合结果，分析高频场景下时间戳对撮合顺序的影响。同时描述异常情况如未来信息泄露的防范策略，确保模拟过程符合现实交易约束。","parent_id":"8a795b0e-5874-4e9c-9e5b-25bac7c2ce78","progress_status":"completed","dependent_files":"qlib/backtest/exchange.py","gmt_create":"2025-09-27T10:37:54.128034+08:00","gmt_modified":"2025-09-27T11:51:17.686749+08:00","raw_data":"WikiEncrypted:1TcXmWRnDAgI41cGfWTUk8vsMSi4wfiqKEOJLKeyQLJNDjsZyFiKDkym00kMM+CmyfwKQxjxZyqjrXLurYcOxt9u4qNZBVFUQM6+0AKcbbSVgW8qfSnXitdfOTM5i8F8O6nYYimHUnlu0XUXXbPe77T6fE2fCckmN8YRdoy1Apl18dsYC5pNS5MHX+w9uKFgzfKpxdyLitbzHTdGdoER6CFZ7SMhK7xRiYmegVw32ag/ddkOacJttCNpFaDLxwJpFALxxUVIDGl+mgVJbSmgVG5RkCxDCSoW83Ncrq41IgEvZeEbR1VyQLCKbFoxG2dN5lUtkplvvQUO2Wt2Psq5XZ4gSADn3L1haXuZytOpN/6NfyKdLeqhnhkPWH2VKnMXo8ltmL1Fy0VIY78HsxVcon8eTVX04fGmVDsAEsvtA4ySupCmIFj75XvOurxv+9bFiFweru1K9tSemDccvI0XJyPrjM5N3zPmWHGd0WA4nJsMC6rejiWdho0pgmQ6iC0nm4dsKjzcYNU6pkjpp1DfkCzMeKBw281CVbRa/YK53e+mxuqDeIIJdeagRh5V88s+kRY3CbLtL9kXnZsmcEq2Sb0OnjtNwz6N6LB/BT9lFt/zX95OZnUXyY+FIHQwXWdx37zm3X8aeYMux6pP0zrTcoSpQXJGN+Cv0OyDo0AmaUiReu3eCuyMGASD1QOdlIQah1NiESOXvyeRae0ncojL5hM6A9lAxImFYhMqu3RYOa0YEOA4v7l8rmy2URtA6R2vQlNNtcOZA4pNzH8dYYgo0km73rHaBDfqbwFdwGtb2rd9/N3fOgXrkbyd6fSIQTqXpnw1CYq5s3OhvsemRfAATKda8Tv/Sh/uLgc5NzFT9KlVSmBuSAxHRwPmy/gN5b9knzfUyo3evT2ocCoCq3w83jQTSD/e0YyeVVlKOxjxoZHmkdm44SQvd8e/xd3CLCBbRWg0xzCb3qhM9UDaJIRZLiXMr65Y0luggpyaWUW+wkJWMEJSo662apkRmQ0RycXE1lOyJr6iR2ZzZ+z4prvG2noZu3BMcKlPs+u7iX5gCQRiSMiI816Upy29fBl7hlAaaJXGNEhbOyesD/7MCWrUrpku4PZ+BORUK9c7Td3TnY8wTTkXI8wON9KzxKbPDPbJmOxJLMzQsR0XcPbiOA56+Li6GlQyw/dKY3Sds5y0Qybt4LlfSHTDz5EO6k/cVnlkpb+YvDswnzf4L1stUb/5heEJNzGxWriVxKWyvT2Dy334RQSj9Q0nj7r7Sbtehstz","layer_level":2},{"id":"12908bdb-698e-475d-b73b-f6e11dee778a","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"在线模型管理","description":"online-model-management","prompt":"深入解析Qlib在线模型管理系统的实现机制，重点阐述manager.py中模型注册、加载、版本控制和生命周期管理的核心逻辑。说明如何通过OnlineModelManager实现模型的热更新与回滚，支持多模型实例并行运行，并结合rolling_online_management.py展示在滚动训练场景下的自动化模型切换流程。详细描述模型缓存策略、内存管理优化以及异常状态恢复机制。提供配置参数说明、高并发访问下的性能调优建议及与外部服务（如Redis）集成的最佳实践。","parent_id":"509c2946-5c94-4f98-a278-6bd995ab8f23","progress_status":"completed","dependent_files":"qlib/workflow/online/manager.py,examples/online_srv/rolling_online_management.py","gmt_create":"2025-09-27T10:38:07.951285+08:00","gmt_modified":"2025-09-27T11:50:21.729973+08:00","raw_data":"WikiEncrypted:rg4XnZhftBb2As9srCxz+GMDg5n6HTkce2wNZ+2GO/Dmud7WyCcba91jJjfCQKWoDXM+5p8pQrsbWLpGKAl5CF+OGkXmCw+qhmjwhqE4jar6dVBCRv8soAKRqF5mK8+CcTI8QJRoNkUj75v4UybDOmDVAzE/kgHzQ/6C7n7gNW9a88tZq2HLbzo1JYXlRfUPjmsQGMd+0SbhMu57ngQ1NcRj8yrGv8LyC98k6Xry0EvdN1e2RXZqapu0LGx3SitFuBRAThhPWKQxEC40s/y8mNzLHS/bdIqPIkr7NfzhNTfSa754aquK9yvpkZV5fKSc+pGPqVIpsFTQuG36/CmAzyElVJOmG2VMRyL8rpKFB5++DjHcTLGDeiTBYW5Pf7yiOv0UZhzdEl6OkHTCjuDH0BtiePvrW07hn5OxWqHxuY5uqWFOT6zBdnGG8coWlluwI3eFrdOFFn69WX7OaJNGm+gT13Dkbp4TwG9OHkPY0sobHT642/mkImIAqsBYpjgV3ye/zVBFHq6ToawgsxMGRKnvm2ZiSvv+kyEi8YK546v8EoIMVPgCHhXYzPqNIKWTb0oXJDT8VNadtHmJbPROTdtp8LSMnbSjANftMxL/AOjMGXvkF9MTRWRjeRlnXSMcyIgVQYpBG0p+V3mLEfTm62kUEotuAvX3TPl53e4VmwMtCTZW7Mpa/9XlU9CG2QFcMmwdaput6x6ePZjPDAzBhW8bGH7r7zoIYXv+Owb0IEvkm/g9W9VmZTdmXpz0wDf+OqE5jYK4WZ4WeCfWwy19CNu9OM0aTJAWrDJF30kJS9XATL2H65O5CN9e3dXY1pwQ8NZejFia+CkG9+Pg4H0oNtV6gYIE556raU9YbPo5tHOO6aavSHi3jUryrV7pbqHNbO2KBgKUkrbqVahENpWOah8u2RjZjA7j4FmplKrACD0HodavwimUDGmPkmTVngFuPqoPeg9O7snDKsFXTZfEUkH6JdL0APcMqVzGKS/28xkEeqAVIIn3iXV6naDgWDQUw5aUnxg4vWEKvKLWFq45zIbG0aRDpGfuwn64udWPTFYxaO5Y1oPZI/QflI134frOtGmpAbafztqx1OrS4TvpRyBJ0cSxoiKS02Dlfz5Z+7R3wDryO01LBhP+4RMuzg2cRhbAKCIfFdd7jaJSQJYDnwhNEXwhTCSufSgcvjnyN3Fy22OfAX/9OoZsJlrHwb6+","layer_level":2},{"id":"855f6509-8186-434f-9336-4134d6e1c9a6","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"核心执行机制","description":"highfreq-executor-core","prompt":"深入解析HighFreqExecutor的核心执行逻辑，重点阐述其基于纳秒级时间戳的事件驱动架构。详细说明如何利用high_performance_ds.py中的高性能数据结构实现低延迟订单匹配与行情更新，包括内存池管理、对象复用和GC优化策略。结合代码实例展示逐笔撮合（tick-by-tick matching）算法的实现细节，分析在高并发场景下的线程安全与性能保障机制。文档需涵盖执行器状态机设计、订单生命周期管理以及异常处理流程，并提供性能压测基准数据作为参考。","parent_id":"5d8e37a2-e264-4386-a540-bd5de2c0d9ca","progress_status":"completed","dependent_files":"qlib/backtest/executor.py,qlib/backtest/high_performance_ds.py","gmt_create":"2025-09-27T10:38:22.409232+08:00","gmt_modified":"2025-09-27T12:10:16.443383+08:00","raw_data":"WikiEncrypted:cLlbBxvI2h5FnaOTZavMH6gCk1OzWDTtH6H3DALh6kF/V01MTKXwVdEW7Go6WseBgpaoV+IHm/vD7lTp/IZ9jsqZ62oU6KbIdVSO3xPf4uhks25YlpRJMqrFSi8jesh65B0eWWvl84G3Er7mOSmOfhUyEuqwI0991AZdY3oJ7ZRf1MPmTRrN4naURUGzwxYbwsi43ln2q6MRJs9EU/uNNZSJNLHzpHw42kiF7i07r7UsbGDeL6f8keq9kEDAqVywU9QFzkenJGzoSy8U/zX9ZfI54GT9gIHz5tyP8lrDK2AKs5HZ0zlNGvvwtVCv40pyOt/yxNH9kV2wYFjSF3lmRHbza26XOCWVNzEyCrbf8W+pGorC1YxffL02d98xfRCXhk64DQ2SNAEHxsXtFZj4G22d77R5uilgrguMVuWRRd6u1Ugvd75bBqTQkqKhDX7Kky7Rw/f1B/n2OMCGVHpFwDBZKiUR2YJtcdOogys8iOdJy0hVAfAxf15862cNYOH6O7odBVzQGjrAc+EBU9Hig8lH9PaTriE9zRvAMRg1+MLKEbp6M3AGR+OBeaQPuQEKnWKiDU13TQsiX5/gLwLB4OvN5mMFsg4l/P2uWjFr908WSBRK6Ro8AS5MN09ZnSxoOZMBXTj8+1QWe/srkdjq8wCumMAVvnUyj0L37qhYBk4MlF4whoLoZ1yGtNjSr5+kJSyS8hlWi+1HhTk8eiYf+YgnoJQKjqu8qXv/JMQZK1Y8lEgdxwT9OKYX8RtRbI+ZanebShU0912EH8Xdy1PyH9c6ik/a/O8U+Wd7ZUam3sPfJcRus3rmeP6nLwzhO8wny5jP4Pic2GXxN93l5Mi0F5Qv9ISeJ3w5sKjpBjLUHS6+lOLjRfCx76rPWSvZdyjFQGhltMZfK0vXzk2UNCCu1k7np7MzDazINzP9dOKsGc7KwwWVPNDf5Hy9f/7b5hUznGZliU7UFihy6Lz6/wjnpKTnIWgqrthc7tC13GxzSqAkjzcX6ofBMRsG6ySyidQzZvHkgHOb6tbrB6HxWO/nd68q/x9zT8FPkrXMCNXfCRhTBdJ06r13PMGlAgjbPVhqES84EJtvYiWwg4c5nXzeBvS9HGT6kmUHXCHDJBfkj5BD59uyQvJxjPaaQCxBXbhgha/H+5ZQg965nXOjyxB3DGAprdlXiVJnqxVV2PYRuWw=","layer_level":3},{"id":"49546360-cd8e-4bc4-9de2-f1c0629aa5d1","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"LSTM模型","description":"lstm-models","prompt":"深入解析Qlib中基于PyTorch实现的LSTM模型架构及其在金融时间序列预测中的应用。详细说明单层与多层LSTM网络结构设计、隐藏状态初始化策略、门控机制参数配置及梯度裁剪等训练优化技巧。结合workflow_config_lstm_Alpha360.yaml配置文件，阐述数据输入格式（如序列长度、特征维度）、输出目标（如未来收益率预测）以及损失函数选择。提供代码级示例展示如何通过继承基类自定义LSTM变体，并讨论其在Alpha因子建模中的表现特性与调参建议。","parent_id":"6bbf8837-7976-424a-be4f-c64d28edb86c","progress_status":"completed","dependent_files":"qlib/contrib/model/pytorch_lstm.py,qlib/contrib/model/pytorch_lstm_ts.py,examples/benchmarks/LSTM/workflow_config_lstm_Alpha360.yaml","gmt_create":"2025-09-27T10:38:45.911902+08:00","gmt_modified":"2025-09-27T12:12:09.145723+08:00","raw_data":"WikiEncrypted:w656rRQQH7PydPEt/lCyeq8yy7371vfh9KZxzuooD4Grvi0GZt7ugScuQUxPw7sDOApEZJ3YkkRJJC2rZBAafGWAEro11J8qktlkdPmmMn00N1LvtgdTp83g80LjgkYjyb9F7pQxWxNMv7VpwlxKA/yOCT9EXOkEvJJnTxrRJ7g6YO0G9scKGUILIV+zMa1vkh8QXyy3HSgvB70oTB0coJS9TDE0MCn8nHbcr2Y41eGnwbk8ipnQqpzB6DbmahzmMthehRQK77Iz7YlmiAqDiwwiVlFue7DxrJoykngklQgi5IIavq8/IL66NEYLIwognsTdYr0H+Oazk/LPO5fY+wHL1nMG8U3TqjB4jD1bNVyIX66RQXRJc0LIHX8T5YU3qErPdCX3tp9rYoqh0VWBbLbj7SZl+Mc9tcREY9e1tCour8BA5urk2inRLUdtToMdzcLV1brUphtSwmCC9pnIsBhjwmXH6Ot0Bbr3pRK0WihRVuxxM3MGNUI3EuoB9eDmzunM2m5LvYs1fSKRVcg4EQ6h9vytaxTVFVISaAXglUE+ULz1kyXmRSgt6p7YjfoWQOS4PCAWSH9lKtISzXy2GfIJgyQCIekp+E01BIYJT4d4CxzWdKTrmvRMik7K9RNOZ5VfdTa6MdmYzRgyhpKX48lFs1CMU5QXN+xId0zOd/2zyhUEBawGbQNHCSMeeGbRN2m+bdj9/uFEIGMvRAjF6bmnLGY+7/W2iFh8YQHpAaGRPrtngdSPqjcsEZUWRt1+5iSia6ASV81gqI25UaVq7ffscvPy/g5LWkP2GWjHXjdUGiKLoaOw1IYLYhv2DTAnbF4y7rLLWHQTZPSFPAmGJDmwpbVechIVSBW0NldnNEiHt/lOeFGMVZmBmS3PASf6ytwFhD6YSfV/Vvcum1Pbze+TeFt4cg2Jy1ye37jNYa68YWH2bWBQCVwQAxWAMs83EizuGWgY8Swsg3unnPlfqfCr30qQTS9sqJ8jKifOGKjlbUp6/QN6yRhqJdyw8PuDKSdE5ZmKEC4HEYKX57idNkd3B9XtcKj10UlcrL9K7ZZVh5pBg4DLjvV4ekiub32d3J3rQANvv0DRj7OzePb5s3kPenIageRSoZ/ghF4cV2/7tGOeU2bwUwC/2Zs+fGgOrftp4EoQHsvVFdbfVsuRKXqkGCqRwitLBBSHwsMXlTtjJeMmO3Nnxpg0Y5HxirEewuZwQNU8sybgkjCq2o/qeQ==","layer_level":3},{"id":"d919344c-2508-4ba7-abc6-74ba78558be6","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"执行器接口规范","description":"executor-interface","prompt":"详细说明Qlib执行器（Executor）的抽象基类设计与接口契约。解释execute方法的输入参数结构（包含订单列表、市场数据快照等），返回值格式（成交报告集合），以及生命周期回调机制。文档需涵盖类型注解、异常抛出规范、线程安全要求，并通过代码片段展示如何正确继承BaseExecutor类。同时定义扩展点边界，明确哪些内部状态可访问、哪些方法可重写而不破坏系统一致性。","parent_id":"763d86f8-f7b4-435e-ad6e-05140152c8fd","progress_status":"completed","dependent_files":"qlib/backtest/executor.py,qlib/backtest/base.py","gmt_create":"2025-09-27T10:38:49.952196+08:00","gmt_modified":"2025-09-27T12:13:46.367521+08:00","raw_data":"WikiEncrypted:jMgId5h0EoZtwilIIkOV3qbvrZBJPkpyQR0ZmJfk+YbR+fTl/izuXNHEhjECjhWbrmoqxHuUzh6L5GX04m/e9lCnz3gMo4Vmrd/0/FBcmD8kmhZm3jvUwZukzalD2+Z6picYzeDhgM8e9y9/MW/7UPVISXS/k4a6PpsR4HYqryBtIBAylfMPbbHQdfRbsauh5dM4iq5taNDunoccVe0UOzNpJ1QE6YBBw09OuDKazQWNugs97XFWvGpJwy0WhNarJTidvIQguOmmO8TjynD27s/yfMgXNR+7eD+GMy0VSw+Dj/CjgNnuBqlRPeDIhq2Qb16++/PHDlD9Shr1I4kdmMmip0TX/kRokbftb06uf/ySQP7dFYwV6WKP5wJgqsZL3LzCVvdN/IvFB3rNvbgP2Isgi84bgC9PeOPhj5KAWICB+mIdtkBB+s7T0kVuiPMMVEYWLpi9US0bYy5cJhRp+dSDDWM/PTEA+kNkHoYvir9ieUfwFjEtu3O0V3xeq27JNnzzEc9bKLHmLJTQxcQvi3gfr7mP9maCk4nglfmiNU7iVGGrlVarLoBAlbY28Nz+N54uOUYVoxLSjKRdRxP53fQOQ38DabtmMW/LSCgh+aHtKbQByFQZNgK3phi69Snujtij7TwZ+IaMcHOcfEaajZBvGI9aEmEoZuZZaTiDHF3Y1gyaaMQ5pjKMkRvejCMRblA2RfFS87dHdBD4UdCOe3dqr4jhsWb56E8FYEQhpB7019Ht3jBL02pnMFsRG+4CJ9aoE9KO4+yW3hZHaQeXBZdiXmSDHTusuH6/sJtRbpiTmxjLyjqoI+pLT6KX013ezonqaseJakjrxyMC+GQxnIQfO2X5cxoHOeFqIhUWMMU+pGQgz4EGO/HoDXGg2VjRx16sDyS1dqzypo1OpNofVcfnTtMiJpSlqWpYft+zOhfkqMfleG0sx+Xtb13I/IfBRZIcs5zIJ/hkXaZ7mzXOy99ck54EvJ17g3vwriG/IKErg99okm0/5zMbyRSNdmsX","layer_level":3},{"id":"7bcaf13b-a41b-4f2d-bba5-83dd34b350b4","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"限价单撮合机制","description":"limit-order-matching","prompt":"系统性地文档化Exchange模块中限价单的撮合实现逻辑。详细说明价格优先、时间优先原则在回测环境下的具体实现方式，包括订单簿维护、价格匹配算法以及时间戳排序机制。解释订单挂单（pending）与即时成交（immediate fill）的判定条件，并结合Order类和deal_order方法说明部分成交（partial fill）的处理流程。提供实际代码示例展示不同报价场景下限价单的撮合结果，分析高频交易中时间精度对撮合顺序的影响。同时描述如何通过volume_threshold参数限制成交量以防止市场冲击，并说明异常情况如未来信息泄露的防范策略，确保模拟过程符合现实交易约束。","parent_id":"aca40851-d9fb-43c7-b5d7-4b03ced8e88a","progress_status":"completed","dependent_files":"qlib/backtest/exchange.py","gmt_create":"2025-09-27T10:38:57.016011+08:00","gmt_modified":"2025-09-27T12:14:01.950167+08:00","raw_data":"WikiEncrypted:6Kc8ZwYrOt5+GjqsOLu58lS7xBhtjxl54eJmjb0IXoFUl5xa+7Anr/hhtQcVA698U+fpnzSxIAl81XCJ3YeUoIkD6urEQOijmry9aTXlpqv3OUibmbRbGq9C5yCV8LKhU8BRaS96kAKrT5lxMjbVam4fbQeZ3cwxryL5LM7I+e7m4QyWcYQgbAk/2lbmh3JJO3EHK7jaMxZ/kMNe8J8MKMe28YQo4IEqugrKQ1PQBzOk5NsdbAC4YS5LKCXegTrkxBEijK/uiuQv8nnpwJiSEQ4kEiaNRijo+2bNVZHjhVYDeeEzyM4Nbdtv4HDLzW96f5dUPco0glSdlsN8Jl+yhB5oYBvQv1wvo11P5RIGkK7Zp9IRT2e9XtwDyInPURRtMIESN6SrYm+ib4lVBwk/XuupIRn3HSiuQWs7T0sSw3Zi+VS/bdErz7CDeGVQCPXvewLBiYUo7cEn81VZlRga7j43X7jb+eBFc88yFKRnNpX2eAYGJEeEATTsGrp2PILBwC8+QUj5etWjTk5c8z8TN8ysL1pMPP08Uy28Erg2T4XifChtgAg+Hgd3Ebo4wWU3NkD/MyUBlYD5/oMNCmobmFEOdMljXCDyJGJLFI2SixsvV9NQ8SO1KYKV3qgNAU2TEhjTyCj3a6gZEqv6uCrOo6jN0AymrfcaRgnBqfkwwRhEt/qEVoLDKEra532amv5lRVJHB4d75EVLHzPpfCIW5Blw2yT6iAT6J4t5/E3yLOHio5EhKgPEa3o9uDX1SVbmIyCQWN/fOCcDJ5suBu5NtmhKaDIR66XV8U+6/jDFAqb1rBjjflvvQ6jauYwvXtV0AMKIB+qLOUidlBbDei+dEVCVKEpavB9dpYQT77VcuIqxXN12mh3JfSpN0SNLR+vKSGdc3OtWutQu8t9/xTqn5PPhbD40iFvJI+jnyLH+O+K7D2194BAuCLEqgA6Y+aL8dkrcCQuUlanKVrX8ccv6DEptgpi7qVNaaFFBOJ8Sr6bjXwwaY5eEwz7Co4WmXZtA9y3waspvaMWGupesPe7SATvZ4lzldSUYFcR5+gkfUoS2ZyOBDvdEEwBthKYjrrqb0Hg9g+VsU3154xY1HuBPzRNz//zpouwfIuwk8eR7KjJ+fIU8gbHPXzMCsRw9xe8DV1ttKr3TxTRAMH634ISGrK4uN7TI1g2Ms+BRTz9BsuqemTmaH3uLqNida/tIm6lSu5YbpDp/ffBxogFz906NzBMRRjDE7cWJwCmZfISOk9uRIAc8oSQVPFv1xkSY/1fpLpf9JyTYqtDy43RM4SR3qojA4zzc4yth7ljon+q/vU3w8S+JnL8iAeJ7h8/X/m1o3SbmM+wd2AH8L3pwQFEihjCUW6AQc6YrT5Ih5MxLcLo=","layer_level":3},{"id":"8bfdb83a-aa3a-492b-9ca4-be69b8428558","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"涨跌停限制处理","description":"limit-up-down-handling","prompt":"详细解析Exchange模块中check_stock_limit方法对涨跌停状态的判定机制。说明limit_buy和limit_sell字段在extra_quote中的数据来源与优先级逻辑，解释其如何通过get_data接口结合method='all'实现时间区间内的全时段限制判断。描述direction参数在买入、卖出及双向检查时的行为差异，并结合Order.BUY/SELL常量说明交易方向控制流程。提供当标的触及涨停（limit_buy=True）或跌停（limit_sell=True）时订单被拒绝的具体案例，展示相关日志输出格式及调试方法。阐明该机制在中国A股市场等具有涨跌幅限制场景下的关键作用。","parent_id":"103282ec-7831-4657-8318-d9fafafe4fae","progress_status":"completed","dependent_files":"qlib/backtest/exchange.py","gmt_create":"2025-09-27T10:39:11.95665+08:00","gmt_modified":"2025-09-27T12:15:57.838822+08:00","raw_data":"WikiEncrypted:6Kc8ZwYrOt5+GjqsOLu58pcSyV19h8aMuUhXq5HvPsRYDIugigs9BET5Ozi4tf5tO/9pJIYBjF4dGYiPcL1SYu4GNYpUNhu79phGi89gCdP6BefqjLX72/Hi6QMD1sBYyOxXvlvWFzShXf+LDMAmI8PVTbzP+Uzt9JtYmaYHfREsjCOgPc/AvLBMww8Sz4NoUiLKixQmtqxIXy7ytqGyE2/pojFxZbfGY3SboHjulbL0/a9EIHYVKQRJntDXBtRg2PJMALMggsa/qzgyjmnVP2RDE8cz3TR/s1g+Qz89HlBM1wf/QyQR0BETbubAuG/EXwYEw7OMfHIjVkY2eGs0w6zGu3hffL8jnLXVzwbjQklGhrkdt3Dc57z3Z9VdvvVVB43VxgdTfIBkqK/PeseLYR6NxG55XBT+JxTYa/eojGxQC7Hh+W9a5uX6SPifWrbXAVL5Mky2rw54EiqCxCzXWTewNWfOQxwcYix4q2jJWZpZuU+uLEjeksXMWvnXyePP+W7Ds+sZx0AwvvdYX09oxX8eWC/RutT56aARrb3wsBpN032YUrYcttv+qFjbS9oLrf5P43oN32uPBuh/WTuKps0iPVWMqf88/IlZd8aQ6HFw9lTIt8/2khEWB7SI+bEQD6uvxGX+/xU1Vh5Di7NVHuXdABt0cDKDq3uSdj257G8rBeV9vokgS8dyUiVCf/Qqz/9Jqa5/n57jLalMNL6VV5G/il4wO5bfy5hxfjnoSYY0DFJK4zb8qIY+3Pg4e8qVTxWFZPfXdWvPuQI8HkXtnTiXQJiek17JlGJRPso3S16hYxq9LuwWTEJbf6BUkdoM5HrncD8Rkjpa6KdMSnyRYULaPmSaA+bRg0TE6GRilPSV7PfZU7n8fG6Cdhqlq3GEk1/VdihRn/tEP122F6fW+cHk6yWjYR4DvV/AS3TngTEeN3PPMXJ3l2+Vn/m1BIbOSmlMIFQ+bIoPLCT3DR+cQs7Af4hW+A+2H36RY58QDc7SRnhRROwqV6O4SV1hriM1+KUwFAGM9iH1oxg+nMGFbzsc5s1GDXd9ghKxi9a/r/goLmHJnKYmxyTmn8cuyoLOfvVo1sOcdEH7ci+fgOR1UVo4m19tr/8sfiRhFJEXDT9CKRLUuOCcalsg4jjaULYcJf7bpN3q//ioeg6iCy9+UUtpD8HwjgLvFqp9IV7W8PeYSEjoUlMOji3QrvgFK7vsGZ8UAbbrnOz3apR9fUXFpw==","layer_level":3},{"id":"d636a2d0-0fb0-4e3b-877a-883a1d1cad63","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"累积成交量模式","description":"cumulative-liquidity","prompt":"深入解析流动性建模中'cum'模式的实现机制，重点阐述如何基于历史成交量的累积值动态计算可交易数量上限。详细说明volume_threshold参数在该模式下的行为逻辑，结合DayCumsum等自定义算子展示其在防止过度成交中的应用。通过实际代码示例演示如何注册并使用这些算子，解释其在不同市场时段（如开盘集合竞价后）的适应性表现。提供性能优化建议，包括数据预加载和缓存策略，以减少重复计算开销。","parent_id":"fc288f22-3853-4393-8138-199e00b56885","progress_status":"completed","dependent_files":"qlib/backtest/exchange.py,qlib/contrib/ops/high_freq.py","gmt_create":"2025-09-27T10:39:18.438725+08:00","gmt_modified":"2025-09-27T12:16:31.209064+08:00","raw_data":"WikiEncrypted:GSMM+zAJtBjjW0rSct96xx6noglRFwo7XOHDryKIxPzJ/Rf/iXIrVxroHBaMqGbtf/8QAFCDZwaJggIquWBdLTupPuV/X27/yx7zdxTHHk80iA9Iex3p0fLYEL6CAxSV6zznLQFHIB0bmWywBRKZUf2e4jGzvr3zJ5K0QlUPAePNKz7atqdvcXI7CE+nKBznp0T0mezawCs4Bk9ASMvLihYIgEOE6YisL/lZFj8ysnWvl3J9BzOmwobWvhrKBuLHYBKEUpg5UCqSShsYH9e3Pjzcg8NXL1QMNt5t9QiRIzcPUhNfjMGo3qoIWcTzdxd1GP4RRrojQLKdOm9hf/jMrSLJnxYgslFO6JoRQMG8asND7BE27YWWQ4yPyv5+ekRqdnPMu0kAdGf0aelq1aWKv5GDw2W3gMZyGPQ3nzp/PEHwKr3V3z2d/xyr+MUp1iBVVy1IovNox++t2CtH7LOb2ILecfUBt5QdapmZBVbbkvbQqD/56Nom4JGMs+pms8fqynGivCKTlS7Cm0Pd+hrY8pruIfYEEgNuJC2t7uZ9WKyI1ZlFV0W4d7KAAJcaaHdEtJMbfAp9FBQIBuuCCurMm3u+SHZ5or6bXmbkadZf6xjo4G3zge6NNd0vzjjRYHzfqCMvNjPc28tLvWml4L1ZTVnhoiEim2PjNWcrQ3LDKK/FP0pMqH0HcJ4YUHmrMStXFaU1zbhMdd4Jc7+hGO3pWwJxCOKkSg4rgsGzHJ7BtD3oT7S0IZqDXf4upBxeoQ5XZ7lkpipecRzqHtpVen9aBMLLw5q9xCCZxyW1svG5eAROzwo0nbk4Ac5nZ5+sja1Hrvyh5Of3+2qm5F9euK2+RMlFQocqT9fpis+qXygWKvQemXOcAnXCaZfI5uvGk3p7V5VRfI7KkehJux7cGWbXvVbYu0JlfOOPkG+5bMIVWB+60be3hPiryVJrHzLK2KtEEJraXpY6sS8o+DpF/F1C6gct8tyhSFazHHxVcQ0UxRz5DYkNh/AfVTCrSt82hEhlawFI+jM1KMcWFInennXeoA==","layer_level":3},{"id":"3a0f0fd2-9c35-4169-9198-8ab6fee0ff3a","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"标准Transformer模型","description":"standard-transformer","prompt":"深入解析Qlib中实现的标准Transformer模型架构，重点阐述其在金融时序预测中的应用。详细说明模型类TransformerModel的初始化参数配置，包括特征维度d_feat、模型维度d_model、注意力头数nhead及网络层数num_layers等超参数的作用与调优建议。结合PositionalEncoding类分析位置编码机制如何适配时间序列数据，并解释TransformerEncoder的堆叠结构与前馈解码器的设计原理。通过workflow_config_transformer_Alpha360.yaml配置文件展示实际训练流程的定义方式，指导用户如何根据任务需求调整dropout率、学习率和优化器类型。提供完整的训练-验证-测试流程说明，涵盖损失函数（MSE）、梯度裁剪策略和早停机制的具体实现。","parent_id":"604c91f8-a45f-421c-9850-3f7805d47461","progress_status":"completed","dependent_files":"qlib/contrib/model/pytorch_transformer.py,examples/benchmarks/Transformer/workflow_config_transformer_Alpha360.yaml","gmt_create":"2025-09-27T10:39:40.037823+08:00","gmt_modified":"2025-09-27T12:27:17.170909+08:00","raw_data":"WikiEncrypted:o1IOA5O3e+ZyVaEjVLZAZPd0C9Lfo6YXOvs6N1UFxVlUIT7dKxqrteV5HlFBSq2u7ltoAk7uhu6YkfLBiSWhIxiAo0cDyyIRiczzIOX9fhPf+IWfaoH3Q1trlxK92ZQvi5PB+lQZ2gXCdl1RStpZBQ9AmrjeBKFxKq2opvQOO81SaBQhidSUA+21JFvl5odxBr/P25FhqL2jhb4kIuwUAyWp+9RlqYjkhR34Mf53oQP44nm4svAhPNM/Fljuanc9ca7uVcuFnMAKLms83dK2DxK+2OGLoXsgeaC4jc/v4oIlKO7VY8x4tLHeK4sdnjbQSneRUgIbxBYRcI8JPw+rrX/W9atcQ5XGfYHAEenb708XUKTEhd81z+8aq1WD087gDOM6N2oKqoN47g3Mi63Zrd7u10Sfa7gXhpXl9S6yww8aVOS+dBZaneT5IuiaW3yc9fR5r3XfPme/7U0Lp6Z8xmufiDXoERGwMofdfZEhUgkmBNQahP+WVqJy987/sDtI309MKLiIRR9qCIH/5lvSywp1ZFFk0lxVIfiKNkF1gjhmtgvt6GkhN1rb+KRQiEAuyvqoSVuUDt7GDPDB+EwUB0qQAwWwW79SdLRTsVAIflbiaK+ZEIodEiOMv9GuHU+cUd0xGGiI+iYtYnJtoJTU5AG0cbndi0wqHwYL+uLxlNwn2rma8Xw/wCIFEknhcHnN5XetNbMBmrQShMweTsWnguPn7y4wSJgHAqjRUVKFM5VVpjmkFvnIuj5c+mupbO30RmoMmkdTHfDOKoXmLa/gigvkvC9qyhh6wft6eUFlgX+0iIUyFeAeefnNuerEeEldbml5TCXRVvlvSD7pRei9344juMGJ3mSo50C2GJRn/N6MdouhiWUQvZFJvgINyb4AyX8/ixC1vW0r5OUeSdoa6RuNw1guk0+aa9Ez1qZnnF+0OmAX+MWljTccPsxzEF0iVTvFR0V8PBqhDnHeDBvDEh7M02ROkuzdyU6d+XcIkgy56DwV7+JC8n3kSBCoBRH90YILpBjmxkQe39leJBsyNre7aLQq1v/pOEQrEX+kmkpP4sPF2vA1SZMgwOqA1qja14c3g2oOLUyln9wwgs2Woyq0uWpu0gWjxB1BehhGrr7wNqS+nlMy+BkSsm/+612L/sJv9fQ/UJkTHcZ6jT82RdqOpWUAjwrFfac0WAHWFAfRGHmbwYxPExa3zzQbqKvXw3yIS4AkcM3mbWqoWWP46jkZ5tr+QOYvPNtjjfuY/goeibkqwRS9oIqC+uVIZ9O9nmMvWPLk+nfuvwUGDQfHoggVFZsnXFblGZomCcUcafkczTB5BZdmv8/9Vq8XoCf9fB5btC9Q6xG0Ys+Q9mX7e163kmuKR3c+uvKjO4fS/YaKB4OaoteGeu64nHbelxDEJu3CFNpgQqUmwazJxaGep3tb2FituQF+OzZKfA42LsTYodw5z8isHRDOjpfzAteUA9I6ctd5bZR9DrhH6QVxOZpHDM+msbn3OYrZAmlbh9c47bY9L+eP+73SlR7dF+vMl6MRNXQAPI8qwKfilDE4izCXOuLFZ2nOgNx/QaNXz6M=","layer_level":4},{"id":"b17ba87b-04e4-40df-96d7-c15bdb0978ab","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"快速入门","description":"getting-started","prompt":"开发一份面向新手的详细入门指南，涵盖安装步骤、环境配置、数据准备和第一个可运行示例。基于README.md中的快速开始部分，指导用户如何通过qrun命令或Python脚本（如workflow_by_code.py）启动一个完整工作流。详细说明get_data.py脚本的使用方法以获取示例数据集，并验证数据健康状态。提供分步操作指令，确保用户能在本地环境中成功复现基础流程。包含常见问题排查建议，例如依赖冲突、数据路径错误等。内容应简洁明了，避免深入技术细节，专注于帮助用户快速建立初步体验。","order":1,"progress_status":"completed","dependent_files":"README.md,examples/workflow_by_code.py,scripts/get_data.py,examples/README.md","gmt_create":"2025-09-27T10:34:17.04189+08:00","gmt_modified":"2025-09-27T12:31:20.123154+08:00","raw_data":"WikiEncrypted:qfgbutC7oyxR6nMxrwk1ODnNMBEQ3/sG78fQT1yXWjuiNN7p/9UiziFtG8VxSN3lDZPQFx0/QJ3DnzLYLtDRB61nuJllFcx9iQ+ts3Vd4jjNT2fXq49CQWUKivME183L4aSA2NHwoRoxNo8JT7FrEFZTRbCv9ywPv2f2fdqGFoJjx+8JT+OD13Ejyu+12O1/k912AM0rieUidQLuP7RSKULuI305+qTQwEGvAyGwPwMjkTFgQ6BlobFMhoSURtGwTiv1BPFMXXjQLnqTiQTnXu5D3VKxXorK1wW2B9ypXM/Tew97qz/JrUDfxzGzvWTLNvbDWKadvt//HzifaUMUNCjdxXy0S2pyfAzzVQh82+MTv5gpQt9iFDsmMleKCpFgKS+ehUTasrjK5KwsxK2mZxcK+W/A0e8mrt/5Tv55eMvtyY7Yzf2BqJDCep1k3pvjAG4JXz4Vo85GklWidUfeuIOuM6MiV0lGrc1/e7cYEo5qgAblD4qn94so+FQQxmfCWtotKGMaBn7/zY86gxAIyOoNtZPX1IlVkpf32FIyyWB9PkPmRp4BLXdWGsm8tlBmbOVmBoDfUOvaUX4QuGCR9NEhicci91+zyeg7MFJ3NmDXvKANM9Z0p6fnGLBlRr4CvjIuHOOp6DZb85Wv05YfGYNgMLL9qdAffj06Y5Uw+FA/t4g6w2GI6qAXbo91O6g640aMaqdcOvJFelixgCOVp1GqXu6TD8e3FLL8KUpHX3tE5ECmXDyUrPmk80BsAVWXi5urumGnQxBVju8h+4hp+8D0k0qX1ww/DJkXljUeMPcvl9vidkKnO++fnx7peWpbkppKiZiga6/u4g+IHmdtZz7iYmllAdTUdqCg0JGpBg4zKAYV2XhfRrpHw+vsHuw2AqXxoPOyf12kEEdfGSpiunUZYKPjrlmjfzY25+erTda7AkpW9zjJIgeEghaHQfflE6Fq5CMX7olm/9LoWyGUFJXvo8vzjnDsjN0G0pQh/svs14DObZjcJ+dcw//+n1Xom229MgF4m3bbSklAbJcDK5gg9glW1GpeSJni/lQHbOIvE565s8RFdc7rnHJrfONhS9z65O8JAhHlJx5gpVoBAjXq0rk4j+nSxqQbgDgPg3X6lPGDfDLygCZnGtpmOKAMRyrTyycNufT7DZSmnDtdpqC0RQAunW3Z3fgywL1CM+CDovZGgsgO/2gmkiyKK3fKWMzZbKa76fKrOH1v/Ug89g=="},{"id":"66a35b0c-ba2e-43d8-a417-168f6e3e423a","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"支持的模型列表","description":"supported-models","prompt":"全面介绍Qlib支持的各类机器学习模型及其技术特点。分类说明GBDT系列模型（LightGBM/XGBoost/CatBoost）的实现方式与参数配置；深度神经网络模型（LSTM/GRU/Transformer/GATs/TCN等）的网络结构设计与时间序列处理能力；以及集成学习方法（DoubleEnsemble）的多层融合策略。结合examples/benchmarks中的YAML配置文件，分析各模型的关键超参数设置与适用场景。提供代码示例展示如何通过Python API加载和调用这些预置模型。","parent_id":"d2a28939-7c7a-4533-8058-05a082de18d0","order":1,"progress_status":"completed","dependent_files":"qlib/contrib/model/catboost_model.py,qlib/contrib/model/xgboost.py,qlib/contrib/model/gbdt.py,qlib/contrib/model/pytorch_lstm.py,qlib/contrib/model/pytorch_transformer.py,qlib/contrib/model/pytorch_gats.py,qlib/contrib/model/double_ensemble.py,examples/benchmarks/LightGBM/workflow_config_lightgbm_Alpha158.yaml,examples/benchmarks/Transformer/workflow_config_transformer_Alpha360.yaml","gmt_create":"2025-09-27T10:34:57.349398+08:00","gmt_modified":"2025-09-27T11:15:13.654542+08:00","raw_data":"WikiEncrypted:3yERI6FkM0skPdXLWnl27MBIlbSDJqMFRVth05pYPal9PwQ8UmBItw2yrC4FjnwtH/IPxpU7/D5LDKTUt5Wq87AKFQ+pzn2GpUWP/nNFq3I1MppMQEsOTmYDYkbUMSx1Y0WknHkkvQdUHrbhvAkGzjwLQ2jRUeW+Id94jMrfAi2btnKuaVT+yHfUsupJX7ENvYt2Jkd5KpfFDGbHljjk/FNWSFLfMAmGhfCPLrHtKnqS74PX6ATYqW2afyLtnwAotpQQbaqS8xfhd+Hsm8xZBNU/pBa2BupBZV5qrsQcbcc8SD1T/Dz+/tt6eY1aBFza2SJoouFsrDEbZWHUn041weOg8ukfDSVvq+9j4eDOHxum02furC9112uyJDisbdN9un15rTJYTaEQmLZZ5HDPx8bHLXIb1zk/dCtNOf3lUSaZgk7kF0/gP2VLpxXG1mbZvb4pGA8L+hOBKhzbs6rm53xoG6X6Luitc1+ii1r+wKe8M3OlgPK8ha7tsdeIxSXVzzVqf5pyj54Aaqs51VdiNEFy9GQFf1FY2gmS0Q5KBKM3Wh093qT4bUp78KOGR9on+dyUyW+m8+EPdcFsPnjub+cMcE56MEnokq1lDsRff1aUAkrn5y51AJ6263m5PYSjirxIkGVO5EGbLm2rPbYxB4Dl35Oz6Okm9H/vtmGYq6RjiXM2SHS0TQhaWnnX6D13cWAX65/hZINLNQE/912fVCO/jvmcrEPIbtp6K8U6gu4xLu+aeWtsQtLJCyF06ezNiBLPZCApVRnr5JTND3h/nklfGcBT4dH+7Y8UOrRQRrcJ07Of310GhP95nnMrKKniZoPulBStE0I1V557UsxqB39xOgvWCXCD8nse+osoRgRgzF/8Kg/at/CnRiQEToDT8Mlek9ubePhCgRVZjmTUEffxHd6dCyVEqrJ2pWmIKjc3dztSZpsLVI0wZbrgXj4iXstMg1aLUpvv2Ox+5X262+XtqJCeBYffxSNtCnM2rDAxy0SnVCBWZ7EAInHSiJ7h3rLtPsXcW4fKgVmgmaOkQpB8Abv/hbJ13TCeQL+a6agEJnx1Jsa0lSTIgGlrrA3SrYfF/CKDf+dIXHTJy5kPMuA6I8LFjUwt+AKp+UArTkjnRN3MGNwsHaysO7Rw3jkMsQkXh491qxVNaeaht6GtR1yKTtY9DnAPuQMFnEbZArpzRZnZOnLaNP5FvQdf8Mke90NkDQ1eirtQtET5REjLHKtT0r/UNpKer8/tYoDYWBWSDSs4YZRELjWxzbH7xeB24sZuTsFJqJ+CRFwAyIJQNdxoQXJnjMG8CfrtnyFXsuQf1hVbz/2giNRx8G4zs9iouv9Xq0ri3IvlW8/zY8Lkkuxqa0BT6tSOYw9iZueN/m7NXoK7i5tjHikhYFSOST2r6Sm/PhSQbXCkhhDVVdPXvKsbcHBV36E7UaZIJKdf9EhMLHxtd9OUyhiEwGlqOMr4FodrN37ukWRcZF2+bsZjONxqpAWeWJrQRN2BMs8PxLPQeSN6Vo43A4aR9fKLw5eeELUvTH429tXn/WX9b82Cyld+Bz7hHdgKsS8Pjtlhoy/7i4mhuhvuwbr99FWzubm18UXHc6lUMtFA483XuOaC+vD/8qvRC5jUAZBD5f57za4=","layer_level":1},{"id":"819e201d-802b-412c-89a0-b62419af5078","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"特征工程","description":"feature-engineering","prompt":"系统性地记录Qlib的特征工程能力，聚焦于processor.py中定义的标准化、去极值、行业中性化等预处理算子的实现原理。详细描述基于表达式引擎的操作符（ops.py）如何构建可复用的特征流水线，并说明filter.py在股票池筛选中的作用。分析inst_processor.py对单个金融工具实例进行独立处理的特殊场景。通过代码示例展示如何组合多个Processor形成完整的特征转换流程，并强调无未来信息泄露的时间一致性约束。提供高频特征构造的最佳实践，引用contrib.highfreq_processor作为扩展参考。","parent_id":"ee2e30e0-2b00-44a7-a86d-d24456832772","order":1,"progress_status":"completed","dependent_files":"qlib/data/dataset/processor.py,qlib/data/ops.py,qlib/data/filter.py,qlib/data/inst_processor.py","gmt_create":"2025-09-27T10:35:10.382848+08:00","gmt_modified":"2025-09-27T11:18:03.305196+08:00","raw_data":"WikiEncrypted:5RlNBsIi2/3o8ATlHuzaYCoRbW4kEmqiuC/2LbLcT/gdgUhUOehgzDHx1PbI4vfWJKO5WsuQTzzWlmCbQpGCNSUU03iLvn51UZYdXU+J9vQ+Ju5C8DwCe5AQWwWTipony4cHJU3gL9qi8QQmrQSwmiTH5oh49iUeMhXYOrKPnDh+Bf6kS2BKA148PFcAEF+kj2SWzFO9SzHC/OsqNp4CwEt4/BGJVzvrlb4C5LTXfapwMoaUwIuGo4PxTHpFh0Gt4Ugin0qAUiiWkvwksTY1qXZxCI2K4HzgdWL7ubPpzUJ9S8cWrEDYpry41g+p9GYweksK83HlEJ8bRR5YWHRniYg55waw9r1hkD7FFOtkObiMv0MYGUItjPrrvnIGyqT/aYhZge903BWs/v/q+N1NrdK6H9MSKnJUjURmQVjI2jf4dBZa5UAChXOzw4QhwMdC714YrJycxFXYunNPKmrVyXUmIZYRgYtMkSTLtklUxkf2pMF4S9bKVVnUEZf9zpY+GoZcAEa3hDvUI8h4x/gAf3g7pzIF4p5ObiaJKUSTIeV0hNFtihd7SyoJOky/i1HI+jP/o2aIKT5F5uKETHusc6MAydfnZx6JoPcW4w3ZJaqb/wWGAuco06n291QrgX15esRswybN/Eu6p0iD9Ulz9PGaLpGqz/tI+jYWsPfB8N8bIL0Hdn6CW12Cykj9AWfgvXi9197xhqcwdqTnPwwj7xp6HOZuTwLT4GO7ostyeOvDs0tdJbSlwv0TFtsj8XVBhLVgCIsh9fDV6IAQuhJzwteq+FjpEfyybY3z8RihHScSUL7aZ8tZL2wS0i42huqrxm5IN6jPZGNdsWqanHNRVSiI5OuKNyVDnZoMYAkWnPyXB9ts00EfAa+2RNvCg25YQbn1g1851EipMd1j+i4yIsSuqIB4IM9dKhatmVe2eJ+AtqUHYUn+9hC515SQLHcQcQpN2cmXGvcAsZqC3i8ShCGkDTmTLXr/2cd0lYFin11j6AxKjrz/3tuu7c5yOiPikyh9BsmlP18SKZHaXNa+YjcC/U7cg9etuT4QqcuvOGV4EAu/YDvKQHgbizsMjoq8BtieBdxBs7CvVNaNrw6WwKv7UsUYElveup+cprRbkqEW+6dcq487a0X6/U12bVFhfA3qQNV3CiFJhfYUzrKm6nbZ9jLif7rpOKvd9xFxkgNEvNqYWsY0qexdrhZH179cj3NBMnSH/Jz8a5GRUqD4J808PnL6Jn/889JddzeF6CQl704/ju1d88i7D3x0wkp2ymqakkhucx+agkYa4vHSSlxzgh0hmdQwhAqGkZAgnbGvd4b8fggkVBbfbuW0Me3SuVlsxVpK1AjEFsQHhhV0Cg==","layer_level":1},{"id":"36ea3fec-0792-4dd4-8cfc-d9f1beed50d9","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"执行器模式","description":"executor-modes","prompt":"深入开发执行器（Executor）模块的详细内容，涵盖其支持的多种执行模式：日频标准模式与高频精确模式。详细解析Executor基类的设计架构及其扩展机制，重点说明DailyExecutor和HighFreqExecutor的具体实现差异。结合highfreq目录下的工作流示例，阐述高频回测中微秒级时间精度处理、订单分批执行和延迟模拟的技术细节。文档需包含如何通过配置文件指定executor类型、调整bar执行时机（如'15:00'或'inplace'）以及设置滑点模型参数的方法。同时提供自定义Executor的开发指南，包括重写execute函数、集成外部撮合引擎接口的最佳实践，并分析不同执行策略对回测结果偏差的影响。","parent_id":"a87540af-7ec3-4c36-b16a-41d9eedae177","order":1,"progress_status":"completed","dependent_files":"qlib/backtest/executor.py,examples/highfreq/workflow.py,examples/highfreq/highfreq_handler.py","gmt_create":"2025-09-27T10:35:18.490968+08:00","gmt_modified":"2025-09-27T11:18:55.823977+08:00","raw_data":"WikiEncrypted:jMgId5h0EoZtwilIIkOV3oynIZAvziYeysBBA8gxZTrulNlO4BcZgJcxerAd7iGdek5NdHUmmZfh/5w54GxP9k7n3cXe6gSRbdFA+rtf28qOhLLTshstKZUuPscikakEj0et0+ivo28iyEn5HdkusXIKbk0jg8AuCV+MAM6Z5d23THz+wYvmYnhZt79uPQtBbnrn+uUJ2cgf2rX+qNT0RA+HkjuMGdx5RU3i6aibFeEQjxOMCCfjZYFTL8nAbvjyXmYPSiqVLc/h38Y7SDWXmeRcK2Prbfa7ir2Wu+oCVAzM0c9wz5GoQdm6oJDHb02btO5ON8iOWuSje130tU4R7lXns0KF0XUdEQkPd9z1/mjzybg0glv/Er8LDjwexmTwIroxwZYJulO1O7Y9XEFnWYn6e7Ier1FgQSYS2lhg5GUWX9UGPnq0zmz7heY27LGWAKoayBpKISRs8ugNMJATuvOoCSX1A5b164Ufar1aKViQkt157n9RjuUz3nfT/GYFUT74nI5C6SQ1L1b8jKQBMTNsm84UvOmcmGxWHIWvaMaEYx6kT6Tr2/IgABFjcr8PUICEZ1dh/xpJ09nTcaEw29Oh/+1kmrRxgQZpeTPYfVht33Hs+XQrDaeFS0QTbS4kBbT4LU1ar8LakLmuFCketFz4qRENQhBQPOtit+e8v1T9TcNkeWAtXIuXVOSqxY/G08gTsI3iKz0kEWh9d7bbf6hzEyo2QIJ8lZwREKR8LL1XdRpZi+w1ykemgDRMO+y+Mews2RYo8cYLEjJjJrPz/DS/G4+HMKPgO3uar8AiG3dP5nVWQXai9zkYVYOcR+Pv1lH3fxT4vCgjFpryK2eRwv5Q+WWkH9fgoMe0TNllUbpLDV+DFP7TvTVqGv9JwM3ETZxFN5p414UF+L0tbulpqnAOK52fXswWmSdixKnTstTu7+jaaYaTvdzz59inmNdPQL7CUs+OXHqzKnPjZEE5wK9yq1y7zbnRngByuClgDGRjtG8WO5Y8BghxA7ZchDj4l5EVo/VKDI4eKss9T1cXsFTzRTwi32RCbodBHUq8GAbbnzw2kGO72wvOYciEkxL2a1BlTI/xcLfvC1IX+7ruZao5g2s41mqHGnTFOl6+kbsR3ntnrKSn5sM4lm7tfIrMMeh6y0BPF6Wc4W7hJMZ+wEMt/5OMRr2kXf62fmRVO1W7bqB/Pf0xllVcI4oPmWJKgggWFzFl11y0qSGFTGQeU2V52n/3EM3DZh7pefk/2Yp3B5pZ2FxX3YOx/p2yMOqL2T/Fj8erKVjBXSxTya3er/X+2RnzxIJSq99Dvpu1oRbTEN21YnI724qqssMLZ/FaNtNhdPudI9y1c5DyyjScd7xsKl9muiE2SPW5W3SfllQIccwgwk9fKCIWtcQ4TuZyKHqPpfzmNEcCJNu/AgRqjlFVyLXDZfQoWUagaOeNJJU=","layer_level":1},{"id":"17fe62fd-e9ec-4729-a465-a47f5667fdec","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"信号驱动策略","description":"signal-driven-strategy","prompt":"全面阐述信号驱动策略的架构设计与运行机制，重点说明SignalStrategy如何将模型预测得分转化为可执行的买卖信号。解释信号映射函数（如分位数截断、归一化处理）的配置选项及其对交易行为的影响。分析信号到订单的转换过程，包括仓位计算、滑点模拟和交易成本估算。结合实际代码示例展示多因子融合信号处理流程，并讨论高频率信号更新带来的性能挑战与优化方案。提供信号稳定性检测与噪声过滤的最佳实践建议。","parent_id":"c59872d2-5d34-4292-8555-4dc28a9b4d2d","order":1,"progress_status":"completed","dependent_files":"qlib/contrib/strategy/signal_strategy.py,qlib/backtest/signal.py","gmt_create":"2025-09-27T10:35:37.70527+08:00","gmt_modified":"2025-09-27T11:20:16.771367+08:00","raw_data":"WikiEncrypted:wLjCSFFOERUBp4iTLnCPthz8c6m4etdCjqNwgg4NPmgCvYWvAJ0yLsH2hK1xmdcIaQ3bI2H9J456WPT11ObEZJURUy0Dk+jA05tQQFE9Dsy3TSfcnMmh1E0Xn3DdGZhmhGEQAyMNNLL0Yf/ra1N00F4VX22+74hLfzPXcX2bDBGiEoaoS8PfU/49s6SwS93zklGTqqi8hkLkA6ThMGiOMXBichYBD8rJDkrC6mMAdO4YGqaEQnari3sNBotBVqxCB1+Piae4iRKBDP/p+7/a3wHh3wiWcv0WropYEFckrvjFf7YXpft5pIXxHjzKrfp5H5IHOfRKTDdsmlEyWwJXspP83orRkwvcWpcqwQEmefhjqLZPQos4N11tUWznXfm8H3iP6KAoUACgIzuXexcJleIQOgb2N+D+d+chGiGEHl0Rk7xIlS7wBNhVsWI97crBDrjY6XtPeozqJEmtxk2/DJ7V9gFPKDSNod0JQhT6YtgqQt9m8BBXt/rqJ7aVr3Zb5CmgaXN9zOAaqXvuEkJGIhk1iCxXlpvR2xntE4cQSzXkcdBu0mMoEbnxYvEmzHvZkaFA3q5w/gwCBfqDwRueUX+YoavsRxpUCmxDVLOfUKBruNITp+yoxoH2ekOhKJacIqtGjoq0AQjuQPgmMtb07ALerKrtuv7dCrjZRqReqnapmmbMlx4ITcBmwfmAyRKsi1k7GfUegnejj1X8WDzf0HoRFtBvHqXukFfq4oZhD3szF7Zb5ISkzv+vCm6AqA3KwysI3YZOn55a1j1CH/uqgr1I0vRmete+WU0jmwrthRmoTJfiQH2QkZYCVICMRbDr+igk8jXuJ7g2gA3KfUNrLubGdO5hY12y7SxJnU2dPwIfLC+X/zhXboo/v0+DocyxnlVcAxzux/zPv3umQPY4iM6Ohw22SxCQyLAjwny65k7B6fLhaknLn0V15DNOfzGQzr7czPNcNwoNqJ2BItkn14xE2noNGdRX5iREC5vMtSoQn0DuwLDxHQ+uaxl5BOJ7wcMyGhj7CZ+Xv32LD7EiK9DPMnQ4nUtRTKP4i5i0yGAa4g4leuRjXVh0A/H20Y2lnelPDhJjdnunTH7OJjejqLdI3nytO32FrMLrxFYKw2TAZYijFJ2st9UxbsDBGCO41sbjyBWEYHPP3aTzNWJ0cHD35nebsc2XVuj4lLAsUUY=","layer_level":1},{"id":"509c2946-5c94-4f98-a278-6bd995ab8f23","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"在线预测服务","description":"online-prediction-service","prompt":"全面介绍Qlib的在线预测服务架构，重点描述在线模型部署、滚动更新和实时推理的实现机制。详细解释manager.py如何管理在线模型生命周期，update.py如何执行预测更新任务，以及strategy.py在动态策略调度中的角色。结合examples/online_srv中的实际脚本说明生产环境中模型自动刷新和预测服务维护的工作流程。涵盖高可用性设计、缓存策略、异常处理和性能监控等关键议题。提供从训练到上线的端到端部署方案，包括配置文件设置、定时任务集成和灰度发布建议。","parent_id":"c1615506-454c-4d28-91e9-d3a5c2e4b021","order":1,"progress_status":"completed","dependent_files":"qlib/workflow/online/manager.py,qlib/workflow/online/update.py,qlib/workflow/online/strategy.py,examples/online_srv/rolling_online_management.py,examples/online_srv/update_online_pred.py","gmt_create":"2025-09-27T10:35:48.111721+08:00","gmt_modified":"2025-09-27T11:20:48.490137+08:00","raw_data":"WikiEncrypted:rg4XnZhftBb2As9srCxz+GoMfUWb2OuHWqydzxVWDjFIuhsho0tSEDsvrk6GgEF2F7+3fNXeqCz/tc5pcZ/DFKKNoHZwghOQexbWy/mkAyx6OuezO2uokDzWjemH6AAyjwUZl8kx5C96E0Vue4IL+oOqeeeIEFedlISJQX4J6x2+HrmajsLLfkMV1H95d02GOmxz/ynH+KeuYQcGEsc1qeyr66yMZ7H1Jr424B73MdW7GP/Fq6HNq+KbOfpTZYJ6rVaK5cHiygyibe29DECWnngFfqfGjit9DjrxS4a7oxNCsEJLgIKft5tV+C40vhvBKBFrMtUmz7jJdzD+7BeRfJbMOSOk5rnd70ZaG9RvvNmGbfqkwnNLOPRZZKcQTT6/7WmnjTRrIfo6PR8oJNSSVZUTU30laanWjbayrEFXQsVSZ5lQhWsSbXhDB9QhZo3B4MNDm3Jk2s3B1/WsKKhnIM45YsZUwHVwpZCYe2XPRqJXL6pM3eX/FVzJ4Z5bDqeA7i9aGqARaqCbjAkvkoN5N4fbFnmAug0Zk9vm1s6T8n9xNdreeuz34XPDIB+pm83xro6N/95pVEXyCTAMF55EAIbuyKAQ4zY01rOxxGbeMbuR0dT4vbWcHmTOQzkrka3xcF/mh0kFarkgc3gt1/eEXj1u7c1oVZ+gtAOHC88oKoU4uR3xi39DoYZAIBxI6CE+9mNr5gcsqvsQ9a26QRtb5PfDlDe17Wz4DnCaMncJKjt3gOOBKuanpxDONNh+B2It+nPF/bTBABIrLEflrMufcBjv4qhokeicopaOQfAw5+gerQGFe4G898FvDptMA+ASgYW2duojh0aIdACqpMiI8gFLtrDDMzoMopKs4FObbNrhypgGWdLEqu92O/Ho0UydJMhs/8/EK5Ty0jNrhbZq8Ow8n+bTIMpuad6YoDPaMQZLO8Iax69oqtejckHy+LMf83HK3O5Iy/4qni6f4axkrHzR/rSme7SSEHKWssgKFPOSMsuNEPei/K8r1fq+OK/PANYvU+gfkoFvDgglKHNqpt8S7WgkQQCCkHTLdZgtHglo7Q4fyDRSekfz6DadxfCDGGLzX7xV+csF5/OCn8QnyykiEwMZ8OTS3p374HNrqoNHEUR1TvVNkljcKQ/6n5RVukQCTA4j/rhNgBctYYOWiGP+1Uu002Tl/jGsoDPreXCN/DWqdFSzsRIefUwGvsZqc7lmwg7fhjXRCnUa7+zcIcyldKRqJ1ywoezbxAU9mId6j3ePl7wN1f//so0LZ6Y49RVAtbp5GU26DKFPS2JpM+JAw1khVIIuMtA6aLt+ZknrxCe/CGJd98+yuiyYT9ealVvYS2MByaK9sJDPotwqj1MuPf/Meo/2Z1CtvKeaVZ3tZswKL5igsHMPex/y+d+5zshNgpwoUHnHyWZjXLJ7OGQUpCM8dwboIvNXPIT4dlut0GuS+SOiAGocqgYFiMfgWl125mUfPlN1VYXxc/I4Zg==","layer_level":1},{"id":"fc22d761-6d46-469a-bec6-390b613bbecc","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"强化学习","description":"reinforcement-learning","prompt":"全面介绍Qlib的强化学习框架设计与应用实践。重点解析rl模块中的环境抽象（simulator）、状态空间（state）、动作策略（policy）和奖励函数（reward）的设计模式。以rl_order_execution为例，说明订单执行场景中OPDS和PPO算法的训练配置（train_ppo.yml）、回测设置（backtest_opds.yml）及策略部署流程。分析trainer模块如何集成PyTorch进行策略网络更新，并支持断点续训与多GPU训练。阐述interpreter.py如何将模型输出映射为可执行交易指令。文档应包含从环境构建、策略定义到在线交互的完整开发流程，提供config_parser和data_queue的使用示例，并讨论有限horizon环境下的episode管理与探索-利用平衡问题。","parent_id":"ce98115e-5189-4b0f-a4a9-025618b5ef1a","order":1,"progress_status":"completed","dependent_files":"qlib/rl/,qlib/rl/order_execution/,qlib/rl/trainer/,examples/rl_order_execution/README.md,examples/rl_order_execution/exp_configs/,examples/rl_order_execution/scripts/","gmt_create":"2025-09-27T10:35:59.326787+08:00","gmt_modified":"2025-09-27T11:21:55.580512+08:00","raw_data":"WikiEncrypted:TFkHGYWaT53fnAFA6Zzu6Ky9uBDuQL2ZSwsbTZLlIadlTfZqmAWYVlJiKZvMPXNUTFdbaHUJq/1uu920wxGrODhc8WNScqthxLijs2fmbYAT2gi8bvMwuNetKZeAKrQ+Fell4vzW3u8VVR9Ss4Trcmf8TSyvVWvRAR6ndTBrpKt2zkkVAde289AsZrtYH+S8/Iy6qprXW/bvCrF9R4BjR+1T/BA5j8KUxBZdOUI/fSqXPCK8749XX2Q1TSarZvIx5zmlBDqQsfiV1/HB8ZXzoD4fZ4fhA8VKHzaPrPkKlMvrR8P5OmsVh0/q7Y6HCdhETA3hHk/qAEartBmJ8o9I/ispnhT514bVDUW3mKLeQ1Uiv1qr12Oi/7FaqdTAodyCo0Bk2hZQgLCVzUmQVKBJUDMyfOzrbIJHVsxJp8Wr0PRfDplYCEr8qftAj0yoJ1OyxVQWGl0xG8J8LVUMK2A0jI2SMg43eRC5YmTstlCm2k+bPXt8xzmGP67ZzBFDBftKH9YQuVuffLA/NNtdN2l7CROtlamUftP+EFZJYq/kvSD7PJ6loOnAoNcQx6dxH82Q3cc+EBUHY5qLIbcFW4F+AR6fENdmSuNuobJIePHe6JjWNi35u+Wlk01Eaam8EM0CMBptl0H5esmO1a1pzvxYhJLsrzCrHhnwMl6gF5QL1sUWmuvlVSb3Mp6KNwDcDzbMtltU7IEtbYkBeZO8VUoI/GGidG4wu27l0LNvC2N0Hiu0eR1dt1VgywOe29kI+3/urIXd9zzHTyVCJyAKjOdGifXyMuXAYwNRoh87RHXFKl0QN98v7viTjndOlVY/ZV+ZXlagsPtTXBNfm0CPxcuZ4NhRVV0JY1+jlKfBBH1kyjCYLD4GhXkjoX3WqQPTOEoCroTR1KD6luE7IlhuYWbi/wSBTDt41fanikhco1CpQWnysNUz7dWisZx3nk9ASNw2qb8W0XkBgUv99eVSVzZEMHKvhrGOkKYW8wMMN+1mhkfLUVmvz49tiH47t39LBrdwD03/S1C/dCKjF8S2zGMbM1EllKnK7JOtyB09/leTDgbrPXbSxjlQ16w8gzfA2OHoObU+RAoJ2qkEHuWMRnuAl3WZjv9ie2jJWdbrlMHgPHcNWNYoyWuWIXKJ8uQAgWfNwmy3VIVAft5qhhZyBJyARhMSJEHT/jv4MOZn/2pbGRJMIvK82vP0m7Q7ndcRnXIUFqqxLN7I+XFr6yZnazOCRrYIhxypbCwjRvLYV9hUzCUvmo74qjQqSVM6PyboCycEy0H13VwBqI9IYGMYASFKp95ohrnhumtWgz0IjzjzHn3aMh3iAe/JXm5aqXJu2BSQc5KksMLrms+Yuea0mT1Ru+nfj2Tspp7qt7qj5gbMqVnt4rmutR3zni9YQ23t4jQxND07eAr4s38y0myHFa+JZ5pAkOfexj7dPSTFwgdeF9Tm4QMldDy+5WVNcLCCKgG5CpE/5kSqcObecJN71Lwq0/cgOAn5aWm2cqiUDga02mFyenTxIjfowIIamO46y1tK2bNqnaBzB+fRACd2/ppj1oS2e7TfdkTRjIYbwsulKZI4JUhfyresjAtpElsN5/FoJSDqG4tkUcz9rdOyz758MzoRN8czzj8bxvnnlydBmx+yt4qqsmC03JmwxddCM0oVEPrWHGcx6O7++UGHqgVuKQ==","layer_level":1},{"id":"3947ab4b-6bcc-4c8c-811b-1f42c082562e","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"系统维护脚本","description":"system-maintenance-scripts","prompt":"全面解析Qlib提供的系统级维护工具集。深入讲解dump_bin.py和dump_pit.py在原始数据到二进制存储转换过程中的作用机制，包括字段映射、时间序列压缩和版本控制。阐述check_data_health.py用于检测数据完整性与一致性的检查项（如缺失值、异常波动、跨文件校验）。说明collect_info.py如何提取系统元信息用于调试和部署验证。提供典型运维场景的操作流程，例如新数据集导入前的预检、生产环境数据备份与恢复、以及性能瓶颈定位时的中间状态导出。强调这些脚本在保障研究可复现性和系统稳定性方面的关键价值。","parent_id":"92216737-d741-43cb-a9ca-9366bed85f6d","order":1,"progress_status":"completed","dependent_files":"scripts/check_data_health.py,scripts/check_dump_bin.py,scripts/dump_bin.py,scripts/dump_pit.py,scripts/collect_info.py","gmt_create":"2025-09-27T10:36:22.349604+08:00","gmt_modified":"2025-09-27T11:23:14.586581+08:00","raw_data":"WikiEncrypted:gWB8HBj+8+/15rQhXgtMjDnZ1rwM7khnEr801rAIgfQVij+j23L8yeDImlowyf5rcxDpVQg1rDEFeDdZdqB7CcaSEyWU1R+uywC7CRxjs0ik/JIsNwzlZJ13uy1kmDjk3ExUGTq6DsNCipqH2gtceCSWdmfSjuw+4xgQ0hcTAP+dH56cQreVn9tgWpEQj8bh7G47paDpOmantzIpdudZzyCOWY/df/Nfp7Rt06XMXBkorGNGnIgfNSUsBommFkXr5YIuEMZi5GLiLsamL5ZlW0i4VJEsZniksLC1RZyb8wIhO2/gcNf3zoj8hHzEW5vBjy8FhTpJVOFhRQfvShXXC4UwAjoP48nrk75mlp6Mal+hqhVIJraW+ybRI0bhQnfKEbeUSKCr3eEk9xWQopyosky1cYVWiFP/tzmezqzwzlCl9nkSVyw3WZjZ4KP3IPH7946Du0fxeFAs6NDcPYqw/bXjuAhH1ksnItY9CiuHs0/LaywFbtxJLTd5W30eCixXTT4PT+pZfg6zI1FxZEpTVe6z65FVZxJquWPoginWytdFFz+fcWB6yHFmf5uXa/GdfepUsD2QG++i3o1JBrwTSlHuA4E3gEDyHqEBp+V4wx+W+1xQz5cXZ3FN4Qtbkjsn7aP9z4/A5xUlMYLw83+JzRoaMPwGbmFbomf0BJCgHP7nm366Nxmf6DFiQ7UVcTSeA7xaFY+kfDg7RZOEDuDXCUlIdBt8rv0iUoV/GWrC+kXPfRERqzryGM6oCFWrorw4Cb4r1oFEdZUTPykzo1cSgPncX0sxnATbjZ3v4nPO1JOyABFduQ0gAKYyStOMQDAEOxpsLSwMlCRL46gTzrk8iQuVLJE2EDufakssmyS0ZqEntjdEC+Ed/SoeVxzcuXvLbRM3zOjKN2PbAwT52mFCc92Sjk3KLFXvcCvKxK1UYvsLDwemGLmu4UD25DCq9NkJfQvwWBS0VNrl7nXLDfLWxwe6c+jl6QuuI4taEbB9YWAtwB9Ma9uWCXqF4Db5MFwpP/X2saTtrDotZSqEv6zeXPxjZ6ySrzvJJHHR6Aw86Ql90ZwSrxCWbFb+M+NJXdBRvu9D8FmwjWCA5NXLzaVz5FUld6LMRtwVS9C6JdMvtbZaGsvRglTSjCe5B1G47W9D1w8VDPH8w43+YAC0YmKdIIxjnq7Ddxb/GnwsbqsYD9RXrIfKvaun3x8fnLKPjS/DB8Lis09HauX2ln9vVFy2tS+m41i8GqHPzKrbeovStaURbeVLZd1tJBL5PpnEcqg+p8rG4dFRQQYw+1ZcV3FgszuarPg5JUX5mzULXITPMlpil/VdjVeqqp5GzhSawJV8M7WNyHi4LwlFfhPh6zLG6KXXl301GMsYjrWx319EY/mOGzM++2aID2IY7fzX73LwU29f/cs6drCCu8MgaR7ArA==","layer_level":1},{"id":"6fe713f3-65c2-4213-9b0f-8d1dde2c5929","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"训练生命周期管理","description":"training-lifecycle-management","prompt":"全面阐述Qlib中模型训练的全生命周期管理机制。详细描述实验（Experiment）与记录器（Recorder）系统的工作原理，包括如何通过workflow.exp.start_exp启动实验会话、创建记录器实例并管理上下文状态。说明训练过程中的日志记录、检查点保存、超参数跟踪及结果持久化到MLflow等后端存储的实现细节。结合tuner.pipeline.TuningPipeline，展示自动化调参任务中训练-验证-选择的闭环流程。提供处理训练中断恢复、多阶段训练流水线编排的最佳实践，并列举常见问题如资源泄漏、版本冲突的解决方案。","parent_id":"2d6c0203-db64-4a78-9f37-7283382ae7d7","order":1,"progress_status":"completed","dependent_files":"qlib/workflow/exp.py,qlib/workflow/recorder.py,qlib/contrib/tuner/pipeline.py","gmt_create":"2025-09-27T10:36:32.784368+08:00","gmt_modified":"2025-09-27T11:51:02.714947+08:00","raw_data":"WikiEncrypted:KV52Bv4ONjB4UC5EXzYV5G9Y/GLl5TUqItK51+ZiLMBe6Jqfctc0R91j5IPDrWOnCtfD+oVh8S/70GfZBcV1IkViIgpvB2MFXdusvG47jIoy6osUGUq5AVdIlZIAGRptV/WVFWJwwgmNz3xuEcULgx4vgPPa+hKIk0jXfQxBxJOMMFWh/3dhDrJqcdqq81njc3WtYlhO4SenIGwG+XMOQLtM0IdJdm3v7KeFwc+zxeVc4Qq5r2MM1nZU9xqEInC6PhmmEjxGtbxCDJwafID7SePibVKTO4HF/5KJJrnHhwTDqVFiVtjGoC/5juyxm1FI6uk9zq1tAYTQ7JJYxKGzJihBBrvd5tnCbmh1793jy03qq6Wq3zQH6cIWtE8dO49HNQUwcDCTVFPDc+tvdLnP8q2gt6qS+osNHr/QnMBnWNAl+96nFji/iRvQm5oqtaLeHNrPXlrqtXll7raH5MUp32PY83SB6kesCwYN43v0vQdcF1e/v0SfWw0m2StBdnUwZh+U09rz1S1CX6XP+GUoq9/Er5N7ysycVLIpPn+Q83VK+M+OefzYv8Nu7OkcN2JwtiBc+d39Hz+ZmW7FAHROoEt5lL6hR/ineYn3ys53pIDcM8WQejsL6VofOLjd5L4mX0zflB89VG21IESlLDCvlNbvfuDBseBWui7pZPx/hZcC52ddnrCCyqcgqiVX738OPB2cprxrSrcf/dIDx9CORRQBynQ/F1hY/qoUFMp5FjhDB6UiYXBjJfYrH2RDoUudv0oM/UBVbQCw6C6e7kQemsbk+eDVsiwrCYOTHYVwPc/dIqV2KAwxmHlrANAhNz8jJc34ObsAkukWx2rkdvM595CA976mwmsEkh6fLypDMcDfGRWxx0V11FH8XDTiAlHPv3tFDolWSJS0bmxGLWxD5E3yu31JVMpkKGPdLAfu1jNrnFQz1gDzJCnzdWF2xF3/M89vDX73+0Jbs5HaLAJFMCo6PzY7YF7hMkq6f+zYRKlJETUGuRqX4EqWBgHcvu7ZCB/H7bpUBkUg+ISgVdlBYmzhHoUqJeqGnpsILxCxX3XOtfF9dis6aYXrl32UjxqArsVbh80lc3IuWuD51RO9N3UvkM37folx1yUHfnyhpBQBguWOZ8v8GY0xYd7pnqNZNkD4pd4Mk07IVEkiZcBV4qy4WqbF6PAXa8nv17IDJWN07MqRjaMHjGrwxFRiLF+QoyKeg3zfCBuBd8cmdWf8eTXpgGFIi9FnbxU1kEkor+n0F9dNesCnSkhQ+7/t+XL6EuqWf2HbtX1pj4TGNW7vfSyPEnlEF9ZxD9BOAPB8Q7hcqEJWRq9Xmr0U03icRaMHgT099gf93fxn1FPydd6Eq5g+Lt0luvjHzkqcIGb8INuKrgtRuJ7LsrJ7EXtw6HZL","layer_level":2},{"id":"6bbf8837-7976-424a-be4f-c64d28edb86c","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"深度神经网络模型","description":"neural-network-models","prompt":"系统阐述Qlib支持的各类深度神经网络模型架构与时间序列建模能力。重点解析LSTM、GRU等循环网络在处理金融时序数据上的优势；Transformer及其变体（ALSTM、LocalFormer）的注意力机制设计；图注意力网络GATs在跨资产关系建模中的应用；以及TCN在长序列依赖捕捉方面的特性。结合PyTorch实现代码和YAML配置文件，说明各模型的输入输出结构、隐藏层配置、正则化方法和训练技巧。提供实际案例演示如何定制网络结构、调整超参数并评估模型在收益率预测任务中的表现。","parent_id":"66a35b0c-ba2e-43d8-a417-168f6e3e423a","order":1,"progress_status":"completed","dependent_files":"qlib/contrib/model/pytorch_lstm.py,qlib/contrib/model/pytorch_gru.py,qlib/contrib/model/pytorch_transformer.py,qlib/contrib/model/pytorch_gats.py,qlib/contrib/model/pytorch_tcn.py,qlib/contrib/model/pytorch_alstm.py,qlib/contrib/model/pytorch_localformer.py,examples/benchmarks/LSTM/workflow_config_lstm_Alpha360.yaml,examples/benchmarks/Transformer/workflow_config_transformer_Alpha360.yaml,examples/benchmarks/GATs/workflow_config_gats_Alpha360.yaml","gmt_create":"2025-09-27T10:36:54.82274+08:00","gmt_modified":"2025-09-27T11:52:45.804704+08:00","raw_data":"WikiEncrypted:wrRKJ4Ygz4yLJzqEIf96zkoKCkD7xeST7ZAIeU+3m+kUBFpolmlqdM5LmW4Yt8J8LDHx64p8lWTdoKXCcGZX5IKsKlBxImlheJrF8dOBiGNmqkqQKo2XwBfyXuF+SQXUSupmG6ItCJSbRqU8KG2NAcbpC7SU4TVk3QOsC1Zv066oaQEaDtnspdk3QWFrknD3yB65q+J2P0wnid2Gp4FmsQRTHbTsjlHDMFWgnsq2geTcnikVW40BbkSGrcNG57hbVW9UO/DZeZXsQNksVaw8rYolIwL1ZYAQ91HlpnZ32e6uMXbkeWAWbQzbjzVYxl51Eqe7MUO9YD4eY69FGqZP4ACMONG1jifaMzonZGRFtEQMy+QggMgacuyKDWx4PH0nntov/hr5rhG9q0Up3Rh1iwg5sL8uJh/hiGaaNMoIXgu4iZGHWEolEt/xApvsav0vEOPDbj4sho5s+TuJKdYBMW6cUDxieIdSVsE+MNyK2qrCJ4c8qQGW1zr4s6d5KHdNunx5rxPKe5YMBF5rHyfMXmPhKNMGiHTGmjKPsNEY/vt6yFWWp3sdn/dGQEvJ2ZbhDSOyy8pznFszKj76I4HXbq0n3miKOPIQAJeYHIVoDWNphi01n9z8CMP/x4U8D42O4xUBKZXXc4b6ZfI0PNSmTitsdeY3ytK6IZochVbI3HPz1eyu9s/8kqhBDUMZYfadOVchfwZW+UI2ljBui7JXoW5UpIxSrb9m0eb/ZzVa561XfLUU8e9b5H2uiBQ1wyc0AN4C+IpEPt8VSxSCxeN25x81Mfjw9a8DIqX0FErUvklcA/88yzSxUvZ8Ew3lT9w3VdA9GkzoOrGkoHKLC9LCYonxnzdJI1sdTaRpVFV6fkucGeZvuSSB3z8DlrE3aSTBw8mXPQVGI5XwJjihxPrEBoQXNPByypGVMDTLm+7djNigrsdtXiuIVrZCDyUqvYP2ZECEvSvQR71oKZvB5gzNHg9HJ7hIh8xCuAjJ99s4mZS39AQcsNFZ1nSVXCTwVFSHNCpnXlznSXXSd8oA2FNlYDMP8Bs2FSlFUA7POb7CBpG8L5eao83CJk/HMyv2lALxpE29wpUK93YoxoZd6fBT2IucLMxbKK6eCKZZK+9Z1pLd2v0zR8iHQuly5JrdcZGEG5M9OXPgfIsNk7ukkMZVeLcoZpjeiv+aeXX1j8hQbsVg0HmdgKYpfMNG2YAFfYM7m3u9jU1F6VEVQzRQ3Viq1/Xs+w9aRhs0p6quIoR3mw9F0GSQ5uXe1kkTd18pnIiPOK9K5Mbdp03mYdymlYiBymL7KEOVpv+06Mxhb6bW2wo/v81qmXhWycgFMmAl8c6uNFKAScVLBfQUvpx2RUW6kw4dOSRnGlB1UdiPOM6iqFHS7tMa/ilVm5fBzahrWHEMGmRGSRnAINGIt5JwFFR5V+29d2E6MmGLqzbmPfwyQKLSFMv2sB39o64RgQ+Unl8T0woUvXhlSZWOrNPr1GA7EqDx3he+0s92XneP1iV8XJzSnmXVJxLocFmlUX72jSJaT9+N6zCyU79rtrAe2uYiZ7wJ3zLoQ/ucpB++WiLpCodSuoJIuyIkIZjIJWJCxPFEzwEKpnVejMUlFP2cghqfEdeGFUIoLBTCVheomDT4IgSuTtH3mLyoHZSdThWkOQns3iMGr29Z3m1ty4XCa9lfOHokBnrUw/AA07gBtSOpSm+JEb46V+layjqaNnL1GZcfw2FH1Q4eYixnQyB5A7IRwNJZIeX2ZpLoZs5s6LuAHOYdPlDEfyp/B3DjcRCr2U/K15v6N1KAbrq5KbYNXU8m9Y23avyPWMmBM6wlQc6kTQ4=","layer_level":2},{"id":"a50eff8a-552b-442b-9a2c-ccd3fa5cbf4a","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"模型模块API","description":"api-reference-model","prompt":"开发模型模块的全面API文档，涵盖模型定义、训练流程和预测接口。详细列出`qlib.model`中所有公共类与方法，包括BaseModel、Trainer、Recorder的交互逻辑。针对不同模型类型（GBDT、PyTorch神经网络），说明其继承结构、关键参数（如loss、optimizer配置）及训练回调机制。提供从自定义模型注册到实验记录保存的端到端代码示例。解释`mod.py`中的模块注册系统如何支持用户扩展新模型，并列举典型错误如模型配置缺失、设备不兼容等问题的排查方法。","parent_id":"f0a006c3-89a9-481f-b536-5c95399bd31f","order":1,"progress_status":"completed","dependent_files":"qlib/model/__init__.py,qlib/model/base.py,qlib/model/trainer.py,qlib/contrib/model/catboost_model.py,qlib/contrib/model/pytorch_lstm.py,qlib/contrib/model/xgboost.py","gmt_create":"2025-09-27T10:37:00.520116+08:00","gmt_modified":"2025-09-27T11:26:21.169312+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgwR/euq0a6kk8PeDgwttC9KXAJlXho4b/b22eOssbbPfCjYnAMyDX3DiA6gzW3BI3Gs2F6pZcAz9csUQoNUb9oCmIvMbP1znFp3qi+D5hUiaTiSC6Rv+PQH7bOqhKgMoDOnMZqMLOZaVG+eSq3KeGTdWoLRqdy6907mqB4UWQ8dZ7VbZhmSRLHUGckEicIc4bUrGr8MoedEDlc00vFJhaVRlkZZJMbw+PVvf6iEztGThkzPYzJPpT5PDssDB4KQZdlFEHqFrW0vYgrcr9S1DH34vgfdAiURDKzNtcM7d5OKO/fg0wnCaeKy5iuKYN7ITMHfFBPiAS2sTSuoh5wJqZYM4SsDcaUGSOC6QdWH5a0tUGDLdm60VvOQ/SBlxxkfSs6WIGOpHG0qsVXC4nmfuY/PgNMwWNVEqDa0tm6+G/ZNUMSGydiTOvQwvbfKlWpTMDKMiPZWFQOG0atGqCoo9ucJOFKAPZoFxWCWskbuQESVy7xy/KzQikQvpP5Cg1T8/RWtLQTbcH0XEGxDtE+ouEK9GCo5zugmgbfj5HnIfmMMWjnxH5qmSST/9AiyzW7FQjR0Pz+9B14MVz43pLd/uABOT54qNQw5XUQwV3eyDm6mHFsqJ8d0S/vPAKuawS3eQRyhrm4QnfFCKlwTAPsWBMVL52WemspPAo4WVL3T0saZwhbCXkHyJphiaqCOv3yz5nyKzC1IJIcJoZdm7z118JW4v75LnmFuqVXIV9eTaB4Eey7HeCkeA5X3j9R2Am+6QyJX8hCHhoX8dEe/sl9uuj45AigfBdAX9L3M+SnrUYZj1RPo4MLLj0QouEiGYCiiN6pdIJjMb0MgC315tJLm6OLK/p14yj+PBehRf9uW+Gl7MgnZtsW06Kg89V+RsJwAtO/ntL8rNi/sVE/BhHpE/CY+jO+eXwIzN7QkxZHAJMqdOir/JXOXrdyvuWh7t1pVwPjgF3iMlWBbnItL9dT/Alohanfbh6jBeU57q9CLKrykC/MRvDJJmBNyWhj5QBublmlVsN1LJPocqw61dXtcQREwOn3i1K4YkkY9fKC+VWPPpTm4dLak8+jTmEZwe76CCChSXXzoMmUkDy7HDKsyMY7gNKS0zoWAkzlc8yjpfDVCcXEbFHPdZYG6eXsJ15sqYxQgo0EVuaUNuDWNWQpbkqwN0qqC8rqOjZQiPjgzCkacIrzEbLFh/8R2Eeqd5jIZu2T3JGDu+5iGps2aNx8O/JoI8UWyxBQptK+FOsVDr9uzMPdsDxuU6+W+BaLjEgjjsenv3OiZ88pgt4/wkW91HJcIDYZTETQjTwdZmyWDN5wcJ8LwN+QhQGXmojXL1BT4GWw==","layer_level":1},{"id":"5c16b89e-5d17-4c05-bf1f-529d9c710711","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"超参数优化引擎","description":"hyperparameter-engine","prompt":"系统阐述Qlib超参数优化引擎的核心实现。基于tuner.py中的Tuner抽象基类，分析其继承体系与扩展接口设计。重点讲解objective函数的执行流程、评估指标计算逻辑以及状态管理机制。说明贝叶斯优化（TPE）算法在fmin调用中的集成方式，探讨max_evals参数对搜索过程的控制作用。结合config.py中的配置管理器，描述实验目录组织结构与结果持久化策略。","parent_id":"b53ca906-fc21-4221-b5b8-74cec2815a72","order":1,"progress_status":"completed","dependent_files":"qlib/contrib/tuner/tuner.py,qlib/contrib/tuner/config.py","gmt_create":"2025-09-27T10:37:11.415882+08:00","gmt_modified":"2025-09-27T11:53:20.497003+08:00","raw_data":"WikiEncrypted:5UlmXk5e8xfEQqYcx/OSoFgkng0ruoUkrge/f4sBOOlcfLqBNyCw9DXkKkoG84lwnUYf3etZJGk/FU2Tit1viG2Gu0cuMuV+mWdarbzOzRbKtdpwlvDdKrWP9iCyuv3dwOpVKJBjLQyqso1kJ2yiAFR+3U1y2Hrv/zzgZG1MfXLGvXAvzE0EysvlAO04Fg46cciFaWcskpULnk7lwBzasLCy8z3C9/YwNsGvhV60SLxHw4s2kXD5AGuvpzlAPTmM4rZ04KgyGAQgC7V4L5GYqWISTLO0a67J/sQQAY0yoE/ORMY6NYNdhdxFPqllYkgdseaZC1c7qNIwFjeFAbyLDkSj3SWWZiUcr4ZJlUF7Urc3UvkdmeepL7TWsci9jPhaIumM2vQak1uzn7B4hxVIUJ19dJA03LItwpjIFz9ClVg8nqKE/uwaoghKJGeBz3StQDXjZfFzqEadT+xJmfHdoCOcosWa+CRFgHZv4nyEruZfjj+vxIEDMzRdxCncvviTbok5qT3m36Se681tBRsOgB7tRcMU3gZSj+4zw7XEYjDBfm+TBUkZ/6atvLpA9Put7EubKtPnNSAK7SXjqOohiA0ztl4XOvD00a9mKhQalKQ60YXHhmW2YzfqajC+DtbD2ASOnXufw4GhG8HcyYz8b9P8ely64TWjwd543B/tNMaZA8GXM0SA4xeutDmGzMPALVu4nwTnxopYtukqr7jeTVbT9fXZ3ZuaIQuJBA0X1Wa5tzokjQWXTWl5Ejre0wdlOZFP3ErrAlIlgC+Myq56OzsYTYHWYuqyYJAM1Y2t5oErq8bF8KN7DIkDqFdKDVHwqpWcFCqGXLHJHEa0l7M9u1D34pmH9g224n0UA6bz8iNQgKz8UNvoLNJJC4oJ+YtCe70VjMSUoHwDXRtzs/UO9VNhH4TqeosQq5PeeGgsYXAdBg5JVIK3dFa+FUN1j3H/yIgpQyxGbG9+shOpxtJV0qL/z0fqYVud3mM9iJGZCj8=","layer_level":2},{"id":"5d8e37a2-e264-4386-a540-bd5de2c0d9ca","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"高频精确执行器","description":"highfreq-executor","prompt":"全面解析HighFreqExecutor的设计与实现，聚焦其支持微秒级时间精度的高频回测能力。详细描述其如何通过highfreq_handler.py提供的高性能数据结构实现纳秒级时间戳处理，以及在inplace模式下对订单流的实时逐笔撮合机制。结合highfreq工作流示例，说明多周期数据融合、订单分批执行（batching）和网络延迟模拟的技术实现。文档需涵盖如何配置高频执行器的tick级行情驱动模式、动态滑点模型和流动性限制参数。同时分析HighFreqExecutor与标准DailyExecutor在内存管理、GC优化和并发处理上的架构差异，并提供典型高频策略（如做市商或套利策略）的配置最佳实践。","parent_id":"36ea3fec-0792-4dd4-8cfc-d9f1beed50d9","order":1,"progress_status":"completed","dependent_files":"qlib/backtest/executor.py,examples/highfreq/workflow.py,examples/highfreq/highfreq_handler.py,qlib/backtest/high_performance_ds.py","gmt_create":"2025-09-27T10:37:22.913752+08:00","gmt_modified":"2025-09-27T11:53:27.991817+08:00","raw_data":"WikiEncrypted:cLlbBxvI2h5FnaOTZavMHy31crwxbMB0Ys+KGz8I5ZdLMmDn3B+H4ocoHfuqZH8zfsH7xwi+JF9MHAZ14AT+XPtz9rkvhhIky8dAxLwdtB2rMX1SgvNGxWD7ujTHs2ZYfYs9C+ceDdxZVp8/6XzpGddVOko08GP+oncG8dg5s7m+KO7FdHKOkwFzMXQil3/rIwcgcnDhelukWA0KNtTonlTILgEPtCDVxrlvX4Khzre/uKP7rIFH1gVginEpGabq3P35eePAmcjdILp+FujWfm/FdZFDu7phY0oNpapZGIJoRq4Yz/J9FIpPZMbkX3jNGcQPnGKsn0hBdYfnt9h39i5U1xt9JCMqbwzpE3TW3j93wQxSAdKWK/qKepQRkKO2UJuY/J/+QKVj4j5VtXXNIArqpm1B6BGJ29AeYnMfDwz0HUpJtTKV+SkAv4FFSnzWcWBiIIuR6vX4wjwVlJ8ig4k9jrq4/n5Lh8lSuMeOIxDGniZEP3uAMpE6TJDGM3znNp/UbosdO9BTX86Dgvbp/qSebLEX3yz5MiBNTa/xf234YgWGoemdavGoPWr8huE1jHvsHRK926mI46Y2CkeDJdI6bu6mxKk1F0TAw+pUkI/T6cp6TLGtiOKbepRU6XI806hBkSCVOGm/a6x2T6XlCR192GIqWLu8J9e1UpA3nncdTg0b2NJkKZFVmyEzN6yKJppcs+LhqRRtjFJQvQpoWnkWoAHIGhnTRx7Id/VfsSEs+iqYy7wizKBTJkvVvN81w9iRNlOSl1GvbjK4Ag0JpMcLWVF5J+8oE8/7jUoqtohX8hFRvz9Xuhz6KDkJrALSytKRdC/cKeQa/xivZ9ZEDI0+uUEbcjSxz2b3+zvzQofZg+GeteTRaUEsElzC2pmLlGOQ3zLhlZSget672xp2VC8+qORC1gFDIh43c/9E1aaOR+VKEAN4GvUZMjgsFvzZn0jEihOu9+m4xIF2i6sgGgDk9kSO7Fne+5U1ll1COB2THYemqroaTOfEZV98p8QnLFNAeP3CwEONwhsmJZovg0aeOOgvEmPeB/AmVhqhAFm11JVRCYaYFwY0fFjHNwHBZFSch6B7ZAWuY6ILmoccjoGX8crS9762EWghLwWbI8qCHdsMA/zdhJtwPW5IAwUZ88qVEz3Wo7oX+AWPXDdWmOsIGwfaYd5K8Nyp9dne3Eyo5KuVdj1r5aaIOcBsBqKSVPuBM2GSwmAufcr/ExydfWElbkfWI0B45YyXExVsVVMy5ImwwuOmGApTnNFW+PZBSvLot5g5NVim6IkLR2EanzTQil+MukAB9v+dyvRx941L4ogh8a/w58S2tpezGGBQ7myBjVceFCeZPZNzCUaDEHTOaQq0WW8kwt9VjTsx4haXtym1KxpNr9TxwEmiIUXFBw3qzBNpjk0XDSQnpLvO5tW8tuB0+bHe7ZFzaHTNP/3fVeuGnnLExtXBxIyMTFbo","layer_level":2},{"id":"e6f41d57-0a1d-4daa-9003-056b3ef361c5","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"持仓跟踪机制","description":"position-tracking","prompt":"全面描述Position类对证券持仓的精细化管理能力，包括持有数量、成本均价、浮动盈亏、累计收益等关键指标的实时计算逻辑。详细说明在交易撮合后如何更新持仓数据，支持先进先出(FIFO)或加权平均成本法的成本核算策略。文档应涵盖分红派息、送股配股、拆合股等公司行为的自动处理流程及其对持仓结构的影响。通过实际代码片段演示如何查询单只证券持仓、获取组合层面的行业分布与风险敞口，并介绍多空头寸分离管理的设计模式。此外，需说明持仓一致性校验机制，防止因并发操作或异常中断导致的数据错乱。","parent_id":"a45e1a1c-ff24-45a5-ba1b-2460d5c65266","order":1,"progress_status":"completed","dependent_files":"qlib/backtest/position.py","gmt_create":"2025-09-27T10:37:39.466438+08:00","gmt_modified":"2025-09-27T12:43:52.325009+08:00","raw_data":"WikiEncrypted:ioCkbnEMLA3pKOh5Wr1ZoDXvoY1uRZtuHfUSPeID0eRM4Zedu4/fUKEZUj2D2o39FAfeLwT9S+2aAlHePBTLpc9gyV3uMfjkLs7NBIG+wjAO368XPjbi690r1z2yWQr2W2lCPT7jNDdgu7on4UoSblwrwKPxQEevrCbhE/HnWVXDkbqCpMthgIIE34mVg4O3PuPgZDe8dMk/xP6QzGUgo3iVvAv+dilAiknHr55UMX2qaLle7mwYaMl7528UXLKnx/ldj2KzfouGY/w8bN274RlSVoM9WxVSOzax6cA9nShZFQ2+L3s1diOtMaIzQnE+oQaN2dwhrnKU0KwW7s+lR1LDQm2ZCGGgqj0YrI0J3tn0k+3Toyobuypkbfl3JSRhe+cq25I3dL5ahtQ8sIa9UKwVsSkaj3ExpBIUF9+schM2NoJtRHtT3ZSV/0sNhhC6GEHOBlQXT3PxoFrmI2Xh7Xy1B3oLywhob92+8tPx6hU+jbefh7fJy7k9VSuqYKqHtKkh9U2ETP8s2nkwr/YpGF3W4p02R8+yuUce/QnOAzJdiJJLtbS1R4NS0ol5TjpxnXY9uxoYOdbX53/zik93ehMEgLwwrQIlQkd5P57XESQQp9gdQTFzXsgvDxXUOBM6fE3L1FkIbqOeEJ1U/V6i+Z5gG0X7lZLTKYuZWSMQjF6DGqTOLDMtgBFuqqZGQavfXBA15y+bKZ7XNuzqcIIIPncvrsArfPNtDTPMVbI9wQv7fs1z9TnxxyVbKWx9r++DiylC3TY99rmbf64WYVs3wM9822bb1KYsRrBHqt3ZRK0AXtNw25O0iug37fJ3pEIdwMFpDYAmlyRi0FhNb6VNkCUupOUx3J3usk8rKCk/LhEu57bmLXoMPRMmQdvjlqzMYel2zMZKGsaX1lOfD8A1gVMiRRPU1gFlCGn5DbMuOtTE5FFvU8cdGENJ/8muRXBl6wN0SHXofhIqXQwRTdnKf7rbba7fK5m2jFhERwkGGJ1N47HG6TJL4eFVWAe9r9fuGcthM7bjH++DGCiAQxRyaOOOxvWI4hLP6o9dOr5VVozuI9gRR1jWkKvrk4zJXl/n24mCK8BgDlBqiUV/f2ws/9nrfu8rrVoBqwBBbIsXghfO41yL1eO0dWnN90U2nBFrIMUWIko7MICUUOX0DrheeXurgsEOMzL23guGQUgSvdjgIYRoDctkHXf7wMdlO8ZZ0Vgg8aVI04BxuY9ZdQaSfwFU66SdPboIqWKeT1tlboNSd/g2Q+sxf4GHh9dyD19E","layer_level":2},{"id":"0893498a-d1d2-4fb9-91ac-3a14c401cb68","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"增强型指数跟踪策略","description":"enhanced-indexing-strategy","prompt":"全面讲解增强型指数跟踪策略的数学原理与工程实现，基于enhanced_indexing.py文件详细剖析其在标准指数跟踪基础上引入超额收益预测的混合优化模型。解释跟踪误差项与Alpha收益项的加权平衡机制，行业暴露控制约束的构建方法，以及动态调仓阈值的触发逻辑。提供完整配置示例，演示如何结合ML模型预测信号与风险模型输出进行联合优化。讨论该策略在实盘环境中的稳定性保障措施及参数敏感性分析方法。","parent_id":"aac29f43-9f90-4c80-9269-26885f4e524b","order":1,"progress_status":"completed","dependent_files":"qlib/contrib/strategy/optimizer/enhanced_indexing.py","gmt_create":"2025-09-27T10:37:47.602415+08:00","gmt_modified":"2025-09-27T12:42:37.754153+08:00","raw_data":"WikiEncrypted:8TgV9S+32Yy4iy6q3jF0syQvcFhj1nUd1ahtHoHiZ2eNs/S23uA+pcaa/BhBBN1pSids8eElC38mA7b+f/8EFWwHdfSND1uUtVvheLJHygsHh7Qh6GEemWZCGtvka77pxVQq2zlt3ywZXqQQCeFLmOnJZmdthtvHFqvMY+ThxWDYjZikeUzBiGjhB5SB40o49YI99+oX8Fi9RdTTWHooneUSCTeq58ZynUStF442iSvRv6Xaav1E1nM1GHXpFjchqbGHKUmqZj/TExTx4pNRPEfrOinjsZqYUMVXV+WxAuE2trn8mc7z7Yg3xVhsEnStOBg+OUlwLV8DJKmzG8bfDbPqkxSGQU9y2ygNW7KvUGtp6O5TGRWKHL8gSzGB4+GI37U91i940+UL+8Wll0vfrj0xuWxKM50SmF6JKKIcT9ChryUDRePTZVAmaz3rfJ1cwnFmWS+EEXqE4+vlGzDFwdpFn1cJuFF/diUChDeCVgpinZKodHg/rtJTiSYpIYfmzCpfySASl5n+6Avu0Y0wlr7lr/93BK3IH0T7Pj/jigPPeMyL2ZNjSd3nsNaZNfnKLImp+h/6ylzZAUn/RtZV760+LO2mnk1EUQGc+00wkaarKPwNpi9yw12F2Abwd5tL2VFPJi2VdtJygmcnVki3edVIN1M9UomjOr03PRbHkS6INajoeoghtgyAv4ddbHTxBRExu6pvkJqLyx+Kb8KjTUdXxgzCxusz5bUbMqwnb9isbeRB48sCcsdn7uzwTt5IM+Aar8wGD6cI0SNV7JBnw2jhHCdDscqgEX1HydAS07994N7ayF+LPrhcXxKGJaP5FXGiPsgusnoS6wWjRN9FmYY3YeKVRneYOVdJHAkdrBy+HaKAAqMEghvnVHfJCu8SeQg1Im+4s2Ywnwr9cuFm64hs68hRagz7fNJ4AMLoqaYqn5IZrKnVQqb6zKInnjIQCQgscJ7+CgFqvJUZR+x0CcGIr7An3V0DcTVmN3/P5GxnuCdy/4EZiyhUrgA2l5YjDcEuOZznxL2RBtQVfkNXxmrAZSN84sDCXz8jlNQhS9NrnmxRkkdplPfx+lRTmHoC+YWfDtzctt+x/ijsoY9hHvBjsvK0FmlWb9gw/CC63AY=","layer_level":2},{"id":"fc288f22-3853-4393-8138-199e00b56885","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"流动性建模","description":"liquidity-modeling","prompt":"深入阐述Exchange模块中基于历史成交量的流动性限制模型。详细解析volume_threshold参数支持的两种模式：'cum'（累积量）和'current'（瞬时量），并说明其在防止过度成交（over-trading）中的作用。结合DayCumsum等自定义算子，展示如何通过Qlib表达式动态计算可交易数量上限。解释买卖双向流动性阈值的聚合逻辑（取最小值），并通过实例演示在不同市场时段（如开盘、收盘）设置差异化流动性约束的方法。强调register操作的重要性以确保自定义算子可用，并提供性能优化建议。","parent_id":"8a795b0e-5874-4e9c-9e5b-25bac7c2ce78","order":1,"progress_status":"completed","dependent_files":"qlib/backtest/exchange.py,qlib/contrib/ops/high_freq.py","gmt_create":"2025-09-27T10:37:54.129895+08:00","gmt_modified":"2025-09-27T12:45:02.480201+08:00","raw_data":"WikiEncrypted:pj7ljuHpdQ4SykIRCEhk+VZYU5WR8MI2zr8ADGUM665nwUQDEh8v6J1GvR7FaO6mg+jN0i1IAlPw1pVlNnVtg3ccLnBga8v09jXXmKulBXOpOdrPPcpHbWmAQGTuIyVrR5I73BJnHLVrl2OGA/wtpx05b0GpkYxZl5yQsn2D6nQXQcUDqzIDVKaSIt65zjs6s13onej2+1OfEPvwoVEUANkqesOSch98ME3Zw90oUZWrlfuwKJ29+HbT93qArX9qQG9GxPayqex8ZZyvsi0fefMBttX4Ao78zz0jdyJks3JUWEd6zr/e+lteMqkWHhJKKMkssaoXV1IF9suvy8Buo0/72Ya+70pH+zNnPpFcD4pLiHIStOZv2XtrUtdaG5cXs03pOz9T3nB1DdKCMOK1Q1sK0QOi7IDYFH6cUS51VRk+oeaf7xzaJdZ6vFPAwtuajNVVfdg5Z7A6Bd6x2RdvzzA4LiqK5/QiRyt0Et1XSk5zZOPzcc57fKQTHxYf4bm46c9oK6V640vehQL2gImjzzeCI6gXyhEqfylG7iIE8mmojfURovZiNEGJgsRijrrUUuJ3fzLaVkgvgnUUDYWV0KucmATLpJUfZm5u13FKKf9ax9r2T4vnP42Yg5lGay1ZhcQ3B/K9sg9L3udZG9nrcDAFzH+MtAHcBUvlFWvNoRi9dQHgnkjV65le7j+404G2cxu4NuVytnXMLbblgEFbJmpE1Dvyxp19+Du5whrUnmqwYKtnrqEmzmP3cdRYBa2BDINjqp5a3Xzabr8C++SRXwr/Y1g64/+VSV+AUqyjJ3pSEz0++dWyz+GXm3EPBvuhe4yl6kvris5ZzqlGmDJ5EobCYka83RzkOGn4ald/waw3CDMv79dVcMRvxfNUq8vns8AS9gIZvCTv+e+OiXHWgzWPVKyaP14fdvxyNWyoumVc/3Y/BDAVlKiXXn6uAG8rH7A0ojeynDy28WnvUm/vqZzBnKXNGvWAKhip7xGOUgiSDavhp2JROF6B10AetKJIIZQRTuDKwXwaRwj1GsMtaAxcNJHUNPiWtcMcUyos3hhU1g2ECoQjly2jX2ERQVpMUZc4uk93LqgOIcr+lZtNRTI0wzXAN/ms5K9TUETkLO3zQB+rJL0iPNMYvIF1XhPGgHWIm3TsHauKOLQclRq11lQyqBn/iCFJcBRTVUqIPp5WgDFeGqrkSYQweXIAUIpKj1hqxIsSQdK9tHpcYqXo7Q==","layer_level":2},{"id":"3bbbf0d4-63b2-40ed-87ee-615b2e348362","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"滚动更新机制","description":"rolling-update-mechanism","prompt":"全面讲解Qlib的滚动预测更新机制，聚焦update.py中定时任务调度、数据依赖检查和预测结果刷新的执行逻辑。结合update_online_pred.py示例脚本，说明如何在生产环境中实现每日自动触发的模型预测更新流程，包括时间窗口对齐、特征数据重计算和预测输出持久化等关键步骤。阐述增量更新与全量更新的适用场景，讨论任务失败重试、日志追踪和监控告警的实现方式。提供与工作流系统（Workflow）的集成方法及在高频交易环境下的低延迟优化策略。","parent_id":"509c2946-5c94-4f98-a278-6bd995ab8f23","order":1,"progress_status":"completed","dependent_files":"qlib/workflow/online/update.py,examples/online_srv/update_online_pred.py","gmt_create":"2025-09-27T10:38:07.952911+08:00","gmt_modified":"2025-09-27T12:03:57.54773+08:00","raw_data":"WikiEncrypted:SGBwIWyksNClrtXgsAXRZWNlErquXXWsu9jCBZvyec71nO3ABm7+5ne2pCWZ65teqxobT/NenHqmwKiYyu9nvYY9hIuSiJkFB6Giy/dzfIo8WgIwQqtHkS0DGDuFj66L2FlgdPa8wopiH7nu2gap+GBgu0SMOhuPx1MXIk54LsxzzZEjQSKQ4TY5agp1AvNL08YWhaOauyJVaJ3LGNn9Vj9i6lNtV/CEQPVqTt3UAOy2S+6AorP/7/KmrYWY9VvMJvw9KcsIOL9K+oGzdD/bnPHhe9y1diTx0hGt43R4jcR013uYN6okK9KBnMHS9IEfuZTqdWMTXavroSIT5Uk8wP0+Eks/RuCmXyD3a/JaluI7zlby00M+lZCYFMBdWQdNwU/gS1xbcZbMZIyPTGybesM+P5Jm/w7+OmkmNhxw3Xb1x2HSqn54NMF5JpNRSIeAzVqfzZfGS/W1bOh5D+MvZwJM8uHVq3jxaXtYziuzq7GhB0UZRJNIggG2ZII93dzzbK5QC/cXGNX9CeAbNiKwCEUGiuWOC4BZca+8eFV9R5KSlMbKOahHEw174oVkfFgAKFjqkBPpa/ygbRm8rVcRt3GNHzUx7Iw407//deKEnePYkcQ+wcgyJfFYZ99XZMVugGaQwJd/uEakJInrH9GCscs2ovTAmSTwGQS5612Q2b2PxAoGmg/leLZ5rlKW/5FQIB/hRrjphj+oFwNZQu/mk+TSZD8O9/puHntnJ0ArWcozo4r4kp56A7xWC/pTYLXlj7DiwzmYqiHmmKdhk4lhOtXHUPp67i8YuRlCC2+A/cieX9DGGRnI4mib7XkskZ5vIv5D+YSSN7dMcJ62FlehRDxb/pu+9WU9fV8mEa6gE55/CAeVvOuDlzR+lQMW8rRJFoURXH/FAzP93YTqIskkEBo9JBBY+6s8/DG2wq7VMAkY/lD7dA5AxB+P0PaLfoEqaYPU7yuN142A2N9pPEYRBvGmKMwlftGvcetl9QA9AsePqhbiAdg2HbEzcNiTZspn1u9Pbbhu3JhUsy9jLvo9JNCwybCRn7nXZT7A4ol6WaTKkJI4RsbSkHMdodnpc83T5kW6Sn9TeDvm+UV+HjIiZxKqu1PxG6/5O29xRMNctlIZ/IyhxoRTH1eORS7BIVtbl2KlYLJ9XWp4prJT29BHJLC1ZuHgtGffmd2XvNUL/wVSolXdNebV/WmgKB5E3OdBbdTgRwFIeQVjyuW83URLFSzFEnUzgmuHDzmVAzyEcFU=","layer_level":2},{"id":"9a3cca5b-e2af-485e-8ed2-579b8ad16c3b","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"高频数据集成","description":"highfreq-data-integration","prompt":"详细描述highfreq_handler.py如何构建支持多周期融合的高频数据流水线，包括tick、orderbook等原始数据的加载、清洗与聚合逻辑。解释其与workflow.py中定义的高频工作流的协同机制，特别是时间对齐、数据缓存和流式处理的设计。提供配置示例说明如何接入不同交易所的数据格式，并实现微秒级精度的时间序列同步。同时分析数据吞吐瓶颈及优化方案，如批量读取、压缩存储和异步预加载技术。","parent_id":"5d8e37a2-e264-4386-a540-bd5de2c0d9ca","order":1,"progress_status":"completed","dependent_files":"examples/highfreq/highfreq_handler.py,examples/highfreq/workflow.py","gmt_create":"2025-09-27T10:38:22.411052+08:00","gmt_modified":"2025-09-27T12:16:55.384069+08:00","raw_data":"WikiEncrypted:cLlbBxvI2h5FnaOTZavMH41iazO5BxYBUVS7+vrqnzsAnacPWmHFILWJpPMALHEoL5O6MYihJcCTzWGD9d2L0n5Ux0A7iPpxKEQ+NIqyx92Pasir40xszwYIydcqCUOkTv5Zj5Bu9vV6shaTXq72bnGbuJHggZkppHuXbXuaRsKr76Bnw69ozkNeV+GxAhXuWf+grETn2paRZtqgjabUOKAvMT43/DdLAJpLWcDI0rpTykpccFaJbTpr0f3lLr3z9MUc/OHExiVB43g8HU9AEA3u4t3Q28WjuQ6R+/IX8z3WNkQogg5aiv9qlR2qsQgx0q950sZFXi7QS34h99dbGqM2xfkJbJos9ITkEl7J4MNhod/awCmYegcRZJWgxKA2ZFbngNrFFOgq5Mrra1vxfSnzWfu1cHhTVovYRaMltnYLyk6/4pLYF6CXUiKTO0oZjZBy5T97K8C2rfe04YfycYYjDQwsEvOAjhRsBka7KmYhrcSZ9Q5bB6pzbA7thUs8FRqaxTr6VUtugoPab8N7WIYVrW0S2B/84ePfdhnpQAvus7h3QRacH/yyyOBDjSFXNvw1NQSpEMaeThhPUfwhOGxFqn6B0xgYaAg+hCTIdiUAraW0ONuvJrTBa/lfyZdq9Bmwf0zq25l0w48Ag6QL6DgyhnifdhQobt7h4w3v5QES9OvCQCYtdVNK350L7/fNYpy4RanFvOqj1S3lIlb3oH3yTBLKfPhMmpCuVi/URJwVZZrP7YHmEusnnfbFiKZuXYRm6J2z4/7ldQeVm4/ri1UQ743WOzrMINdA+R6FPAWa9kV5VnfRvUeea4AKQIPGWh1IFPDjqNEFA2TgAnHMhE70mRBCnmIpcSuCB2mStuQ+WBr9oOQuvg3gvjq8n0J7fLNoQuu7jCifoCIgY/ZwpP1op22/mYnEjvvN7Iu61ux1kWWfv/v4wUi6neUbo9cZjGaI5wUif6VEw0W5qbt1+TIlkYlHaDCMbfFFqK5JwQkMci+3JGxoeqMYo38VGXECZPStWjJs/UHGIG4FPwgxbsAFEKSV0Lf2hDMJTvdQV6jYJs6kNS87voux9IlCQeri7VFh0+sNAauZUXt04IRVG4AewaFXxsTsf37bwufDPErfuuPMbc3k0UB8hIm5hR9P","layer_level":3},{"id":"653de15c-5817-404f-8ee3-4b612961b53e","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"GRU模型","description":"gru-models","prompt":"系统介绍Qlib中GRU模型的实现原理与工程实践。重点分析重置门和更新门的工作机制，对比其与LSTM在参数效率和长程依赖捕捉上的差异。结合pytorch_gru.py源码，解释批量归一化、dropout正则化和序列打包（PackedSequence）等关键技术的应用方式。通过实际YAML配置演示训练流程编排，并给出典型使用场景下的性能调优指南，包括学习率调度、序列截断处理和GPU内存优化策略。","parent_id":"6bbf8837-7976-424a-be4f-c64d28edb86c","order":1,"progress_status":"completed","dependent_files":"qlib/contrib/model/pytorch_gru.py,qlib/contrib/model/pytorch_gru_ts.py,examples/benchmarks/GRU/workflow_config_gru_Alpha360.yaml","gmt_create":"2025-09-27T10:38:45.913157+08:00","gmt_modified":"2025-09-27T12:18:18.750583+08:00","raw_data":"WikiEncrypted:I81FMLyKMjTK4FzzUp3Vi2MQSJFlLhXbqWIlqcXPONGn6lRyXgDjM+2YbnT0ioF/zxLtbBiOoDtXW2KYJE63haNd5dEFrI2Ko1dnLrlFhHZMMUdT/UxK1kaoRGcilK8/7McLVoHYcQnh39poCiFKQcmk5DftWQzsCfHTqAVK/VCrT3dA8B5dvz8N5gfeaKypAkNdSKBR/oyetbMDZLoy0TPMwOrYwapUaGs4NzE+wWUu5kE1g2Lk8o6MFMyp33/wD4sVXSy/UfyHq2SMsSlGlvHJy1iVsRu/GnT1Wj+BFJX7hisRZ+Mg5oHzotDS/o7mQkiiKJ5ove87PvXY3t6+a8rdaR+Npdv/rbE+6K6t4pquJ5khUUn/Fc+xqtJnAmwByXQVIdBOKdl5AIe0Sv5N3yPk1P6lLlVXHMEhc4P6Can7AVpjtJ026L2OdV82JBEyU+cEpw1J7rr6nN5IWnb4QRtK7DQpy85H5u01qaldTxt09yaBxaFWchBhFawsmEbmB/4rr+CAa8/wxxjCFXsdBFnQ3/6qzxMGD8Rde80mDWtiJcMA4jheKtyaq5fc+hY3J86xGEZlOavtmkkS/oEFTD+VhkMAK8NUxCUZRN/cjGEEoju9qY27Q4Dy9PLHWEjoM5WNStGAE/u0/JDXtOUxIsdmWq8Y5ZmLdbyCTbYuIViFTW5+zfd6L6FIFJXXUGcVpw1URTnmx1n/gMttCEJj0szpGk0V7QroDIRWgDDXtaTwEs5I8cBeO/1qJq6bX6o0OWwza6Vr9rtY6CiTNdtMPcWFQp9EUDCpoXp4u3VB0Z+I3oaEduZ6Bn/YYjLv1jecuDaFoEcPBfEk2j3OAdikOqOjl1/vbBZvucsVrTRs1ADJLctPuXstfLrSuVv4dzk7paiMMP5juTsZZHryfIcMmzhgXgcUcKdMJfw1PZyhgW/fIcHtBhxN83x4HF4OMd8YeLX61ZjgfD43TbXPLOmrIhNfEgMnrSEJ3mjryi1do9psO49zn/rPLDaIwNTJmRNmQDkfESb0gVIP4F71xbNVL4yvKDg9vs3Vncr/QztoVDKCamqoSfqtb3f+/oCty60JmGMIMViEeFlVxpOEtgbsdA==","layer_level":3},{"id":"70b916b6-1606-4125-820e-91e1f0524d8e","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"外部系统集成模式","description":"integration-patterns","prompt":"深入探讨自定义执行器与外部系统的三种典型集成模式：1）对接真实交易所REST/WebSocket API，实现生产级订单路由；2）接入第三方撮合引擎进行高保真回测；3）集成模拟订单簿组件支持复杂订单类型。每种模式需提供连接管理、认证处理、消息序列化和错误重试的具体实现方案，并结合workflow_by_code.py中的配置注入方式演示依赖注入流程。","parent_id":"763d86f8-f7b4-435e-ad6e-05140152c8fd","order":1,"progress_status":"completed","dependent_files":"qlib/backtest/executor.py,examples/workflow_by_code.py,qlib/contrib/online/operator.py","gmt_create":"2025-09-27T10:38:49.954025+08:00","gmt_modified":"2025-09-27T12:19:38.879795+08:00","raw_data":"WikiEncrypted:0j4RRfWJQdenLQLpT+DwLY9h0ctWLZwu8+2HoqcoTgfUVWmSysFoBm3NQE3SiMcRgTQOkcryEMqdDQ40yJK2CtdIBioJOBhREE+Rosoa91WIoT+S3IJjEfEKGN38SqGVVTWboe6y2V3F6Bux7WZFc428pPjDz8pstLubbd4Ro6e0Bkegrkww/ZZcFOCr0oRR3ie3ksswQkR6f7E1UsXftVUnwErN8bHZ23v+QC0ylrulWqR8uceAdDXqYKcvDSHkCcU33dJeWJ6Er0K9oMTXJXeMMN4CLocukHXIgoDe+j3P4t+1ew+C3MqgFrA/YHTX7tuwoX1cX5/nvDdo3P0JhZdXf1kv3XfHvubH02sgWHZ+LNjNvXQDi7ItVFys9Ly3cw5AsuXfi6dppnygC/mpNnjvidPNhlGHOx+HNHi6/QmNtr8V4v5U9zgyYmzFOP6CYlbYNS03wIfXHk5wEZXipNwm6p+cJt8RoczNBuGE29ZaZu0qSnBaQfDdHXfBIGq86jVLHDBAb5M3I5Wgxj2EPmJMfo2BB4f6Nf0NGdzDq2AbmIB8+8v2PrYQfwA9h51jMKVcBc9K5fHVbG6eGBNv1ILQ5LcztnkiviKBbe0/0gt7qMdZnXDJuxvjvJxDbJa2dttZOWY/4aBzgYhjzLzArzcObwEoSnMm90b7m/VnUEI/7a+86id6yW98TLqNZoOSnrUYBhk50jqKUVFSbF/8Z9dg/Irr/fPQRBkFYBrTcLZu/7BkDJE4IVKizAsXb9LN3xY1ZjYjlpSdedRmHu71xJyg2n55EjyyQJevM/Vl5Y2RROICLDT6xOEwRNuLbOEPtRVk+qOXFxSCldmauCO3ZfL/Ag24Pbz+LW5OqL2Oi+xGXN5SLBs6bKCyA/SHmsOHsRJETxgSmHbMH8OILJZg8UB+A6gCGCO2AGxDXBJTQtT98z8U33qWDP+xWWv1RjOC9nGExa0IzRIHKJd0Gud6jN+82y4kgVmocrBQLflyyDkY6OZYj5H2HuLVxxGS2fMth+VecfrYAKmS/rIuHCABfg==","layer_level":3},{"id":"4da9a75e-5505-48a7-a549-679650bc6aee","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"市价单撮合机制","description":"market-order-matching","prompt":"深入解析Exchange模块中市价单的撮合逻辑实现。详细阐述市价单如何根据配置的deal_price（如$close、$vwap、$ask1等）确定实际成交价格，并说明在不同市场数据可用性下的价格回退机制。解释市价单与流动性供给之间的关系，包括如何利用$volume字段评估可成交数量，并结合_volume_threshold参数说明成交量限制的应用。通过实际代码示例展示市价单在正常行情、涨跌停及停牌等情况下的行为表现。同时描述市价单的成本计算方式（包含open_cost/close_cost/impact_cost），并分析其在高频回测中可能引入的滑点风险及应对策略。","parent_id":"aca40851-d9fb-43c7-b5d7-4b03ced8e88a","order":1,"progress_status":"completed","dependent_files":"qlib/backtest/exchange.py","gmt_create":"2025-09-27T10:38:57.017745+08:00","gmt_modified":"2025-09-27T12:19:19.840891+08:00","raw_data":"WikiEncrypted:qkkQKHQd14wUQgICDLUzBLvny1vX1XwxXyzGwsxlYYhtB7602LErb0LKBGErodanuHNnVsqFhlqDQGn3XcZp3jWGKB1VstiLHHAThY/B+exmQkg+VpkGQhxbGS9lgGeCboKquu8vPHa4D2BBO60Hg6gNTlTDpkLQb2Y5Qqp/Tc2UfPzOg1dhZ4BQPFIlKCEYDqUobn7vBpTHc5dtPjrvzo35B0sGznBjRxJz3Ae888j7Br6oZ437MietmvcNIYEPXFz1vk2J3w3JSAzEfgYlmiy2Be6uJNc2sv+O1mGdGN1Nhxb8ezlDo+hkm6XkCd7sSHB3S5FQuCbrR2Lde7bWXYmcAnXxYgOotWqlNxGpxNv28+hiJ1QVV1k0oY03SHgjba7SEPZw3pySrGQiKQKEVg9ktsJhVNEI6+jQWMut4oCcnRwNmyk48XHjraATzhnQ5lr8XPUFW3sYYseCPWYe0M41K12DIihpjeWC5phR5+lHtcYxc/LOe/mw+8sLqQi2vdv9dr4L4eOz5Lk7sy1ArfXqfco9LPeFnToufJ1HgnWrRI5zabs+qQ+cPu13nMPT5oUGjEMYCLn1yvI0/JSNtJAOlr+sgLdsxDjrb57bL6RI3OM9WrIuycHXCVr8vRCAJlWjKWYH8JOWmUr2g+sttZDSu+1e3fs6dKjSx/y6cNgrCNjG6osuUzppRSEgZLUygLahYcFsqlEIq+IR2OeKW4mg5oCBYQsKVcZQSDx5CLS061+o9p8HeUD1EBmVkMvJLl3Kq2jbulZd4AjuDI+L0w/lcN2pUhm/OrIfaV5k0nZWDz3+6yEwlipp9caEkA7EfNfKYnxV0yytY/GAGi8oapFRyFzhpjjhWM0kcPj/2xW1yesofeKtjIUbdSmsxyoeaBoTiDvf4KY+F5pfKSdc2rvFejygSUvZh8JjrAMpNuQUV1oTioxN2e+ayoBjeZZLBQluo28GDuIuRr2Tlsi+JwOfeG78hrmzTM9woz/GtCD3NvYbcZuP9+NRmLeCJG7n2Ehm5P7j5rwJQHxfHGSDWAonqyqPI9Nxe67qpXrZSsTJOhNfwA/yZe0cWGXXt7N+PhtqwniVXGHQqka//QEQeavFZw/kfXu8oBOBkpmrXQ8eTxHbLQ75mKKLhbvLk1d+53Zi3MjsTCjg/XBvrpU+JUVWOnQMYscjC2ozJEm5TbYeUtTWVTOz1aXHXBP6zlQwtP9U0beh8FMIMU58UVxs50/QrmA+6WX3mq/Fvs+mCFXpdOKtagoLoJdiVz9bsHgoTy4rWpWfkWwWTHw6CJ+PfA==","layer_level":3},{"id":"bd4fdd94-a201-4f97-a801-731ccfb5e023","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"停牌状态处理","description":"suspended-trading-handling","prompt":"深入讲解check_stock_suspended方法如何识别股票停牌状态。分析其通过$close字段是否存在以及是否全为NaN值来判断交易中断的逻辑，区分stock_id不在quote列表与存在但无有效收盘价两种情形的处理方式。解释IndexData.isna().all()在序列化数据检测中的应用，以及np.isnan(close)对单点值的校验机制。结合实际回测场景说明当标的因停牌导致无法交易时系统的响应行为，包括订单自动拒绝和日志记录策略。强调该功能在确保回测真实性方面的重要性，避免对非流通时段产生无效交易信号。","parent_id":"103282ec-7831-4657-8318-d9fafafe4fae","order":1,"progress_status":"completed","dependent_files":"qlib/backtest/exchange.py","gmt_create":"2025-09-27T10:39:11.95838+08:00","gmt_modified":"2025-09-27T12:20:41.545931+08:00","raw_data":"WikiEncrypted:69PpRpTZWETUwC8nZPUKfDOgr/6gtt23z6K8ehD1qeLEhlBz4OkleG0QWPS6uATw+Pk5ubcg+mDHD7F8oF0rmKpbdVOjybkG5gyTVkxXsA45IM98b7X6Zu6842F3laiYn038qV9D0b0jzHsC2X755lCt9tiJoIcqRSRY/17Lgyg9B1mHJ31qwCw5zRh4RgDLmjQcX+gRohH8/V9OPA36PM/YecpZDOFP/h5wkqJSQ/Ji0g9lJqozy5iEEV1xxoLxVB/yBdB3Qx6JnLJdpRgOeXA/6lACQwptcbY6jv7XiJk364eY32QxSf/e/ElobR/tLUXt5s0Ap6P1YsaUyltfTw/Tln5P0sCT8ZfSaiFbF6QcFlFPMcOpZ/0swUc/EwFXTZboTPyroOY1qD5oGF8+PkdLzoVdyFWPYD0y4Bw4fiQBnt04djX4aHQjiiPnglGrX/QjDveKj0TUR5CHGU+74A2cjKQzaJTnqy35fjH+xCDw/2GRJAfy+mPAOoKGUzMSPLNNNdIaYvgf/E2p8vCjXZWTjSICyYSH3PxLRqGGoq3vtdwztiMmeClqLHh5YdXD2XZmAqOyh7LwapJLlh5kAIoT2QyzTdfEic6urOeJz6Da8f7qdGM4HsJkpASFp3rhaxd0hYzEeNFdTRaX5KZRLaEw4OoSxfn1EGLmdQMeB+2FOyWVt3Pjss4nuKPWXfRor6zLoYgebThDL6UCtdJDFJTyiLBZ1DQYPqK+R8ZaczkH+YaKT/MlMQzA7copHQgMqwQ6STgNNxMc24HQYQ9Q7OjdsE9t2HuVhnqyfZpMBWRVVYXEBVNuXgt5JD87qFXramg+jU5efYGyxeRhRWacWhZ1P3OtSTgfJ4BZU7uTlGWO3IX9KHnKbuGMctm35Ybd/VB1TXwPnYnjCTO8S70jF/XjpqKGB0CG40UzkVkZj1kzADtEMc5HzooG4QbATW1NjOvKlc7XnEILD7ll5Xzqc9ha+XElMqguVquCht87pGnvrnEskKu+Pfa00zLNyYmGZJkT0JAtJNdfTbgA3lrXgZdg3sY5K+CPezhZgZfykqfUA6yt4X/izQnON431lyWLV7S7HpA/Qr7wA11V8sGxIvyIP+s2AOcjFrD1tfolZgZHfCgXNsa6bfO574PdPre43vC2CeTE3Qml4zPVH7S4MQ==","layer_level":3},{"id":"b858e97e-424a-42d7-b6e4-e7b42eaef21f","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"瞬时成交量模式","description":"instantaneous-liquidity","prompt":"详细阐述流动性建模中'current'模式的工作原理，聚焦于瞬时成交量阈值对交易执行的实时限制作用。解释该模式如何捕捉市场短期流动性变化，并对比其与累积模式在应对突发行情时的差异。通过实例展示买卖双向流动性阈值的聚合逻辑（取最小值）在此模式下的具体实现，说明如何配置差异化约束以适应盘中高频交易场景。强调register操作的关键性，并提供避免常见配置错误的指导。","parent_id":"fc288f22-3853-4393-8138-199e00b56885","order":1,"progress_status":"completed","dependent_files":"qlib/backtest/exchange.py,qlib/contrib/ops/high_freq.py","gmt_create":"2025-09-27T10:39:18.440417+08:00","gmt_modified":"2025-09-27T12:21:15.04974+08:00","raw_data":"WikiEncrypted:H40IG3QTETlFfL+Gte6dXr5S2Tl40pY3B6WZ0Sy9URLCqwwAqEdsbGIcnKUVS7BZhi1QrTGzdfQPy3vdCWL2XwfCbQXetAlLN80KAHtjqoQ7beXSv7fAc7GiRCHLpqJuuY8h72XrJMBt9Vvz5vEKySuFuVLIqA2WqhteAT5Dt+3s69xgzA/Ag1AhuuN411Iqhgb3zFgl5DEynWgHAW89b4VkrbflOhPOsN+4otrcbfx3SMHPbLc63x9Jmd8eUHha+pSbBSGChcKfGUHz87nM+4tX4FbBfOseioZs91GzhqE70cbF2RrymxbBbUXwa/wEXuXc4rc3LzqEgwcWLMRCHDkHv2oPUqGe7qCJyivstdpfUnBgT1TADqRYwdkws7QBTxCmS7yueIFyFvoEU5LSlxJzP3vBFsQWJl3DadypRTPKG5xSDAGd7D+mQ4CT2dB1Xz55698cwhqaD0MtRIk7hhXe5EE723hui2c2OtiN0/QJ4+JX80xxiQpLlLj4vtH9QKQN/1ogUs0YMNkIOB6zM7RMS9SVzI4JY7LEY1AAOMhyqgJbaYaoVqrXNL8m7qdzUGHMWR/iKmA947saYiypPXWomuL+tdkTAljbifviZ17Mi5z5dDW9rt6LWZOoTZ7HcpKrkwr/O4zvClc65m5VnNeTfd65keDKLhv6cv7xUz7fYxWovb1SVGjJqK/704bDzUeC9vjdY/1Ae/PbvPAkkBC4Bot+ms2yh1hzDyBVOJ0NXTwO8waP+befc1qQhh/7Qn3/Ae7JUkfAo6umR3JKxZKBbsKxI8bRNDYkRmk7o82fTv5a9KRLWsiNaqaV9Ndwi2DhEv688tRKvN8KlQeDwIcb7zwgAHvRrHar9x8CEzJk1crIuayI0iTxliMnJvcDccK5s/Jc3k6uSQbL+ZHutJcEiw4IxItc7vPLn6FXlapcs5DM1ikcazO0zARYxu3cplQAJyxHfmcJfyK8nBUzHqkZPGEIEUE8rjsuvi2vvyYUSPqYQnh1k12lOVY27UMO","layer_level":3},{"id":"a392b60b-87b4-455d-b113-17105ad33931","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"ALSTM模型","description":"alstm-model","prompt":"全面介绍ALSTM（Attention-based LSTM）模型的技术细节，强调其融合自注意力机制与LSTM循环结构的混合架构优势。详细剖析pytorch_alstm.py中ALSTMModel类的实现逻辑，说明如何通过注意力层动态加权历史时间步的重要性以增强局部趋势捕捉能力。解释d_feat、hidden_size、att_dim等关键参数的意义及其对模型性能的影响。结合workflow_config_alstm_Alpha360.yaml配置文件，指导用户设置序列长度、批大小和训练轮次等运行参数。阐述模型在处理长周期依赖与短期波动之间的平衡策略，并对比纯LSTM与引入注意力后的性能差异。提供预测接口predict()的调用示例及输出格式说明，帮助用户快速集成到量化策略 pipeline 中。","parent_id":"604c91f8-a45f-421c-9850-3f7805d47461","order":1,"progress_status":"completed","dependent_files":"qlib/contrib/model/pytorch_alstm.py,examples/benchmarks/ALSTM/workflow_config_alstm_Alpha360.yaml","gmt_create":"2025-09-27T10:39:40.040017+08:00","gmt_modified":"2025-09-27T12:28:57.940184+08:00","raw_data":"WikiEncrypted:kNqWybuQIWCn6yiit8u64vHgcermVMCdjBlObnXx2D67I73prMq9RmojPSGLEicGIIXB8Fjy3PlPzs4/JcI/Qq6m5nRAROJGq+autyu0iZO5wSne1/mWiXGxrOEM7srhwEWzxQFr0CxrjnwL0YeE/N4rjV2KP4ABfD0m1EMIUArBnktHaMTEuqNbuslTO7DT/FBE26oAilGB9UOKvbEvO2digqvupPGQpSuQ/wq5W9NfYCjlxXcKlaa6wHrBWvbvXv+yt4upvHwXDrvextMkyRLlNExaY2T04oeGIctIex6VXP2cIJwm4xha9IGWduZeCArRYH39m4J9Mjg3fFWcZCqXx19H4Dl58s0cN3IrsHhIqzUK+CJJeQRwdIkssp5LfNc9zXADeqrNSZjixnR1BzllXt/p9/N/hWmFOsMHsxa8AmpZ9imRrVoHHNGKagGzDY5PRG1+qEATc0fa523c6WUgMhW5TVLHUaDd9PhszBk3LkMJ8vVjLAvTJmJthJygKnJWWI67gJ9kjgXO7P9+YOETzs9DQZRBjQ16HlgH0QOP13RUbB7DljpbEAZe5my+v7tUuzvXCHQvjzc/i7Hf0L11u5GarsV7eTdtZPO+e4ZPZcVMJO1CCKWqGg+EGRG4hTq876CLFC2/rSoAEd3BepwVRw1Cr+kbZsweSSDGHOw2B/1xuIURDybtHbTKz96nWB1D9lGfuGPJpElPDGXYX3/AnNt/DxcLtMNUUXJ5ITF7rbYN+1UFq34tO6mrIvonsOP5H3uiVt74lg9AW1e9Vnk1/hlkIwT8+YjWZctMnklm9AHp7eAKE3xmn07+yQPQt6gSwu2lcthPZe1T/CDeim9QH8ARvm/iT/3QOGdTJKRSOX9N/53nHGuv5r+/npTWlXgPCzekPFOZo4t81vR3ddpRb90soBrKSMko2K5m5t6PMyeVVzffK7ZSmjzYk4KW3QiaoqX8Ieji26SRPJlbRXYnJdyvNrElzhxkcz0uGA7qRCIX5WEWAjqEEJgDKmXMZbvfsyBgf3WQVEjfjzHrHS+c+l9rvSE0SfKDoDqoNGM7oWtyYfNDyAAK5Bsgdt51uVvpk36d1MUmZlMGcv+qQJhyQlYOOamPeECAltrPLr7ppETFIsFeGNnPb7rDuUtf66d4lFbBLDFNhQGSncmd+2a5wWx13kDREwpmViFMHQF75kG/Zh+O+bU+oIIgNVSJmhFfru7buOGyxDOxeBr+y0v2pFsYhn9W5YR8TcLj/4GbiSPpMZM2GUG7tJiczDXegg6Cay4kxzDIIQpT46l8jOO78o9D3x5/1b6FddToNY6zxLA31oloV75WIGNAa4oNhxa0Y4uHdwm8FiZqFuH6NWcB9Ke7u6hO9iN2u65HFIgDSR2YNKOSIKcPQ43ctVH0gDohFetFmPDi904TcTZLssTCIoGdG3OmOman8K12nvrMvUyQNcuYAyA/y90rDYovJfpaU5LZwXQsN3qKkrAsz/KJXDYzJ8dKOKfuADbQvrh168hFA9tc3f9PvRGLoq5u","layer_level":4},{"id":"ee2e30e0-2b00-44a7-a86d-d24456832772","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"数据模块","description":"data-module","prompt":"全面记录Qlib的数据处理核心模块，重点阐述其高性能数据层的设计理念与实现机制。详细说明数据加载（loader）、特征工程（processor）、数据集构建（handler）和缓存策略（cache.py）之间的协作关系。解释PIT（Point-in-Time）数据模型如何保证回测无未来信息泄露。结合data_cache_demo.py展示多级缓存优化方案。描述自定义数据处理器的扩展接口，并引用contrib模块中的highfreq_handler.py作为高频数据处理实例。提供典型配置示例和最佳实践，包括内存复用技巧和大规模数据集管理策略。","order":2,"progress_status":"completed","dependent_files":"qlib/data/data.py,qlib/data/dataset/loader.py,qlib/data/dataset/processor.py,qlib/data/dataset/handler.py,examples/data_demo/data_cache_demo.py","gmt_create":"2025-09-27T10:34:17.042723+08:00","gmt_modified":"2025-09-27T12:32:00.782683+08:00","raw_data":"WikiEncrypted:klcgW2PbPxJambbKMzvFt2Tj6Ek7FM1mmg7SW1TGy7Rnya8DzpxZLH2LYgqyjEiUP+ef8Nhs+BpUbvQMZXdPfHEM90ROfE0u9XY8udQZzuUh3IS+tvSQmzuLJkDXdOmJId8K9+t1GimrxMyxPDYI9ILoMIkL/W+9MIALGQBuuTk4tVucvDllQAounLrr89DKYht/nBywFpVV2lgswd8BuXmCiyEFGURNW2uQ+gxLozYwN4SVR7CHk4RUy7IQz85YNJ/lSp3dP2fpxtI/dysQZmdXQPiWdi2ytH33Z+wZ6kgq9LFYJpJ4SitMJf36+cDwRWMWm+EGcISKSXX0wO6myZ+sURZEHbDgNhwZbxoBXSjaRdJ4QTapRyLBOdh0pKapuCc3oWZpEmVIttIzNDFgFZg39SnNir+ocONHu//+eXpKrtbCGrmFod239d9oCWPxEMKgTM3i2BNCKZ3e+EAMwAaaf9YGuyQf+Bjm9oTkeGjy71euFZEYm7Ug2NyfN74B5yG+y9s+ZmCfRG61thl3x5LqP2Lmt9vQQXuaKHYQ0xkoz+vWLtwH/o7edW41Gf6ANtu4Ym/OZZEkQzC1zly+zrFrPvtVrWErm9FJ1wjj5fPRHVuWcyUMC8TQnmtG/SBk2GIexsKuxqQI1Sy3BAbU3LEqnKOltVynq3DMqw9hd88/PghEKm9wFC+0UL598LS7hod07xT/WcpiiyREz2G/+gNpjihJHX4wRqcsVojxWHqK1zgratm3RPcKz3QhaCExnG/CbikMKnbSKTaLoAU5nJ4holHPVjmUU9uVWr2odEtukTUsi3/G/04TDMvwqKRYPGjrMc6q4digi+KdiwGBJJj+3W3ZxsBolEDohQIEdGLN5fbSRnGCFDVYYgKhabhMo0KcisIlvdfKU8TWTz7Ie2uFeKZM+LdBCSAm0AB2BQR+KT7SfkpiexOb4/MBUkZUTjksF+CkcoBbKL3a7iMGvAmMt9het9b6OhDU9u/ImGBuoq6+wmr4GMrisA+CScem2/xQD1El/avt3XXnnmOmedrhrjhAoguwdaC99Vk+jTtR7VuC16gMrnIBOvf4lc4C0S4d+E/xt/FbZ3e5Q30XxM5Ygz7V+G4+zYTPMYtW8kj/dWm0eM94xq53CSM4ckCNyUtYqVE63N9853jH3jm50bJjNVizBqgGTJX2j96cmqAMtNulZQTeUW1MDyO6ZNHLIzneT0/yV6jRG9ZOAEoEDH+hX7lEXtjb1O6tRuyoCAU2IWGE3vnBuR+S+3Z1yUR4HGgYLt2cKPoDXVVwxS5FlnmKQtNa1Rz/qYQfHK8Ejg8H3iiTHgA/piXq6gLt28tAxJHdVdI3LxzwQThtL5UFcOp6y/MxrKjVL15j/s/HjTh/jX+NqtjSUx6eXJtzc4IT"},{"id":"b53ca906-fc21-4221-b5b8-74cec2815a72","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"超参数优化","description":"hyperparameter-tuning","prompt":"系统讲解Qlib的超参数调优系统设计与使用方法。详细介绍tuner模块提供的搜索空间定义（space.py）、优化算法（如贝叶斯优化）实现（tuner.py）以及任务调度机制（launcher.py）。以LightGBM模型为例，结合hyperparameter_158.py中的实际配置，说明如何定义超参数范围、设置目标指标并启动自动化调参流程。阐述调优结果的记录、比较与最佳模型选择策略。提供完整的端到端调参示例代码，并讨论并行计算资源管理与性能瓶颈。","parent_id":"d2a28939-7c7a-4533-8058-05a082de18d0","order":2,"progress_status":"completed","dependent_files":"qlib/contrib/tuner/tuner.py,qlib/contrib/tuner/space.py,qlib/contrib/tuner/launcher.py,examples/hyperparameter/LightGBM/hyperparameter_158.py","gmt_create":"2025-09-27T10:34:57.350412+08:00","gmt_modified":"2025-09-27T11:24:20.679694+08:00","raw_data":"WikiEncrypted:5UlmXk5e8xfEQqYcx/OSoMVPvvQXRWgPuMIfd6K2YKzKJ9XAbQJnLwsLkebztXcBCVkU6V+iW2OqApi/OMfZo6Pp7hvO63xuVq4o/W313cwU/KFDf7DFa108dmKREhFmKGmsFa7czCR2hd04WpWtW3opgjUjeuLkfyOQ087rLC2+7zrJEK9Q3CN1HZzDOvvtVdHaD+s+mJzhY9UrAIYwPrQCfZf7kibU0gDC3vkF68EiGXpmhwy5n+JA7uspbgoxrx4gFHlFwf/eEdtgPAtVr1VQG/l40Zo65s6M+HsLIWAYue3V7qBNDD3Xol6eFXMedY1ZQgdmma6f3U2RV/p6l+HqXXrDb2vPgJycY9aNXBgev4BjIA9oWluIf0YwZsh4ukw1vjnPAqMkSMqSwaYm4KtEcFszCe1eFXWdL/6PqRIGMxflUAzSFTfbtlgLS/fcbc1IbxR0pV3QMF2f5tAr6WX0vwUfu0dWwoIoxTkHz1c88BvL8mx+T4ozm+4zrB7YunSwvZVRBTa0MpE4xfc+7yzdKi7aji0Ua0Fl1+e01oL0vDpaacHMtB5lal/1vi7HJ12sOQ2NyK4s+W0tnycrvYMDymbvzs2OOrJIQM6IBLqxb5xvsdtFRL5N6YsycuthqBuyfg618hcbYY43QskjfTnNIlKL9cMVd+AZ/C9ig8ga2eAKLSc1jvDR8BTiAUsVJMqwu2u0m+3YXQXgU+29Mah6dRT72FbIcmDj2RqHeIPD+aGcqXgMKQVaF3Z2iEw9hECMnEGrbOvI3nqvK9cWjvTYdMWNTAUkFxGIifACkHkf3sNDQdJyRZfnJcKYLZHPsJRiCJgWAZXngAMR5B0NY6tH6E00IM4gtqdz2UGp5zWwsAW3RccPK5AHK9LkBSfsV+AfqgS/gFJUF/E5IILU+hELF90SvRqWyMGnrbXwKqvrpZJLYwoFklqbEM6PE52IvDimGQ9hK2Qk5FemeQGTzsm6RswmZC12eIeOcPslfebllNBJUzPzRu4QKy9lpBHo9dDXCmIrO8mTV4t/2G1JG0FSg+Ss6KJVYy02d/JTDrj6aV4nYYksRTheQh5yYmS1iVeuWmKFMGvLYfX1aYgpuYc25G+5qmdorBPVwptCe341g1Pt6gKwKXj726RIiHm1g91wYXFaJI4/zxde5Wpoezbhn8lnUrShZcr6o5QwZjPTXf3FdtClE7lGJ+d8Yn+ifMZ+Zep+NlRqMsV8ZLh3osaqsjpB7HfoeY+Puz3qAwFpp/2OT5b0A2nA6lkmZzwqjx5mwOCGJ4/urQnF861dKHdsv1tDEUkW+zGP/ZoML/Q=","layer_level":1},{"id":"077d6f8e-6b5e-439d-a1e5-1384c4598717","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"数据集构建","description":"dataset-construction","prompt":"全面讲解Handler机制在数据集构建中的核心作用，解析handler.py中Alpha158、Alpha360等经典因子集的定义模式。说明如何通过继承DataHandlerLP实现自定义因子组合，并利用utils.py中的辅助函数进行数据对齐与缺失值处理。阐述BaseDataset和base.py中基础数据结构的设计哲学，包括标签生成（label generation）与样本切片策略。结合examples中的workflow_config文件，演示训练集/验证集划分的时间序列特性保障机制，确保与回测系统的无缝对接。","parent_id":"ee2e30e0-2b00-44a7-a86d-d24456832772","order":2,"progress_status":"completed","dependent_files":"qlib/data/dataset/handler.py,qlib/data/dataset/utils.py,qlib/data/base.py","gmt_create":"2025-09-27T10:35:10.384144+08:00","gmt_modified":"2025-09-27T11:26:13.076814+08:00","raw_data":"WikiEncrypted:KjZvIl6sv3SkibBj1d6MUS64YHBveefshETQbQxqGJAfuknIRD6Cu8ZkUFiM0tivnV23qB19a4xhVhSzU4SYydeqzGqXTg9P9fYmDFn01BgtB8Ybh4IMD37wk/aj11ZgUwmVZ6uO9j8OgUeYhF5N141+UsD/Vm0x0R9EnQAYih7n/+aW+KR0Pah8lgR/kKlf0bKhDwggpRGriqYr5AIW3aMvkcyXH8ZysweZxBjXpCyAKsI/Yt94VTr7W0SunF97kT+Sj/eDM/jOwnS7IHy6P3ZZQdzSIavGQuRYZi7oYtCo/W2n6IiT7eEnZVNVYWTn9/xIKkOpYkI1iMAkJeFqh1GAFyIhxCiTwfK+XWGPumN49TVGu2KhMyPb47+H3QKYpr4NUQYPPWCq2FP241yBAi+r53O1LDzSIUabbwAFFHW45EJ9Zv05k9OrsnHQipsQ2vBO7ZDh94ywUTVngVaP8xmwy32OlbuyQLwtQsrQuNXCI1b/YiokK5HEzmBpjy1/0VPJQmPamjTy+J85wkhGaPUPzOkZpTHxvCkVBQD8oMtM3IWWLAnoGOzHCSUdYHo0LvvNOKBJ3fC2E8rYgenlCHw0mMOhZUs8YNYJn9JsQZWI2sk+10kr3S5PNS2fnDbRxQ/t0vkOKPwK66g8rCgtv6iM8h0sBwOp1wIwP++hs/P2wNCrY+IpEWE+F2a7EpB7ZJsKdRo0dqyokVEN7bInx10mgvwFnUWhRDg1frTw6t4c9B89eDzwvJTxq302IwV6I2o7UZNbiIEo8rkWHE9RgGtY8iID33t+RFnAh/ukRy3fNAiwYwCaIwLprLGQ0rgf++S8UFYsVTGmGuQCGa482uPxad8SmQM9xqY4n8NxJ3hNYhyGnW8OpShU9/pxfgERXgDhXrl9mCw51bxWvLEmMGUYtDaqT3e9/YCgUrJz7p96IcC3fvU2Atke6VN3KHcAPGS29q50IkrVfeVeRlgVCXCCO2B5la6+xi7UXSKmTIGQSIn6f0pVZGHeMQvVk4Ih+C8/H3GcVJile5umoK02YkODGsmtGZv9M04p8VKC1cXyzuMGXfdltJ+zQj0Sp21tKA3oYRI7wt5cio8Y7ClK4ibXwmSqyW6sK27Bat7Fsb5hlpQQiBwBFBq4zopRGaMEmJeZ5UqGRwgYCoVQboqIpQ==","layer_level":1},{"id":"8a795b0e-5874-4e9c-9e5b-25bac7c2ce78","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"交易所模拟","description":"exchange-simulation","prompt":"系统性地文档化Exchange模块的订单撮合逻辑与市场行为模拟能力。详细描述限价单、市价单的撮合规则，包括价格优先、时间优先原则的实现方式，以及部分成交、撤单处理等边缘情况的应对策略。解释流动性限制模型如何基于历史成交量动态调整可交易数量，防止过度成交（over-trading）。说明滑点计算模型（如固定滑点、比例滑点、基于成交量的非线性滑点）的数学公式及其实现路径。结合utils.py中的辅助函数，展示价格对齐、交易时段过滤等功能如何保障模拟的真实性。提供扩展自定义撮合逻辑的接口说明，并列举典型问题如‘未来信息泄露’的防范措施。","parent_id":"a87540af-7ec3-4c36-b16a-41d9eedae177","order":2,"progress_status":"completed","dependent_files":"qlib/backtest/exchange.py,qlib/backtest/utils.py","gmt_create":"2025-09-27T10:35:18.491727+08:00","gmt_modified":"2025-09-27T11:28:09.709323+08:00","raw_data":"WikiEncrypted:3wbgEZavWJgV6PEDO9EYnxqTrsZQPdv90f0htvlIPxUpei7Hq5zeaGdkWyKqK6LDWObJH7cMACaBWcgyNY6VqOAyWSzrmzr6+DKsakP5zXpIlbZYTkn3SxkzgEH4N/jUdp6E3dhN5ll03QrJ+h0cfUEj7eup9j9Tj2GeMZBGCOUqEag5yVqADzIIm7DOVNoMTsNIowgd9bHEN7K7uMkNzI8+vmEE5E2OJVN2DqHp3pe1zy3ZQfX0tMvRffiNRBNOG9WeOFiAK5YGeWPV7FNHqaBbQXEw5ia5NHr9tBZjHtGr6Ey7asliOjjSZrKAhF9fs/ko//MCrXg15VoaSkJUQVvAnH+1pBsvCmIiHxXGa7LqrVLWiNZqkndBzBGKhsDeN0lbty7Xuk2boCscV4uY9q1tlTL7GiBkdsTH1ajwgWoIYtNADmoaE2ScyFBX5yJlJBKn+sUTbb5r5J1jKenULKPK6bluhQI77Z21YOc39l8AJg1R6mIyB+M+AGyhvo76V15DxR+byzXQOuwPaeZn14UH9N8RdVWb6RpvjgrgqaoyusM5yjvLDGy1m0ZEkVtO2ezH0VIYEQZR6CgHpGMbn6/d0PWgR90+Bm7MDXrcntYuQVfuWMwKjl+v69pzfnyUcbwQEU0jgXLxy421nJCQgTZFBkyKYWjsCASlNKUFgbdCMF4qdWj48RTJVk+V2bRGO09vhd8hT8ZCex2s3BOe+mxR+VXVleAFOpIl7wnMCTPEmcx35eJsa6E/NkqWS3pYKYdJZmtNqgnfTjO1CDGIPVYOReg8Bb8awe4bInEDdNZOB/H5C6uXaHuHIbIHuzJ14hcHMEX4UFvaFD+0oPBdu0qcUHt6gP2+pznK67QyYRejOvHafBODWB7yt58pkoyoDLtOrVjh+D33sXxlHx/6PuIR0uy9udGkGttABCEpfWsVsMCKerT8zPLXrVq8Mgp1+REAQTMzEFTCvebPXnVjop4+w+0LLeY+BoV4BG+VipxnGkkKXOOefZSUat+h4AX7SUdFBLkVtJG/4kRHOWBA4vFTGIV+od8TgDIEdiKX80hnJaVZqNMvjVrhlKvI6x0kqXTrVhmQqxhXKWwLCEpLW8p77l/c2kNl3THx3MdqdXztQ27GSuwWH+m6mush9ULgt5CuZvYuJcGyIZcYTwIF25tx2kEtzqRhIvC7u7JNjh8RaoMrPymXSIbhifVi8XJ/7K1hbml6v8DtnFSxEwxFRyOhW999+fo8RDa4j1i7+cYqlcRLkIAd5JsuTcC5sA3h0aSM9o7qyiCj5IebMc9wmeqsUfHcfM4wWj6mMD8QeUT1HbtfensD2eJeqAfIo119MxoBaObqUasvWieiio2/78noyNeMD5cvqC/h/uFfkXdBx+Gwg8dK3lF0KaUAo3pa","layer_level":1},{"id":"aac29f43-9f90-4c80-9269-26885f4e524b","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"投资组合优化","description":"portfolio-optimization","prompt":"系统性地介绍Qlib中的投资组合优化框架，重点剖析增强型指数跟踪（enhanced_indexing）策略的数学模型与工程实现。解释目标函数构建（如跟踪误差最小化、超额收益最大化）、约束条件设置（持仓限制、行业暴露控制）以及求解器选择（CVaR、MVO等）。详细说明optimizer.py中优化任务调度机制与风险预算分配算法。通过实例演示如何配置优化参数并集成外部风险模型（riskmodel模块）。讨论实时再平衡触发条件、交易成本敏感度分析及大规模资产组合的计算效率优化技巧。","parent_id":"c59872d2-5d34-4292-8555-4dc28a9b4d2d","order":2,"progress_status":"completed","dependent_files":"qlib/contrib/strategy/optimizer/base.py,qlib/contrib/strategy/optimizer/enhanced_indexing.py,qlib/contrib/strategy/optimizer/optimizer.py","gmt_create":"2025-09-27T10:35:37.706158+08:00","gmt_modified":"2025-09-27T11:29:29.801325+08:00","raw_data":"WikiEncrypted:H90fZHaIqcQtWj82/8FonfpnPEtANmmaqfDHkWsgb9NL1KZ68Rkq8Iqs+PP2/U4GjOYq22IjoA3bRjfxFAh0jxGYmZ4qHCQZ8AqfDPMubTdOjm28MBUIkPqUfEse8lUDLmdYZWPMCL7wLryhmH05Nmq2Mmb94XIttYYjzMnlrRQeICa25cTFljFsMN5gna2Pz2vNalzTJThWAZV2wGuQm5gcTAeFdk89DFOycWx6Vb4F2rP9XJEHgnr1NZi5AhFdKhA7CKbSpsJF1wrxcJIOYizHmpMdlSxx8GTnoespvQP0aOvlZMbl4O3JrEqc238oYIo8IEuniyyQY2aPGgqnKWcPLNEUhSDmy1pANvO2pk2juIg+J55eyTdlaAWcxvUoniDBJRNoLdKMl/5Sb6N/sfZJS0SWLl1XzlAmWpHngq0BemAn64k3eYReog6F+CQPsJp8CMLkEjM94q3BDDWTwz3JY5GTke4rZJtzbBlTbV9E2t8YkncN/O/XJwNn0rbjX5YndnsRdtr3BNgvNZPPTfG07hrAKEFHILjTKzbAD/e9cR4K11g7MdAvM/jylkKpOOQkJqQZOgSrdy2zBOY/ADvKBBz04H57L3DdBMFv2PfM3HBcjjH9Ne7su4RPiPfOBJo9N1t6QP57sBts37wkLDRdp+vSxcSrCaVb+ZDsPWlW/jZT3xy6eCay/LWK0gPk9G/a7x0mlqsgqRgrHftp2vOCNOoqR9nlOGr2m6tH1DMb3ZjaH9+9Rtb5T+7tY+tOLZwrfaVg85WyxQqdClBL9dtgc20FPslsOh1UUcJlekSpS4NmarfDQE8Ic0s0chjUJIuujbjCt98TVNO91m12RzFoGiw6IDRnpEVKE+KQ0H+Eb25YdrG6PufHwGo3jjMYbrkZyqOIH7GitIlPNQfpI2bljUoh+0mM5w7j7mRr3D9yVZckV6ul5c2MqXRHaM1QdxHEsDKs8tJFOAoMkgD6l/ik8rDAV3QQPm+vrwrJn4J6yjbj1XP6oaPfziCHmmqJCCazaNqQ76rWeGiq+7lc11OjduSZJYs/W8eujpVRs9TIfnGHRXx16mWSB3RQIiWxMpRaf1c3L1f4tZOc5wX11juzlYxWOdXmNMSsKR2CbKprDXYTYhIlFCC5JePCGycwkuqWE6mySq7jALrTMerdlfmMWJZNljwBpERvhcHZAnOs5Cs42csuIDElaDuW1bHw0Z3cO5FeMgP/SPnt8xtUmiWjKZTY8vIGxFdiBgGnYKFNJAGSqPmnOa59sn45p3FLGqGiHDodV5aTs7O0y5i2SdmEJzymXX7/73pZS6sU3qiBZLjCanAa+Perd44MLFj2JO7R4ILeJP6ixU0LtasfC+rV4HnJO+UQV+hfUd4PjPU=","layer_level":1},{"id":"0af577de-8a9a-43d5-b1d9-c6942419c884","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"工作流任务调度","description":"workflow-task-scheduling","prompt":"系统阐述Qlib工作流中的任务生成、执行与收集机制。详细说明task/gen.py如何根据配置生成任务单元，manage.py如何调度和协调任务执行，以及collect.py如何聚合分布式任务结果。结合model_rolling中的滚动任务管理示例，展示大规模模型迭代场景下的任务编排能力。涵盖任务依赖管理、失败重试策略、资源隔离和并行化处理等关键技术细节。提供优化任务吞吐量和可靠性的配置建议，适用于回测、训练和预测等多种工作负载。","parent_id":"c1615506-454c-4d28-91e9-d3a5c2e4b021","order":2,"progress_status":"completed","dependent_files":"qlib/workflow/task/gen.py,qlib/workflow/task/manage.py,qlib/workflow/task/collect.py,examples/model_rolling/task_manager_rolling.py","gmt_create":"2025-09-27T10:35:48.11278+08:00","gmt_modified":"2025-09-27T11:30:29.802453+08:00","raw_data":"WikiEncrypted:5TfoOZUXi2pU1NStYas3S4vt/sdw/8a8x0nZV2x9mMEm410E1U8KPSqzmJd7eYCsoFgP2BTEGQRg0i97T1Q+nkGS1fl3Hh7VC/VHm5i+of2FvtsoGy8TfROUoJClVokX+4y3x1aHF9fDhG1xmHRsi6gM/opif8IzZxFJUOA6hsNgpi0Kq1+nxW1i8XBZLCDO8xHL9CGBd/+i/sYXuptaDa7rQO01S1NSv3xVefTkgkAy4kDJupXLGxeux2lg7sMuIOzXp7yp0t9VIYPh9aU1NnMay6bqzJXcWEGTV469bGvPhLlLDVGedq4tSnEklWbGbA4JuZ5boss4s0Mjf+7N2VyRit5yZrEzuMO3AxuvvGOUBRsLxcTKFHEfFvMSnEf35JIaPkD+76Ybb81rB5VjyVTGDFX8lh1PxbONEJhlzg7iWqmxtXSjlbRwtyPGnvAbZrSMfluysd/Y9HpUK5IFWPylzbvtM0QfLC3WmLmAoUC0wfPghuxY5wRfLmegDiXS9evGphkZdWsBSsJ91B6c9bJHEvbVsqdcDEG08h3/W1XnWDSbmAIkWxDxqkVZ2iaiONoMLZxr0Yt4dh8XADQEMj3HGRj3sCRR+H0nLGtCg91nE0F5wuvOWxVoNK2bfuvd+1l9LlJA6sn3QSmoZzIRj1umCJ4pT6WKoRnZEUe8FqSfV1+6kAS7SPZ/6DxGdlgBONSqbR+OFhchsn1qewHwJ7UxqxLGhptHzfWUFQyLWVwHZdKhhoiGZsf5V9V8LmgLmaqhbBMPu4wX4Hzadh4sASqxypSSU+TsAwqVXQI/qzoNWZ7nKOPWdfjw1Bn02LyPks8cEDFpQTbvryZA0C+8rOUFSMuYX5BfhKSSloRdVdCvywQN7ICpoMiax80IuUqz1pqkIwGNP6FGX0Fm4svQPgjLj2QKjWvXoorMjCCSBsb8vfOG3C8006baQkVLVo7iI/apmA4bJUvLFhpcwgB1NWWgM2OMou9qP4n2WzfqZjIkIN/zm7YCOC5fsEb9N9TH564yTHU5c0YoUGuezGAa8hnTOCgilschAk4P1I4GEgXCnLWQMg+kAaY6Z6Y27wcqMc8AwQO9IBp+b+V+9D2kzHwaO0hsU2Y4DUimQsVcijLWSCQ4LvHn8BZMddgGTc/4AS0Kxez38jSw8bL0UhhXIR4Sk0QWb6yHRH2GW9feApOu3nqWR2tOLBufgJzT8YpY9LwyKEU6qWczUc1nzjWjzDtWCPdsbUKQPyx//vsjE+bRc+Pc27XrHgW43UBWQrNqHWtJR4gWKF/hIJXiWVrDqpCMSC58rU6dItbze2df0Oo=","layer_level":1},{"id":"421482bd-b97b-4666-8e71-7074ea00e869","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"元学习","description":"meta-learning","prompt":"系统阐述Qlib中元学习模块的架构与应用场景。详细说明meta/data_selection子模块如何通过dataset.py和model.py实现自动化数据集筛选与模型选择，揭示net.py中元控制器的神经网络结构及其决策机制。结合nested_decision_execution/workflow.py中的嵌套决策流程，展示多层智能体协同工作的实现方式——上层元策略动态调整底层预测模型的训练与切换逻辑。文档需解释元学习任务的构建方法、输入特征工程原则以及在线推理时的延迟控制策略。提供实例说明如何配置元学习实验，包括任务采样周期、反馈信号设计和性能评估指标。同时讨论该机制在市场 regime 切换检测与模型漂移应对中的实际价值。","parent_id":"ce98115e-5189-4b0f-a4a9-025618b5ef1a","order":2,"progress_status":"completed","dependent_files":"qlib/contrib/meta/,qlib/contrib/meta/data_selection/,examples/nested_decision_execution/workflow.py","gmt_create":"2025-09-27T10:35:59.327503+08:00","gmt_modified":"2025-09-27T11:31:04.727045+08:00","raw_data":"WikiEncrypted:Y89LsFztnseGLNPYWdmhmYfShA/ddjj0841kT6rJgMj0prGjEydXCNCXJIODVNwhcqE4btc8khql3c75HOBUIMXP+UhbFgGOlLSssPMZZ3rSuw5y09DqNIHaSn8/h1aMPTZWdzZmYRvTVGzuRHq59hOzYsUnrQ3nEl4Bh7fjDwEU9ZLDpdb8AMb9UKNjKomnbsFold1qoll5G40KWoH6+PD/ZvJUoBScYmRixc257uA9y3tLDDZe/fFsb6Qu5EfvYlb3ASgAed9P1UUx8CqhaRySMg3vgK5AyOl3E5ARXAJVjxDQ8xMlI4Wp92CxLPOROPJ0kjmGq/e09GX+o/L63RDJayAkHNMn454DutBRSr9BHHKuS0oKuD8FNCqPKEzxFqkcUjIc68+oPPcQHOnrgaLFBDNEZzYYW98bd1d38g5HLlR+XzFlI7wznHuvADS9x7LG2oxNPMg1KnFmtnSsyUhyX+HZ3Vf5Uo1MgA0efuGFew6eqlpDxWRQekkG7pXFZ+YtlQuCYcK29jEwyvNNKSAvoUVVNkadCqt+hJqSYtVrS8Xzewsm/BcMnZsdFBA3AQuXcfacKdgQMMx8gAm4FE+SAJF1A0PYH/Iik8z3pmTP5TNMhig9YElHKcpvpg5GyJBNHrG1GwH5DgRKtkxOi2G2kKCvMsmrZ3qQ8srynu+duy8HrHHIdnqSGb81TzhMJKcgxG9zJrdG5uFIHxqPHj2n1oGLhnZBVZkwrfwT7UTua/mX1tMwr/xngYIDKfqE0D0Zk9Ox3HGAsnBQFz9Fmj0mWn3kzfXqf/KqeYVknM+k0LAMqfqrJ42c6cauttoIJTCo4FsIUa3I/lfTTlhEOBmfeBGfsAQct7MKlTgBm+xbGlNbHdcvbNBEhSlj8Ga6aD9oOAqpMzEd2NsdfaWxa+r/8y8BcwtSEH7Pm1DsAZdw002SqC6OqNPW804Qhcj49OhdIKX6jJhRAwQDbrjtRcePyQ9Gyd4vdBYTNT9bo2Cp704neGnXSzOYJMP2Ptit+J4TwOHePStyxWgRc9PJsymASt3+UWNfrktQ25tXpg2aWMGPcxfAx/wBMpfVnjPVaHuf/+eWiuLk/cjWNPghg7LktBQ1a5OtrWlVISLVw/TOa/s0w5TZrZuvyA5d4zW95dWX72fyfMqdTm0/bJVmlbwM0pMuK0xZl709MhIsrw2kIKKeksajJywsCXFcaDyqhBVQsRd/FFw22i1NqWlajn052TO//+tP60bqSJwFEcbZ9aDV0gnExntZ6O7JKBTIbE5KYNYK8r5E4Fc4/TMUcyuLkYoijxEDgg0UtQwmkcAI231NEDqIBucoxRptGPzJJIYcsGK5txvdK7OQPuQQ6uAqpY/B4GZ4K7Hort44NkB0yAPQGszC6VJ643n4PyijJTwQsgK3gxw+GpiK6/AsbbKOjDmFVz/HxA2kt0mlMfnWECu62VW7/QHfW+lERcXg3BSQREH+5t09DKvjU2yubQUIIMrETURArrL1M5qEQ5XWxpPppgW+kWDqsrtTogh0LO8/GHmnZAtEUliEQ4QfJQ==","layer_level":1},{"id":"540792b2-188c-4ccf-8da7-338657bd16be","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"部署与自动化工具","description":"deployment-automation-tools","prompt":"构建完整的容器化部署与自动化构建指南。基于Dockerfile详细说明镜像构建过程中Python依赖安装、系统库配置和工作目录设置的最佳实践。解析Makefile中定义的关键目标（targets），如环境初始化、测试执行、镜像打包等，展示如何通过make命令实现一键式部署流水线。结合build_docker_image.sh脚本分析CI/CD集成要点，包括缓存优化、多阶段构建和标签管理。介绍base.py和utils.py中通用工具函数在跨脚本协作中的复用模式，并给出自定义扩展这些自动化流程的方法示例。","parent_id":"92216737-d741-43cb-a9ca-9366bed85f6d","order":2,"progress_status":"completed","dependent_files":"Dockerfile,Makefile,build_docker_image.sh,scripts/base.py,scripts/utils.py","gmt_create":"2025-09-27T10:36:22.350501+08:00","gmt_modified":"2025-09-27T11:32:01.27769+08:00","raw_data":"WikiEncrypted:0IKfLNOWe9mZfG1jVts3w3Yiw98OQQtavfKatRdxJv7CPJow4GuKfQyedBUeXoOyfmRCiMbbTZTiZkcTuDBKeHqTrLHouHL9nssz3tD4mSMK7RweuYl3gUEup57jKJSK7PW2ArG9HxDsb6vkG75WZs8vLxDh0Lv+ZAQdjaZ6cJbM+OIPRHpDyALcYNELVjlJxwj6mVWSGljBOkUDPNHIXIaTuhC9MywEARPyyO/fxWuWPy2j69Uika5bi0We2Dc6aJ3dH7AaGIk262COQQl+woT5JyEXqhqRbL16kz470TzmBNnzVQqGkpk5Omis1Yn1gcQgKpEpt97UfTKgCfeb0gQni9eXznVPeOMYkve5nJjPcQ/qAGS76w9A39PjC34Xf0T4AbGnZQg5LuGSPxj1rxH+bOUU3QWU5NldccgfXDuXQk+UuPmn2lyIwke0LG82Zj3RHqvLmIg0Y22RWI8cVpP7f6F+vvHn4pcJo93jhoxeNnj9OBWAgBiJfoVCW+fW+funQP+zmk80XAaXVCAV/ZPqlwmL8wlAZW0sDioQkn46uUS33i+vAQy4rmWik/vWwbc73rXg6siV5mU3ygutboz2saQhNXOkIEN+iYbKUpk1gvuvcVSbWtPyXqlx14+hEOgoRxHySHfO++97Mg4t77V7Xn/uyoIpOHHZIFBn/cFiu/RSFKIFWrKvIm+OyEIOzM9kQxV2YC4lvjCjSTLEPSPJTK/NUjog0iZbkDQDkMBOOl96Grz6qAGWAFCpfCIcccg2W78DNt6OYYw621nU8cwhZnBcvlrEYcWRBmmT+gPHjp5Cz4YOcHIxmlKaCss1WppOCK/y4ogwJ9LXOtZGLZ7LR1XeYfiizEkgEDIrSb/lzqJulRFbPWgwBXIbLwXj7sXFGEy/LXFRlqGzu5QptbMtjWDCQhwwx9ThXdcSPe5F9ZFzrAClTiaCWdkdxwp4Jf7TdtZk3DmkPuBWqXwwLipen2Uv5QyYpHnVLgdK4JpQyoscYmpGWUfMGoNpmM8hyZsxmHz8bwcb+T2aZfuusu1oDuJbq33GyuLUlYwept3S8LYGOFK2qw48hKrjN/+k2UV4oCY7TiBVKyeadeBcfNbvXU2eT1fUAm2Mud54mAuDfzP+xfgCcmWVTjsS98+tVQ1bNE+m826uQkU4AhFUZ2il+j3u5h483fx5BPDZXLKHiZtPz6OGEqzNduuS+UI2TTAFSctQUHVKF76EMYQJji8+M8of/8i4qawMhjw38hX7TSIXTzi6zTK3vNQ6fa+YdE9CpD1+h9K457tB2Vz4a6cbsiL92N5/nHU9SgyBoTM=","layer_level":1},{"id":"ed4d9310-4350-4bae-b6d0-ccb8ba8a608c","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"配置驱动的实例化机制","description":"config-driven-instantiation","prompt":"深入剖析Qlib基于YAML配置的动态实例化架构，重点解析init_instance_by_config工厂函数的实现机制。说明其如何根据配置字典中的'class', 'module_path', 'kwargs'字段动态加载类并初始化实例，支持直接对象传递、本地路径反序列化（file://）等多种输入模式。结合workflow_config_xgboost_Alpha158.yaml等示例，展示从配置文件到模型、数据集、训练器等组件的完整构建链路。解释try_kwargs机制在兼容性处理中的作用，以及默认模块注入（default_module）对插件式扩展的支持。提供调试实例化失败的典型场景分析，如模块导入错误、参数不匹配等。","parent_id":"2d6c0203-db64-4a78-9f37-7283382ae7d7","order":2,"progress_status":"completed","dependent_files":"qlib/utils/mod.py,qlib/workflow/task/gen.py","gmt_create":"2025-09-27T10:36:32.785131+08:00","gmt_modified":"2025-09-27T12:03:33.808334+08:00","raw_data":"WikiEncrypted:aC5ZtUyEKPSxjzg//aVllKDeSDh5NHsAwrWH+ziN5m9AVbz5Gjcfn+KpujoYSrJ5pEIGaWdxmuQs6JSyEyuG7kNxUdU35DFoHlzTiCW467WsvrNVzObAlwni5Jlxybdu5Bx/LSOVOJR4fDlocxEqg+Td9TQiI0PTX/XAW+M3sDUlkofVRPXpaR5EqFCYDX4SnK6xdULdLttnvg1lEgw8M/GC/S2T02GvM4WqRkLe7HGB/HhFuH9v4t9oUsxFhVYyLDpDYDl8VLydZG5n210E7uDLYc9hYUiJd4mxDuSAjTeZUsN2nZR2rLJ3MY0hLX2sBrVnLCgii/joiLZq8GIyOvigniMAUV4RjZe2L0SdLpWG61uMgzAcpkphrV23zqBd41NfCAq9oxMgqgox6W9uBqaFgPxpJngEux/sqxHLl++pwxltheqw01DHoBezXlzloE87CbRvdFjanfwCNLmEVr6ic+dVdKF5z7yCRqCS6HYI7PSW+4fs0RbEOy8ASFEpsxRoQICMv5bckdcMevxHah12RL+7oTcIyPQSfmZhNTe6LGiBtke45WAfDEkVs0OvKr2CFOiuVQ2Ih4MdWjrggAUu+iB7lZ4ujUg5duBcsYhYMXddLYmrom+Z5JK2WjQJZXYh5oJqmIEzQeikt2XYt0R6xrmMvJFPzSxDMTBeIppfAFOkqUWsqCFkZQQR8US9mvNnx5sf7wXUJl150BF3gpbZPxv+KPcuvxgODa3wJtxOCTOgcq+YvfZZnWb5QytjZagm+n9QcedzSLEt2A459jCFgXUeHJO/ttlRXw5MULRy85VfnufWdaaLWmdDszkAnxWagcYGrdhFU8FVqAxUai5jbSBTxNcrfkZBZG82wGEnUksnf/bGlEHwasb+bahOr+s7ZdhGWjdBIwusmW+ZPitFvmfUm3474cbSvk9NFvfDyp38D4O4W/nzulVsteUu91C03f1H+qpANDNY9sZjpRSMXgsuNQqXYzf9iddx1/rlOouBxvXE6zRQMvqpoU6/FKNRe6Mzpn1IGTncBp22U8UX4ILvQr03TeMCcQuHdVKE9VHAlLpo/R1zVSdWct82Bb+oIGk4uVYnkS/oCZNbchXsyHGSe6ycseOiCq+jzp4nFSDKNDJEjC86nmTeDmD52qtnuwO+2dimzTCagheoDa6rJr5/5yz8rS4INAXGxCOab3WNKplJflvSEfSYKj85ZClo64Jdv7mOt0Ox6BarQZxt8aKtfme+UHE0G6hHtrmjY5CexJZiYYPfcP+uHg6b5dNqV2wXyc8i1byoOJUz/QYF5UhQj/DnKBmH52XgyGI=","layer_level":2},{"id":"f06dc428-cd94-436c-bfc9-335ea578a7ee","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"集成学习方法","description":"ensemble-methods","prompt":"全面解析Qlib中的DoubleEnsemble集成学习框架的设计原理与实现细节。解释其两阶段集成策略：第一阶段通过多种基础模型生成多样化预测结果，第二阶段采用加权融合或元学习方式优化最终输出。分析double_ensemble.py中的核心算法逻辑，包括模型组合策略、权重分配机制和过拟合控制方法。结合YAML配置文件说明如何定义多层级集成结构、配置基模型列表及设置融合规则。提供实战示例展示该方法在提升预测稳定性、降低波动性和增强泛化能力方面的优势，并讨论其在不同市场环境下的调参经验。","parent_id":"66a35b0c-ba2e-43d8-a417-168f6e3e423a","order":2,"progress_status":"completed","dependent_files":"qlib/contrib/model/double_ensemble.py,examples/benchmarks/DoubleEnsemble/workflow_config_doubleensemble_Alpha360.yaml,examples/benchmarks/DoubleEnsemble/workflow_config_doubleensemble_Alpha158_csi500.yaml","gmt_create":"2025-09-27T10:36:54.823585+08:00","gmt_modified":"2025-09-27T12:03:40.071692+08:00","raw_data":"WikiEncrypted:znSwazfLrgm7rmv7lTWnBg2Z0swmJwF6Y1pg/PkGMsbcd+uKW8ZnLVywz/IIOiW5snVHrH1SDggN5MPWTb6xE4tO8WNysjuvr8pee9dEKhIrSp3p+RnBcpkAlfT6R79AjVKNt1VLA5/GBruG4fui3UUeoaZlshb9OeBJ7EEu0Z3jKk9/shwDecUsHV3vnsx1y3tJS68TsT+8eE/TPXPYKb5Xo3xHOmVPUXuC09YwfyqTaw5eFjeck4C7fRcF6WuHfcBnxXY94nwdHv5TwtrSlnkIHdRsVlBorot7p4w8dY9J9agH3dPh/FV8bl1ZzwAS2796eEhKimuJMi8FW2M7DECq8EmrPFYa0wQ2yqx3+KbB3xbP4WvVySp9afH1JECAzXpcs22PN4NOWfmbL8hoESjtWaHsfpXsqWRTC1ZmEywqX9x0vKuG1sPG9ff7TG0ib43+UMyTlgp7DoFtCCRf0Vp0t9MsBDhM/THjv1/MISzXBu8StNosGzfC/ckGxxqKg8DVJ/pmlW7qeIOJOVkgtd8mHjiDPCVHc2Xp6uF4cQ5B2FP5AkT3n/oDI8zZwYgeqNVU51OtXs5c7xlU9GY19565ZSW2Png+FIN9hathP1dhL0a6VCv+2IXEyDQdXHd+imqvPEOMfB3MHqCUDychKr5NTzHcKUUJdS7rh0lJXSrjwH+VuEfCjlv2PZXE6HXm46QIM8ngYUDDkILqfjW2wG+50oVYFTO4wU3p2Ar6rOYUQwwv4sGybr+JtDcYgN2LVEz3ViJ7ncHXI3ME4NrY9rdCJQympez2QoGyfzEGyB/nXYqNeECNWFblLjLbkScGLl1M07tUrmqZFINx7uuMhhavUDPpmvym1tyGEsHmvO9Jdu+gxClEsmUsbPIztCCgN2VB3eVifDfTuGZyDS0ztwPVmsPu9o7Ru3XIXVQcNMvyurNFf3TyHYtcUVlJwq0NnLGWdm3VRfTIhwjXwuesVLEYKmOcd3FUIVpyEDgXSNEywGHiXzSO8d5bYztz432E6EYok8NfxZjWW79lVS3s9t4QMfgboXdFt3dYtLLxEvkhGQZ/McZGreU4pt3tRUX1zIF2aY5knNcy+A2i199UWYM3Fw98uj5DVt0bPcYN9pRNfDzMaNgelDncn1u4ylPKOERDafNYByMuHua19n/VTGKXKQ/PkJNpwAv3uS5XVIXl3UrRs3+QFN5/EjY54K0hBSFaUYRtgbLCfZKkfx/wMHGmuOrsIhlBcd+fjtyRY1t+K98ebBJq6mrW8ey+40ubg4CkdPsEGvW9J7s4OOqeQJQEsLKnXMXOLMksrSvaM71U61+JkhfNWuAv5yGSmWiXvB1wZpOx/l3vhRrwRGHFMa+hVETKKHYGmXoQli6EzQ6UCxKB17G+EPCwIv6yecmzrev+kqTUU7Gkuw7LmkNiJYT6o+NqqdCBY3gvVddrFKK125P1OtYd9jJSC85x02D5RxJQI69uc22yyu696B65/fasqQrpZD/hJC6xJf7xmrEqlXq2+h0luhVpN+cU0d3H","layer_level":2},{"id":"b5d93425-d9c1-4758-99f7-bdeb6f82febf","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"工作流管理API","description":"api-reference-workflow","prompt":"编写工作流管理系统（Experiment \u0026 Recorder）的API文档，涵盖实验生命周期管理的所有接口。详细描述`ExpManager`、`Experiment`、`Recorder`和`Artifact`的核心类及其方法，包括实验启动、记录器创建、指标日志写入、模型与结果持久化等操作。说明MLflow集成的具体实现方式，以及如何通过`R.start()`、`R.log_metrics()`等简洁API完成复杂追踪任务。提供跨会话结果检索、版本控制和在线服务更新的高级用法示例，并指出并发写入、存储路径权限等潜在风险点。","parent_id":"f0a006c3-89a9-481f-b536-5c95399bd31f","order":2,"progress_status":"completed","dependent_files":"qlib/workflow/__init__.py,qlib/workflow/exp.py,qlib/workflow/recorder.py,qlib/workflow/task/gen.py,qlib/contrib/workflow/record_temp.py","gmt_create":"2025-09-27T10:37:00.520897+08:00","gmt_modified":"2025-09-27T11:34:17.33652+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg6WisavCWxn4X38bjw5NFN9JFJ/5f6kqOQ/EOXUkKxXaZmcAvrGI+Danl/ebWCoRoAs4YTo65a2AbPTWx5mf5DGC+p8jP78D+2CQLfgzT09z6g02j7IOdRqci+RQ3j81u0i6nsald0x4cXkF5XNW/7jI4sdD4TbULOLf6xuvgWZsaCgMezFhRd/21JW6oGQYoz0y/d03i+XqAGuFXoZ1rN0FWIP29HLtT9vS+ekQFWx9lxjraLDmyZvJA9+oYDzXdbMszhXwzSqM3nUta8/TuusmtmO1sFgAE9b79nfAUXWncIG/570DtH43KrkXGUsV6yoC3t8Ul52SDvHPkCFPua4wfJV+cQekSnCfAqDA0UWbYQcVNnuxYVrGj4bfL2uGd/d+J+AmMtwd9MbPCZv5u8XZyY41KizAF/vLgPNW8XykliLTabZ5Y7mO2X7c9noo/bZ9/jwk/73QV5vmAHRCbci4fEiPG2wIxSNhR+o/XsaYLWDj8Od3idsZDGB5PXFl1Cjf5ISHQsdlrse9u1Ark/yI1aoBANPrlb5enzv4iGE5JIUMKeTbQT6qWj+pNWwSk7DDk0rSzPsGCYtZCKz89I7tdNpBNoKUgw4FvT4vvaza9UwtyoQcQ+Bh/5732A3FmbTEU+uTc7WNmfDZ/ZDTPbkOmGW9myP12tAYpiCBScZ05IWnkaz3ZzxDCie+11YViLH9WeU2c6jjams7XN+TuWrst4WVajX1yojU2dDKr81dvV1lgZzzjqhgfCGZBLkwUWMEzYgPuNAR2eMLmbCXb9+SMztUXmb/qG4hExjuSSGD9N7eRrO7fTdlsTkruj+auapFKA8a0j2+q8g1FYEFXBj2Ixaxx6b4+5SnXagO2jyGQpA+Mm+bVszYC8N8YGHUox2hMPMPJXZJGUWuhGPZki4/NxKjkSsg8UAOSmY7pFHfK9wJZCiQTparEQlQ26PjiQ23qnfwkNQx+p/DMqo9KG0lrCaMc8JJxt3nzWJC2f4yVj/A2I47BFfLu/jIVOjY0gDUXZhV9tZaPRq9nqJJUiCquZEo/302EaV4cEpMVKiGXh8Vj/O4gJ4kCCqrK7II/21PoszbYHq+OtDFe+jInbWe2vIL58imJAM6SxCd7YfZCRAWeT029A7VwKefPJNnzVBgmm7+ekSIMyLUpBFtw/nmnD1klIYOU0QTXDqQn0vM6i7Wz1a/kAsHnRxBNbhodgp65eDXr0EXGdWhnQ4/lZOYdfUXZEad0B2ciEbKj3xIP+KNTqmwJNktRFohN/A9O93DoK++1an7DTwlEK9/c5A=","layer_level":1},{"id":"ae9a2a80-f431-48a1-a292-4a75b6f5b9f6","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"调参任务执行流程","description":"hyperparameter-execution","prompt":"完整描述超参数调优任务的启动与执行流程。从launcher.py的命令行入口开始，解析-tc参数加载YAML配置文件的过程。说明Pipeline类如何协调多个Tuner实例进行多阶段优化。介绍分布式执行支持机制与资源调度策略。通过实际运行命令演示端到端的调参作业提交方法，并解释日志输出与中间结果的监控方式。讨论并行评估时的进程隔离与异常恢复机制。","parent_id":"b53ca906-fc21-4221-b5b8-74cec2815a72","order":2,"progress_status":"completed","dependent_files":"qlib/contrib/tuner/launcher.py,qlib/contrib/tuner/pipeline.py","gmt_create":"2025-09-27T10:37:11.416824+08:00","gmt_modified":"2025-09-27T12:05:50.5514+08:00","raw_data":"WikiEncrypted:5UlmXk5e8xfEQqYcx/OSoPMJjFTekRuiKznnHcQkfRy0yoBvsYi3DwvpZUdTn4aqNPbs3NNKhl4sK0iL8gbWmMQuoicWKH8CPEid1Dwy6CpUEqU9IEq8r9wBwpk85H6iSkn73nPG9uO87j/n2bfU1f28+OkB9y0Q+BpE1zTFHGOxnc99GUwbBrNmGsrUsI5kJ7aL3kZ/ggNAo63G3BcYhSX/6h63+fmsLd5D4VkKqwSU9hmnNMUoMYwU+sIqUG2+HalLjMs7mzWlw4FzsaoHxwKppGoM/w4PgnR9uJ6AghG2ryfyuOrm7W7lEfntGM8XkXI+jCom4lU1HZiHty64szljhP0Jd4Y5FKlWxYVGtjsvKgCPeHnfcaW9jqdn9eTJXxjYMiapUX03XEQ7oE9OR2TK2JOkz8dqr9QBM6LdhZP0rPrs5M1iFsQxjD+18RYnHhQz3TKeo9vGbv/0pSaIUlaD0govR4lh2IonuPc8Khojks9EP6AEDegksfCHzmq711eTw0wBI1h3AvtIZ5focx7EOysx1TCULudgw8S7bcVKgWH8LObfXRtEyN0NUzPtas+NFhyXZX+17kBLKinabiDnlYtTMaJxLeGcHkc/DcW8n8yi8c2gaYe470PyMbbPYpXHMILgfVECafufZ4NIClSazbg6bq4sCFUMLhmOeHaVi/YZR1+pBN/lryM/DYgSEKUejEMEvnCo0eZnE+d+h97hbqLKBMCdhx2BI/B3QlIFeZWQ0xGjtZ6gSBzbp/2gFGvBB29uCILUvOn/x/ipKLmugYcMQtfHMQgiO86DuzV/AIENk6vCJAvMqZlPaXVzsl7mxi+0YZBWkq6+X4uCL+pPv5XQIk1Hm8sS/bTJfjl3dKi3BkOo8GwqerD6PITjdbGWBlQPiUkkK/3mm2bBXbGKutqk0qa8XQLciHdgXdU4D8jYLveJ8K5A3gp2nQXZvh2SNRPuQZmSSS30dUWFIXrTR8UbBrlg4GDjeXZpwqig9Mo3VpZGjjP3CmZa76mpcwFTK53oLHeroWXqSqF9kw==","layer_level":2},{"id":"763d86f8-f7b4-435e-ad6e-05140152c8fd","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"自定义执行器开发","description":"custom-executor","prompt":"提供完整的自定义Executor开发指南，指导用户如何继承基类Executor并重写execute方法以实现特定交易逻辑。详细说明扩展点设计，包括如何接入外部撮合引擎API、实现自定义订单簿模拟器或集成真实交易所接口。通过workflow_by_code.py中的实例演示如何将自定义执行器注册到实验工作流中，并处理异常订单状态和部分成交场景。文档应包含线程安全注意事项、性能瓶颈排查技巧以及与Qlib数据层和信号系统的兼容性要求。同时列举常见扩展用例，如暗池交易模拟、冰山订单执行和跨市场套利路由。","parent_id":"36ea3fec-0792-4dd4-8cfc-d9f1beed50d9","order":2,"progress_status":"completed","dependent_files":"qlib/backtest/executor.py,examples/workflow_by_code.py","gmt_create":"2025-09-27T10:37:22.914678+08:00","gmt_modified":"2025-09-27T12:07:02.46409+08:00","raw_data":"WikiEncrypted:VrTOMK0P24YINQ3w81YokeJnIFhUggkovKhVHSQ/cFtOMG0SFgEZvHU2uL+Ix12yvj9IwA+Ie6PY+xCDIoYrwA07b3vPXW6VloayP2CoDtTMh3F1UWybPaUwApn3YWK7ZsoI9jdpS5h1MTdOHEuOnLx+zwpnNSLhr//qGWEyJr6Axcjqr9lfG6Q8Duy4Tg9sjwMHNsN3LYu6zhZshkK4aWs6deFH5mPpj2DIzBIFHmK0BCPIoEDu6jzWuS8tUM37R+VfV2WAvdneRzfZvzjwuEBJdkh/eXa8bDjx34h/P4INUX3iIGntsWN+G4VpBTyOq76HObeqFCRi8uDpfKS0dxUDWoYFKE9n54TZ1huFp36tqRL64A75BqvMBVOl6oDLB3ttXG0d1Utz3V5kV3oYLF536eFoGIGsnqJXnie2496p10PITOyBLn60UGaGhufreqyF4lIrJ9AV5LFbry4rZUWvJ5TEzF3ttkeGAbqQenyRXzlMktjbeSImdruwhOzWBXzndggm9/MiCQfHnTywaVQiUKpHKJL1IxYdypYrk1lQNNm79w7+XoI9KOQH4fylTR/N8u2x2KNAyxOSCw1fj9+JLJFF4SsuL578zVfVM9U0UhuHFuc1kMB7igH+5HdPHzGPcrjPNCa/iMOvUMyns4X2/IoaIutzl6Hu7qdocB8pTm0CtC8ds9g7ndhaYocQm6YawLxC+w1thzjIrZQBtonNk5m7cdmysnJcuUMKOTTT34ByX60edLwtqRaj3V/OQdsz/8hl7sG2E9Mgpc2+ROkURrKvJAX0h2daktMpp/HCtPO24nJ1NUd8//NYw4sUYYZOVhTe04XkWR5A9zV5sN6NPU4Ih930vo3KUM/fwHjxXfv0VajuRNrTJbQb1k/2oDKkYa4clTUQ2cL1bDoLqw2MfvhfdJqWLxPXRyozd525b3rBnhs20Hzdqltio0iehwNd5E1rFJbj/YGhFZL9Rn3r5BP8ey+JtPv98voVwkplRTuPkiOXquZ5mg8ssqSNlkl13jisFBp2NkLg1Skv44qC7KT0BDfVVFo3NkGOQMgbeshNj7GkMeJqaW2ktTYUQ1D0TE/KIz2ZeLGr9LXBES0g0chzXvp9bsY9Xj748f8TDN68rk0ki3+Tyb74BIb3Sb8G4vwkpZwbVhIFuXMnFwJ50RYu7i268qjJQKigQfG6S0qzr6Rf7FHnzjDAuVkJA06ECCTeB+PHDPP7Fe8xTsL/RKU93Ghy/EyC2RQDKI7V63BpeJ2bGvqiPC1eV1zTaiBICipTjRM6P+QEnKpWHw==","layer_level":2},{"id":"0ae0f6bd-8447-4ddc-a14c-f3684a129b66","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"滑点模型","description":"slippage-models","prompt":"全面文档化Exchange模块中的滑点（impact_cost）计算模型及其对交易成本的影响。解释固定比例滑点的数学表达式及其实现方式，讨论推荐值0.1的实践依据。扩展说明更复杂的非线性滑点模型的设计思路，例如基于订单规模与市场深度关系的动态滑点函数。结合utils.py中的辅助函数，展示如何校准价格对齐逻辑以匹配真实市场微观结构。提供配置示例对比不同滑点设置对策略收益曲线的影响，并给出针对不同资产类别（股票、ETF、期货）的滑点参数调优指南。","parent_id":"8a795b0e-5874-4e9c-9e5b-25bac7c2ce78","order":2,"progress_status":"completed","dependent_files":"qlib/backtest/exchange.py,qlib/backtest/utils.py","gmt_create":"2025-09-27T10:37:54.130962+08:00","gmt_modified":"2025-09-27T12:07:14.193433+08:00","raw_data":"WikiEncrypted:DeeLba7IyY2XvvA/ykJAMBYWZ6w6HKFv/wvKXIMFf502g+lLsxsfnGnYumLqqIhzKGsIomKptlz2nmvt3HxkCEN+0H0w0NMscmW1V2W8ppnmDOE0i4+2FvTmrxCVnqpl/T/Y5/kRQpofs2tTaeezeIbJCYuCupAC2if1r7Orgwgr7HUn6OoRxFCab9MBqhhhi4SKvzrKaCbZlWwPyWiN8FC8m3RVYO06p/Y6Vp3D6/qPggv4EYLoV93olReUE9xB5jTZ2Hz5j1OOcAnSWV/72gdbKe8Kq0+hhZy9AgdTn3TM440/vloaQnUjtRJrP2PddU2T8j6u+OXWN3GZ6NGPGRqeTDUkHC0O8qqXan+TP6HEjiewx//W81pRPqSmzMWtZP+3QliVq1HpC97xtSsIU6AJrCIG6FJLK+CN3tG5TAv8CZkxRd2LUahJqa5PUPf2W3HAJ5k+11gx39sgmKkSog3hmYtMimvVrd+QYKMPI+0+oy73M8jc56epaxB61DqTmGwnTmsQfvqabVZy5f6A6+dKF0P6yzUDuo3gN8yNlragLrRhfIDycDFRAcXHfhIcCA+tSSBr+IUcNrzB1Hko3/sY58oBDEGYg61ka4eJpEZfD6821UmNMb0lTrVU4GQDC/ts5+MqzQdzsml4BW8ybrfVCBw9od4IPTAcVjqWFgeT5F3H0dVljcfbthWa4lNnb0Z4nQl9Qk4WH/u3W2e1tFEKNOtwVCjlMdKdI7fX/ROV23iMMQ3oj4hTxdfuodQDQv9mbnWmW94Kupj6cU+Wsk78PnpODlePMObTDc9yxO/uydKvIJnTrvvgkHerzFvL21QdYN4TuStMG6tVyLxghR52xONinQ8LqiHE1F2rimkJ2C0TYTARyQSKc5mVMM0tUWltz7TmZp+o99/TSox2FxrfBSGhzNpeGxzW2Y9DcMaEcrmkcbEtwUp7RgrlZ12sW2Caz5xb5I5ttWMFrajhr3mqcQ5J/9niXK4SRoP84JySJ/rPtggJ9mdn2JtXOuTjlZVe/o31HPobpGW7sCvEbHSY5OYMJ8WeqPtqoZIZDww7UQlXZ2hZcttPItWM/3t9UbBcNnmdM7iJN8NbZfqOOvv2nENAjZJIqq3yxpQz7Ewx4Z2LO9A6zRknPp4/Vt527A1JgjNjfFmDazbjM8ia4Px28TrD+29xovLyu0Zyox0=","layer_level":2},{"id":"7713fe51-6c7a-4bb2-bf01-8a51c8d17321","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"配置与最佳实践","description":"highfreq-configuration-practice","prompt":"系统性地整理高频执行器的YAML配置项及其作用，涵盖tick驱动模式开关、滑点模型参数、流动性限制阈值、批处理大小（batch_size）和延迟模拟设置。结合典型高频策略（如做市商、统计套利）的实际案例，提供经过验证的配置模板与调参建议。说明不同市场环境（如A股、期货、加密货币）下的适配要点，并列出常见配置错误及其排查方法。最后给出性能监控指标建议，帮助用户评估回测结果的真实性。","parent_id":"5d8e37a2-e264-4386-a540-bd5de2c0d9ca","order":2,"progress_status":"completed","dependent_files":"examples/highfreq/workflow.py,qlib/backtest/executor.py","gmt_create":"2025-09-27T10:38:22.411931+08:00","gmt_modified":"2025-09-27T12:23:13.630927+08:00","raw_data":"WikiEncrypted:cLlbBxvI2h5FnaOTZavMH173LVIQPB1kHXKQhssbSSEqInw7RTin6WG6gx/VkDhJr4weVkORTOhP8pXYEq3w2JY8U3vEKX+a44WNY8QxSK+ML7eTVkYY7gwhVoo6NBiIQAKZqYtRmi1vWHF2sgk+uhIcsRED0DQX3cTHRKRIDFbpOGP5JTCLEKjyds9IIqTOM76++pC0N0fIxgBJvCJm2DMO2DxFqs9fw5ZkXnXpzIPtVKbDheXHNs4h0F/oImwtkc307SykzQp1pR66EcLvWvdspbn0UTgniN57OHs2FkGm5vJ6EnOg2tZjGR79/lIeiOvsJinX03zZzEA3/d4DqJTFxbE2Stkfwt0+HmE0Qcb5aTJMAoj8vhNiT4ZTdCwuj7D+3KY0Dbd2jQ3sATKfTjNr8SABqHjLageeD1uHbQEFrY4rMkOu7ZRyuMm7xceftS8WIkTezYy7Stt1gA1XtjjzPa09f66QRkr5ZSscNtdmLCwJEgzcOKzzQyAkJ+vot7SNw/yAdeOo+Wo93x6JpJI9jtoWtjbqlVbsBMMeI7165/PQcCLogRBXmPvkmgNC7WoAXCISpfvhOJCW4hm98uL/eajyo++uOSAL3OOixc2ctYhoz6g5UVK3DNVJXCsfUa+0Q2RjxrljatWPcGQpEjg/fgjxc10Dh9KJyjQVpAXZoY7KkeIisN4MTMNV78zc1I4v1bjc97QAGeK7Q2MYXETPooiBDXwKnUaeIFK4D5fEimYBKmJ0C9eDZDsydkVTn6BlcnhO0JngJLmVdnX5CpcLAScyuqoAKYPz8e3AHGUfTrhH5I9rnxOWHMdI9MKjwmRgd6jle66f20dU2omFVXXvgzKzUFIahfl4tge8/YuhYx3i5QJKz2MHHspu5nbt3Qol2RkpqsySGK5NReqKdT4coIijZnuEuayMXHKOrG//rWvbt9GX6/t1CPD7TArwfUdti/x6M9J7L5Vb17TAHr/lPQvfLGi7ygwKhtJicLdeB6sASoc1My5MKB6nNjlBhY4S6H13sAInuKzXeTX3WSDZKlHPAQvTs4Mqbsg2z4wXZphcD4YcJUvUXRUVqFqbVxg5K8D06tNObp5p+dv35NROmRMWeWAGoWk6YvlpiELAljEvHZBuOUZ7jv+BiqYBq4clcO+7sQuAtnPALhAUCQ==","layer_level":3},{"id":"604c91f8-a45f-421c-9850-3f7805d47461","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"Transformer系列模型","description":"transformer-based-models","prompt":"全面剖析Qlib中基于Transformer架构的各类改进模型，包括标准Transformer、ALSTM和LocalFormer。详细解读自注意力机制、位置编码、多头注意力模块的设计细节及其在金融时序数据上的适应性调整。针对ALSTM融合注意力与循环结构的特点，说明其在局部趋势感知方面的优势；对于LocalFormer，强调其局部窗口注意力降低计算复杂度的能力。结合各模型对应的YAML配置文件，指导用户如何设置注意力头数、前馈网络维度和层数等关键超参数。","parent_id":"6bbf8837-7976-424a-be4f-c64d28edb86c","order":2,"progress_status":"completed","dependent_files":"qlib/contrib/model/pytorch_transformer.py,qlib/contrib/model/pytorch_transformer_ts.py,qlib/contrib/model/pytorch_alstm.py,qlib/contrib/model/pytorch_localformer.py,examples/benchmarks/Transformer/workflow_config_transformer_Alpha360.yaml,examples/benchmarks/ALSTM/workflow_config_alstm_Alpha360.yaml,examples/benchmarks/Localformer/workflow_config_localformer_Alpha360.yaml","gmt_create":"2025-09-27T10:38:45.914145+08:00","gmt_modified":"2025-09-27T12:23:25.240559+08:00","raw_data":"WikiEncrypted:5TgAtbdUXqbKL9lWGANcdbZ1jUCaL17lFlaRE8lpzH1WWMMpRHO9EMLSGgo3kYcgz0wrry3CBSU+kUowZ/x0nz1LXLgimYpR2zAfuF/pGgPO8LLWd0jRoaTvoggjY5HzR3/E+orCWKkWcykWjAPuqIev9bl1x0vfpSDfcPCa5gFWfawrkdv1lQhZrKHX2DhOt92kAlE+OdoKjRTdXKyXAyey8WQG41at/U6IFlxjjSnDVkL37PLWHNi/mclkC3gBUDDTDv/xhJCkC0CP7O8eEcalSDq5rvKCwE+YxX7YY8XO2bYqiSUq/SrgTBp9fToXoEH85mUk5H7IY6oEPU6agXW9OudH6Fz6LHaxYOjwdxGW+IjUs/4WnxCFnhzsWvSG7vQEZ35Lte7B0aTzzlIrXbfnnHoWVC7NEcXwl3h48pQyPs8VcZAQpyJKt9Cmd52AssxxZTEcCUNrm/0q/46sThaZEoIb0AaID+ael+uT4FMwwAtz7iW9vy81/nDobfSMjTR2e68D/DleVa17l7NFUWiZRWkvC2aaNCRhrQZ5iwny431DIbHu2a+Q5O9BMqXJqJjh0s6uH0s4v5cGlX/sYv5wfD1uw9R0W52Q19kzH2BSXNZLmtePVaHN36V4k3hEQrN5bv7ssS7A/fmDjpBBVvFelUsfDBji7uZEExdO9XGHcv7kKTaeqjGqkIUinNAP6p8VBedXzZNRpO7M9nzpoTXBJQvC3ma7Jxwe6TvJXW/lA2k69Cippps4Qsw4I+LsVWihd16A3DUXxvWNpD3/UqLgiClR/fZQaZhnG8HOPvzOF9JKiTZyCPnvbxZHywiiy1+/V0MdicaG0dg0pofYLpwOsDKSRTSbER7WPW9XkOFJZCYbpU9iK8009VAQ2XVEmYMqovsFpUdu1fZn3KSlQXCKZcbv8g6EFN0f7x8acIuksrN0zD169U6gchjYxfE51NuQiGbGp2MbTgusZEUhzkker+niKn9HiXmgQ1Ama3aN0ZgoLdbIRUY8lnMZuz5LVvVi7PBwDKbZkMOJxZubzPR+xRKE9ny7ec98pp4N0RoxYXcuCck84A+6QW8CJZJAVk6J8F/AX/if3ZikEnqW/ai4ME9xXhqY1pFETwCU8d8CMQQfYyMYUaO0TbhaJBMVKW2d9408NXIcmiLqwFxoxngke0DFu1+C9yjDc3/kI2DY+k+TCbIrDjRUZqXzGLz3GtEoSIoKory7PhtQmvmt5cY9gMjwuoI7mpVGUKpkoWhWzpJwGHioHQqnD9lJkVDm4Xu5Ad+d09REc/GKpofEE/m9omLtGt4JTYY0tw7bzv8/Aza6HmtuO3fRMznhH9722Y4wGUABiZvmqOZzLeEolNcRi8RZNtc4AUR2Ps47uu030M8iYLSygpWe+6rbkoqt/z3Ve6RDd7eE/5PZ36xUwDRuTMUmYQ9zT1htDKV03jzv2KeCIKJsDSlsCnL4GPEd0pOmkKY28CAr11DrVg6hlKAyUjYe5oGpWDgjUwJbogjYadmXfLPKLxgHjLIjwYlL4mnmDIEyolIEtIdVZTiI7HK9kSJQggxA8bfr99kxypkkEGLHsrb9x1uCAHdKNdAI/uRbqIXQHGAdzyDJqxfjpcJ6+bxg4W2l5HFW7mO4AU0=","layer_level":3},{"id":"944070cf-6853-4f77-9458-ee7ebe06dca1","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"高级执行策略实现","description":"advanced-execution-strategies","prompt":"指导开发暗池交易探测、冰山订单拆单执行、时间加权平均价格（TWAP）等算法交易策略在执行器层面的实现。重点描述订单切片逻辑、延迟控制、市场冲击建模及动态调整机制。通过具体案例展示如何利用exchange.py提供的限价撮合规则扩展为更复杂的执行行为，并确保与信号生成频率和数据采样周期同步。","parent_id":"763d86f8-f7b4-435e-ad6e-05140152c8fd","order":2,"progress_status":"completed","dependent_files":"qlib/backtest/executor.py,qlib/backtest/exchange.py,examples/workflow_by_code.py","gmt_create":"2025-09-27T10:38:49.954996+08:00","gmt_modified":"2025-09-27T12:23:56.700407+08:00","raw_data":"WikiEncrypted:qSUmbhu+RuqdVWUcJ+wGdzwXLevNXI2V9NdFbOWIjDIiXd42Ovi9ip/nLm3iRzzyoqlis9Wl6qJjB4jBY9464kjJz2LDmWH2Wy+IhArexw3EXJRFyz2B+1wYTB2/A/57vxkfCMssm3/cSJ23Whf/HzdzsWCeFSRhIAjV845UWalolxT+Uuo0j5OfaSXIIOzLPSRn4p8emlVfZRm/TP9GMXqQZfP9jAaNCOddexmybJ+0f/6TL8ijYHJl0T4FXnMs/TTTxQpWWQAYy/SEtke9YOOQs69s2+Hz6jZb13s6knPdq5UWf6QGSmvC5ah/5LbRKHpC6JEU6FybCHGqnrepWelZMPWqAXsEQ1/5p6bFP4uXsxJUL+PKZ9FqEw9qSfkGMk37YJzNOZbh/ZPa8d1Frk1tKrJch5OR1/F8u0uaALDX/0gFy4RMNjcNGDZ+lif3Zl+Lq+Vp/y5x0wO1Qqm0neIhODRThzBChCz1Mr0ib5kaJVt59GHEfDQsW+hqzgw6Yfo40Hnl6edb1s4h0ookdZFRCkfLLmhlkAjKmyDFL12erZYx3uzp7Ctpjqp03z8sAW8MAbJG4oqtQ672yykzqsA4CwOBct8N0GzFsSO3o/SqHBTjrvkh6K4oog4aHU9q1CBq7A+EOIH7k5drpFYBPb19nMMxz345O/7QkkdiYoTUwGOZH6UQOnz7dGpJ6C6k1WI70sqquc47TOxhzC68yoKJc5y+Wythfg5BSk9rAOaE38jS/a8D2/u3Bh/j+kYGksWDM0Ryxa7lhKKoU9jXUwEIDJzpRooggLVxoZBmnMijLHLpsqLSRGERup89DmDynmoZh/ynPLDr6cGrWU4Wiffbw/5Mcgvh7yFA0AaCw1DC+fIabiM0cx1iIggBPs32BAws4wdjXAuzpQVVqU3vvCh6Q+Zy/PIMCZJmktb5qJV+vyGTVgKbYbFLE0BtecQi5guF9wIdHobSOBKISAmd2IX1F7K9akH0Mpuxx/ZQQia6IGe6XYG/KfGYHGGOiMDiagnPBXlxIw2WoBq2yagOLg==","layer_level":3},{"id":"bca65967-5165-40a2-896e-151887d70ff6","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"LocalFormer模型","description":"localformer-model","prompt":"系统讲解LocalFormer模型的设计理念与工程实现，突出其针对高维金融时序数据计算效率的优化策略。详细解读pytorch_localformer.py中LocalFormerModel类的核心模块，特别是局部窗口注意力机制如何降低标准Transformer的平方级计算复杂度。分析卷积嵌入层（CNN Embedding）在提取局部模式方面的有效性，以及层级化注意力结构对多尺度市场动态的建模能力。结合workflow_config_localformer_Alpha360.yaml说明配置文件中特有的滑动窗口大小、降采样率等参数设置方法。讨论该模型在保持较高预测精度的同时显著减少GPU内存占用的优势，适用于大规模资产组合的实时推断场景。提供训练日志监控、模型保存路径管理及跨设备推理的实践建议。","parent_id":"604c91f8-a45f-421c-9850-3f7805d47461","order":2,"progress_status":"completed","dependent_files":"qlib/contrib/model/pytorch_localformer.py,examples/benchmarks/Localformer/workflow_config_localformer_Alpha360.yaml","gmt_create":"2025-09-27T10:39:40.041008+08:00","gmt_modified":"2025-09-27T12:28:06.678865+08:00","raw_data":"WikiEncrypted:JtPyMKXt44DsIw2FfFIq3vp0PZ9oBGc18ccXKcAMkCtYb6ddSN9LihhZ9QnyE8f3R9on1c/Kr7ZirydmNaT2qTsbVrX7yOrXfEaP5fH7Oo8Cr930QaHOk2T6TfVVMx5CT03vjGurKaiYX8ds1a1BS4tXPKltPCWrItsdzKyV4FnkNMfX5mPSOfuO7x7XBVFqBjzKuFXQRjntql+KMLRj2FReYpz5xnwtiq+ZNudRmNHwnjemcfKDAwa3Agops9ogd7ZIy+fkE0INuRVc0MvVPJSJ+6T8t3bReTV0KoH2DhS8EZ2tbgw6wGXuiJEzZtmLOHb9sZ8KPs09Ieap42NfdNe1EBodwGDE+yM4jtMnm3apvK0ruMDW7VBdzVDB/Wytdh7uzVDrlhizn1faWLMRIEe/NNyEx4PIkgfSBev8a6NSDHU7IF5UaRQfyXlHBq8s9lQ0vI68mmXPb1709rBQW5sUiO1g/3zxt97VUzqBmbe3n6pNuJwRrzfCWgJdqPoBVrokN9ntaJI5ybTJrMhAQfRCQQpmGulpyb7V1obIP44KpfPtR6njBvZI9quR2BeVTn9C+H+vV8BYiBjkxlWTExh6c0A7+ihWQWgpw4Stznn4J8PyTTbndIIcDlrskLPb5XXkcym6uQuNc5g7rMG9foGHIwsP22DOip0zDsrTWPS7mSxtXeByPQX5H4poG/neLZrc4eg76VTo3w2316XLj1AHJ8rB6yTtYdQRFtrVdbZBkRwuXBLqmkNXDDzYR52stgfVuJt2B5iosnIEcqVQ67CWEvo4YrhbakxvEOXAbZFjC3DiH6VMbTrMic6h8nxzJHONeuEq6IdhvkZ1EiZnNjAolAmXA8KJ3cZkUsdmtxJmmrUhkbtbDUzgOsXtSym5OKi8mtakicH8wW1lEgVZzQmqpXh70rPtzQp6FPGiuFUXduuYv5B0xZNNwDri96cG60n/RGARnAHZ5+ttw63FkTWmzaFwh+3RlhErkYK0198/wFZvg+sSgOGjiSmf1XsERsitOnziRJc+n7Fe9K4je2jWs+vXyDNOy6NBqTh4sKCm2RDj0OVDj4QuyBpXXmPC4XIJZLXRMCXdj02DevcenAIB9llSKBq2zWjVHlIRrRt8XLI6xmdy9rO23aVHNKTitxr4Ns9Xd2/N0RDcF3cwMQmi3YaSLdHua2/UtRdxvOma8VRNlz1k8SgPem6zSv9893/lBND9ONl3KOG/ZUgJZ1XZe46Tu5XXfLbHPg8GbZ2AAXnsGB+YLbhOmoTT1kJE6YcO9jDHzyZE75I/OcJzRuACeblOPRigMiThYHiU4ngOrNYXT0/e5hfYIS0VOAVQQyPBTaC4hr0joTE6C5/pzQ1DnCV8Ym6mqcXAqf9vD13dlZ8WtF0uW4sgNCDV6lnjC/000kRdumGIusO03Yia+IP0yy9XSMIGbzvsCYXxf2GaL1Fy28/WDANuQkTp6WnLfDYmlKadcqrm2wgdhtfvWsMmTEAZZGXkfXQjxh8EthnHfrxDM0JfbKluzeNIwV9fwXvmyCxexD7Igf/g6J5d3KU+2A+alOmWsKv7giFJTs635AAncdS3/V9j5oCKetLs","layer_level":4},{"id":"d2a28939-7c7a-4533-8058-05a082de18d0","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"模型模块","description":"model-module","prompt":"深入解析模型训练与管理系统的架构与实现。阐述base.Model接口的统一抽象设计原则，以及trainer.Trainer如何协调训练过程。详细介绍支持的各类模型：包括传统GBDT模型（LightGBM/XGBoost/CatBoost）、深度神经网络（LSTM/GRU/Transformer/GATs）及集成方法（DoubleEnsemble）。结合examples/benchmarks中的YAML配置文件说明不同模型的参数设置与调用方式。解释init_instance_by_config工厂模式如何实现配置驱动的模型实例化。涵盖模型评估、超参数调优（tuner模块）和模型解释性（interpret模块）相关内容。","order":3,"progress_status":"completed","dependent_files":"qlib/model/base.py,qlib/model/trainer.py,qlib/contrib/model/,examples/benchmarks/","gmt_create":"2025-09-27T10:34:17.043464+08:00","gmt_modified":"2025-09-27T10:57:28.371141+08:00","raw_data":"WikiEncrypted:o5cr6Bo4m333A3G+lRdTT96hkx3e+Y8btq7N/Aow+OmamjUp3pyKss74DTtDjA7kz+L9L1djyhsP277F1HfHLb5NMZykib0IzaG0MwXjnFdzGFg0A8VMAkf4VawwL9LqxwWONwZSNlbtKGy8hK+LusLgDO77GLrCMgcCzZU4b9E+J5oW99C2+aFYinm4wzZxqWgyy/i2aQtLDzyCaDC3wvjKjemQINwyeiKuKb4260SYSD+mcywo5fYQMCe9J3/p3ehaoMgUZTb/Sah4rze0VPTnuKSmB++XQZTevafwddsX77vXdlbwPEq6n6ByfhaW4FkK9WCfh2dGtIvVSEDGG/cLwEfHFks0c1HEwIAeskLO8qnOtZ66rhCANNlOiNdCLKWoCDYIuLcQ+m/BzUsvS44mfsGy6KVerAw5Pl1mgz78Osy6DgVZJZJfIhARhNgBEBsvaG0B+vopFrHlL+PaHg/BFD76Ek/YTa/3QQveXnZQCRWEw7a1lTCgfGKibFXatvnH6GnIo1aKu2JYvv4w05EPlZXZBaYi1BrDl2wNL8n/ZUYO5WVlYGFN3Xw8+gW07RWvlpefk7RB8N6t2LHHP9xviBoyUyrjSPx+E0EGlo1obuJbmptv1E4fMcj38ZwXSe9eHzOOa/ZolrJn/kmtsDvP5MrhZA/eJBMLbWhxcfVIf52nZex9X6e72uEwOT0qjR56rNdus+dqbtsXtMuME8x//FoHwv4eFkES185Uijo2EvSoy+pwAfPHm4U9qnfDOTNOBrqS4JzXpjQ1suj4rjCAZsM2elpSsOOaBuxs5IVnLMoSR+NKXfORs7ttefFijuR3dk8AYxw3BZSdc1SS7Uv84mJWAfTNP15LJI9WfNpcqsSW96TObPRZZPiNFSL79F3zTY1hwPPRGpnmufgacuyrM6qHvD2dKDaSCUBS2hc0oRGKc3hllnSijNz3LiLsJOJzIvw7RiDBbDuiJ4dYNjDpBmb21Ixl7dk2TCCFwBbfXNklHEbEJEQ7SDV8qSv0IXp2v8f8PGEuVZnfns6KroMqg1lXY8gpLHR1YfymNU8Cfg6FWZTz8Hq5X2TQvaCID69a/MWsI6q5lOGcwxB81OXMK1BbqO1hhVSt9/o1gxKFg5vEq3MeKM7xsmWSCH1txyZmGDxDTwj2zn/ZqPbDHs69GDaex6s0HRYabceKZHDsWPK2Vjs3Q4tNdWiMQSFWTwswW1f8o5jnusP/q9VKljm0FTCv/M0nGGWJOmc2Va+uhOp0E0fDzhyBxazhCGL6jZlVVq90sH6An6XKqasHwm2B/snrZ+iI3CpdL4Bhoe5jMtl/+VfznfaZTllyxQoI"},{"id":"290d0e69-84c8-44b1-901e-338444ae5eab","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"模型可解释性","description":"model-interpretability","prompt":"详细描述Qlib提供的模型解释性工具与实现原理。解析interpret.BaseInterpreter接口的设计思路及其在特征重要性分析中的应用。结合model_interpreter/feature.py示例，展示如何对训练好的模型进行归因分析，生成特征贡献度报告。说明该模块如何支持不同类型的模型（特别是树模型与深度学习模型）的解释需求。探讨可解释性结果在投资决策验证与模型调试中的实际价值。","parent_id":"d2a28939-7c7a-4533-8058-05a082de18d0","order":3,"progress_status":"completed","dependent_files":"qlib/model/interpret/base.py,examples/model_interpreter/feature.py","gmt_create":"2025-09-27T10:34:57.351137+08:00","gmt_modified":"2025-09-27T11:33:12.726907+08:00","raw_data":"WikiEncrypted:o5cr6Bo4m333A3G+lRdTT49UKndKA1gn/6RkPj7hU2MCprixcdX9yQrAZaojpPITFkZFSsUdcaKJHX8cD71JYMs3+Wv4QMKIww0VxhtV2+m8+QAeGXpE7N03wCm1yy1SaXBKaQ5sSfJw/Fhe7KpYj+ZL3qk2NL4+YQjlHbyMQv8BtVCh2fgP+o54oqMBI3gYEbgoEUKoKP8pfzq5yuvYVUYW6LuGgFL5nUCGvbDs0zqaPbRm8BB8SAXPiwVgl8Tg223pXeAqC253+ia+QazNB8ZhtZzFJTnWGoXat2ahPLhhMrrKCY2kz+g0ip/MvhokQY6V+kshfzKXoh/LZD+CWJD4cQ8sx8vXR2xucfCoBbvxtTIaPXhM4JFHQI0xaKUlQ2TDZIMJ2xvUYF/ALJbzHG7nlgmlkZuclc1VRNJHt35M+OV0jMWptYpLb06u3xxbOI2iRDd+niCisFmQLW7yau4Rhxth6JBHFnEYMyavsn/UPjbh/swPIS4YidW36ctE1Z0P/dsPpSseq9/WfZf6Dy5aM7tRSjkwKl+sA+lzFWRvSUWPjgIxqHcwIbW5J211nn7iNyiJyNNwJcoOMLBIWMlNvZAbvvaZ6q5ppVMQpqxAZn2yNyr12J3ZOAyMDaVLtlJchTIXM89KqrqkoirZGdEu0XlS3yGVLt+mL6uLlgPf6YLmd+fP+iFd4LutVxzvTFrTWpdjRfbu78v7E7nZfbOufDGWtGH8JBkIwjxcinpbw3owz4nwvhzFUcMtPAq3Nh40AR+7BuvYGWwLnrgKc77jtUHU6KX5vOqmpqp7b+QV/Ezh+Lz5dcblZbM9lJJrS6U6v9r+bAtZOWA/8AMgO3pUwoDj8LSN+DL6uRIybvUW+nL6QsriHiYkfTbT4/I23jGG96AHFQVD3eWSLphUmMZJJ0Dm36M8QsVizNREmIZuCy1sZebI6lqzfU4GeUzp+nTUZYl+kHr0f6blYY73wtoFGuhxdWHfI06UXp53CyrIp7yBgctU+yKF3hIyL5Y9qj18PI1utuSihgTgyyiu+OsF8HHXfRv1FA7opLOT3Z+blShMG+yQuomvbdvLMsvd","layer_level":1},{"id":"ea52b938-3e89-4573-9ee5-b850fab4d950","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"PIT数据模型","description":"pit-model","prompt":"深入剖析PIT（Point-in-Time）数据模型的核心设计，解释其如何解决金融时序数据中的幸存者偏差与未来信息泄露问题。详细解读pit.py中实现的历史状态快照机制，说明其与传统滚动窗口方法的本质区别。结合cache.py中的多级缓存策略（内存、磁盘、分布式）展示高性能访问优化方案，并通过data_cache_demo.py中的实例演示内存复用技巧以降低大数据量下的GC压力。提供PIT模型在实盘模拟与历史回测中的一致性保证机制说明。","parent_id":"ee2e30e0-2b00-44a7-a86d-d24456832772","order":3,"progress_status":"completed","dependent_files":"qlib/data/pit.py,qlib/data/cache.py,examples/data_demo/data_cache_demo.py","gmt_create":"2025-09-27T10:35:10.388292+08:00","gmt_modified":"2025-09-27T11:34:06.120043+08:00","raw_data":"WikiEncrypted:LHvvTbB0hSOC24LUw37/n+NlVnZRMUUG6ryzboPERrhbb8yH7HCq4dVf9bD5ukbmvy0tKngMA6fC9DxBuox2N/Du9LRq3VKsACBC/2qCbUwaLaPG3AIss5gUoECtQ5pSxtrOSqsC3avs0cIiUnTD7FZU92oUzYW74C2VgbX29WKHU4m5D/PkkTclhjQgp3dwGwBIbCah1NG7TWt3hpQsz4VmR992txSYeYIx9ea2uoljIXLqxQgGFua/Ws6z1ZUBlnx4VDy5jkkvZO59aZVYAueD36JcdeA+OMKN3hJ/1wGA77gqdFQR/H4RBC9iCTvewtJcQLtrSfldACbn7Yhj7YKOlEim2LoDqLp4z4BA0JRHxUGm57ukkKRNLzUT+kZBEecMoCo2in4EPvOMTNDOyOspqjL4cLlPLlOG9i4B+Y08zTxQex8ReMKn5SoG1EvFNDxkMnrdH/zfXuNuj6KCApQv0cQkBbmPgzauACh7cpYSiejDaM0Arm4POObWoGUHasAvtn65jYuSHR5iKQUKHM17CepnjdtiFsy2twdN8KhwPjq/Gc3P7eySYMK4P4ENDgZpsy9HEMfJMpa8RKERq5X+bhCfeoC8M/0xnQBNHJOtsuyo1AVqJuUgcaKJN1rL34HvwJEhkhUvd6QmLcjEpxDlwsesjElLZO7YqEOaPsW/EEMXN0Utvf6NMOWSnoTDYqThSiQUfJTXMP2NWyhGE8LSDcCkG/zYteLtoiJCEVzioL5b1g28IslP5h/Att+zeS6ev+a8HjOsYCJPmHtDXzoTxBmPoUfM5Zzz6FH4GGVnmaq28juEbw9TRdrmKRZPTZchO7XOUHLIx6AdbuM7ZV5wLyWOi/tL/mnWfOPZg1O6QrSnrtkyfrMdzM6tJAyx4R67c2Sol4wVV6vEjySK6qxQfLxWlTJGoEwFQxL/Uu5TNZsBcQXrZ0+k8v9S+7aeeJ1d6h914ZxsMvwG8EYK+iZoOI32FfT1QqmD3/Vgp5o+dfQhvVOaZIHjW/8mZoBfxUHAF2AjPVtIbMnGf8U/90sz6FTH1WMU2O5miclcC6+pgg7YBmH1TcFSJiWW5g7pDK7ociUa1NuQzXfSaOiW6m1jDe+fqepqvUkquTLTXOrvUZSHSkl13H8vE+MmI+2lWaBNRHqIa8o9dDiNYLy89BIqj6LfEIgTrb1iaTALIyw=","layer_level":1},{"id":"a45e1a1c-ff24-45a5-ba1b-2460d5c65266","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"账户与持仓管理","description":"account-position","prompt":"全面阐述Account账户系统与Position持仓跟踪机制的协同工作机制。详细说明Account类如何维护现金余额、总资产、交易记录等全局状态，并描述Position类如何精确追踪每只证券的持有数量、成本价、浮动盈亏及历史交易明细。解释两者之间的数据同步机制，确保在每次交易后资产估值的一致性。文档应涵盖分红派息、配股等公司行为的处理逻辑，以及多空头寸的管理方式。结合实际代码片段展示如何查询实时持仓、计算组合收益率，并提供常见异常如‘资金不足’或‘卖空限制’的触发条件与处理方案。","parent_id":"a87540af-7ec3-4c36-b16a-41d9eedae177","order":3,"progress_status":"completed","dependent_files":"qlib/backtest/account.py,qlib/backtest/position.py","gmt_create":"2025-09-27T10:35:18.492438+08:00","gmt_modified":"2025-09-27T11:35:33.241267+08:00","raw_data":"WikiEncrypted:3dIsHCE5EGeVKP2C6D6lOEmpiN9ibAIEirHOfflDzmLtuQfBMQ6mKqKigSyZ27qCPvz3tRSVaj1WzGy8qHsiqhVgLTm7vJdGsyIeZz+6W614VECiz81rcL1STRiPS8U+aMY8kz0v/n1JpYh4yR8mTuqY9C7ThU1HgPJTsWcUQE1jb8OVDr/2+siIcdZ3kJldx+V+YnYcQfezqfjA0ScPGn5B84Tc9AesdI6qtfBVAvddiZe6EcuSO8oJoRA8E51Btpgiw9HiAttt/PuHyeucDdA2kPSaVLG+DmDCGMD0DebnpiqrI6n3h3VeBlnTGinfBi4zDz8Zop3aIj9DcavvQor1W3ZuqiBQwXU2pcmKmSajTB7ThxNxXmqRLT5yz2uF32mjmZaCSk31m4FGpsegFMLKZZ/Us2YSlUaSKsMKzC2yp/9mp8znH4Dr02/ZTTM8Lk61mP08T/zEneiSuGjf2rkHjhCe7ybOKaToATxIKRLto6Kv5bA3jO/DOlk/t6/i4CgnSxzRGW2DSe9eH76CCFqiYl1UGSsITQSwNt1N4EFgsaSuVFt/2HYJ7iz0kTJgLk+htF7A0eAH4eJxQRJncBCS1I06a+VjYwKpKtgzfuFD5CA2LXGS+w68hXNrQS9XM5b2ib+XURp15Hrv68IL2bCLQ8EeInltFpxrCdMa6kKwU4zy95dBQNsA814PC/fiA17R382rbqbFdWYmBQeGRIdi6UKpf494SUnsf7K43Qzb0CXTkDzE6LAV22ruz4v30W2Zl+LSqpcQ8757V6FHPGaSV8vEQRVwnzyZ4ZEvSAMw0FNCxr2Ym0pMaGUSCoHRgidZThEQ8+HfhPp/uPLGAYDATgTF9x88gx2ghU6Box3cK07q2WrDQN062sq2uYgn57Dk7VKejxe2p/Y4IXF4yFK/mL0VZIY33meBlZrGq1mn74xl9AvTzvr1KYgKG4S8ufvclbCdLG93aOw41FMqL7e0mEfvQIhdGlzGv+6Af4G1UYRiZELEirdkjhBZVOw3zHPW6vHuHM5YPEaXq+l3C1E4FseRGuemSpYjng5BVA901Mpu8kFplyNFAzRbBKnAJrpwOHhqsScTTFDqHLj4x+3KvjM86JDgd2AExiGJrBo/QHJyvc77sGxQuNfJq5v7qarqlduujcrkt3pjFb+yZvx1KuhqZsPlL/dgftbEyuJoZsw5RwpLSR7LQL279Dy5RMBK6ZzW2JKAKZiSLhrgXVomU5xVsGh6V+89KjlNhbPO1d8+sPaak1OIfIWSgiXf","layer_level":1},{"id":"b6548749-6d5c-468e-8bf8-6fbc56cc074e","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"测试与验证工具","description":"testing-validation-tools","prompt":"系统阐述Qlib测试工具集的设计理念与实践应用。以test_get_data.py和test_dump_data.py为例，剖析单元测试如何验证数据采集与存储的核心逻辑，包括模拟HTTP响应、断言数据结构一致性、验证时间序列对齐精度等关键技术点。说明conftest.py中fixture的共享机制和pytest.ini的配置规范如何提升测试效率与可维护性。提供编写自定义测试用例的指导原则，涵盖边界条件覆盖、异常路径模拟和性能回归测试。强调测试套件在贡献代码审查、版本升级兼容性验证和生产发布前质量门禁中的重要作用。","parent_id":"92216737-d741-43cb-a9ca-9366bed85f6d","order":3,"progress_status":"completed","dependent_files":"tests/test_get_data.py,tests/test_dump_data.py,tests/conftest.py,tests/pytest.ini","gmt_create":"2025-09-27T10:36:22.35126+08:00","gmt_modified":"2025-09-27T11:36:41.455071+08:00","raw_data":"WikiEncrypted:a51tw9+B5Xez88YuZqi4cOeCkR4Mu/eKrsvoZImOzueCREKAr71sfVvNsF6fOeLJnc6W4It8SnYvXR8ZHmTs6HhCxJVn/vx/rzAFTp0n6PL9H1uNhRcysgdd4VL54xcCFRV16eWA0e8pATBrzgwawlamzRNYsAM4D7yTXBAW+cuf1fvzjt1qpwhnPlpLZdiPwP9PtFhYkSdPihFEZ3aBWwU0itB2xRzqCqZUQzJfFxKtssh/wLPGNYEYLSNriOZd44qBE70NGxbFHCWyqWFsBESTWcPVMlpPWgMq2OJ0VLWK0X5JDtmwF4B+tL+joIXZ1r/ajMUvxJrPS/Y7SZG9OE2hEAMNpz0kD0LrBGdqh8MRVII9S4qsw40J1SClqNdOKA3nSCil5cXZKj/M98Zr7Hh1sKzVVXnnKouP22iJT/P1P7khoFh5zU6e9fgo1UIj8kbvglvQLgYksXke+pKL6ndgJy/fS07jKTm8DgxKrH6w2rlkwt7lRzYwpnxAkjVnbyQ8uGVNI/GnrKwIRTGCIjGg7mZ/2JdR1UpPoPlB/SC0zEVMFRpwY/fPl7Gcvvov6pJd4SbPsZnRYINj9D09YlN0b9lnjyZJAXMfAJvMLChcRcW+vwaVf4IFy5DLvqMlVK4a5R3mVZVftyasl71szP3APfxoaRsR+2r3WSaVPor8/IgtZuO4Obamv0/fu0p8R8ijsgMiSijelFSgUdpPkZT0qkMwNzAa2j6NM7lNzIGOikRR3e11JRzU6e4jumLK+QGZn1SygsLo2INgnodTJEy8hXe7ZEDZ20vpxnPXcj8gBbv4U60EDZ8PGmr3GX4I+kxsHfpiWLXtDhd1e6iSNE5zqlaWe7Uf7+Cg2TkNH7S24Eo1wf8cWvVr+3QfpAb15iNytoIx8d0KxL0m3izjuM8YLlexL+Ja55g1Osn9V2dYgxih7+3hN/RGr5VTr+c7C+9/ALB2tG4j5xgcSMWiDdoTgAV7qI71jX4M3pIpCxG2Qt7itmZ9G+lvkEBZ5MA0/MD2M8MnSQs906mpYohd2atSkY4lA0+UJEeND/bagQre9mrpLuciCaAhfyhivY1dJNKt4bqzd4dM0kah6dOR89wY8U5nTiJlmoa0N+jKTzpJ3e/0c3HG8F70PalvtJqCisQb5WfWcDl3hKs2eA/PaP19Im4n2o7RnYrH8JUQ/O5lNQ/nM5gBs5ZyrZqeC/kq6oZk/SsXuCKMjQmsUN0I++I1dLBJd/yFY8AnQez6r48a0QHgVztlyhMKs916GABIG/iQ43eEVZvFy8rEgctU38x0I8h6jzQvdoJOyMPlriw=","layer_level":1},{"id":"f299c43c-fee6-4271-b5d0-bbbf6846660d","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"回测系统API","description":"api-reference-backtest","prompt":"构建回测系统的权威API参考，覆盖策略执行、订单生成、成交模拟和绩效分析全流程接口。深入解析`BacktestInstance`、`Executor`、`Exchange`之间的协作关系，阐明滑点、手续费、撮合规则等关键参数的配置方式。详细介绍信号转决策（SignalToOrder）、动态再平衡等策略转换逻辑，以及如何通过`Portfolio`对象跟踪持仓与收益。提供高频回测与日频回测的不同配置范例，并附带性能瓶颈（如事件驱动延迟）的优化建议。","parent_id":"f0a006c3-89a9-481f-b536-5c95399bd31f","order":3,"progress_status":"completed","dependent_files":"qlib/backtest/__init__.py,qlib/backtest/backtest.py,qlib/backtest/executor.py,qlib/backtest/decision.py,qlib/backtest/exchange.py,qlib/backtest/report.py","gmt_create":"2025-09-27T10:37:00.521619+08:00","gmt_modified":"2025-09-27T11:38:10.257403+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg1dKwL1/q9U/nWjzGrT+WlXbkY/rD/2OIMrJXkBvFt2aHlc3s/B0k+uxmbSQ4Zk01NnJvGcRGbzbRYLqL/ZBSGuFExD4uTaGHeOezyHESSgVxEi3YL8FnGrtqoZ/MclcgkiFj79QcvZ0zpBndYHzfKpvnNmffashXbDsJpwhiW/wdpH9HT/dP06TTI02sLcCmnZRTSkzdi5lOS9ORx5tL1m7ltbJwLEnSPHKrI/LJ2trEJQOLADpZAR5ZnKpjP9/YTY3v6Dm6vosMXCGW2K7uWPLYewvu2Mf6fDG7k7h/dWvt7xV7DhI8TcYzSENkTEVOFJX89YY6BX/iBXcyfoRqtf2I9V92mW+OSMWt4ZeBF+t6Otmaoafn8V7GIhfMtg/l2n3ej/UMgK2Ap3leZIIVaGhPSqBVfqskEu1trlnnCaCUH/Oj3okU5kIF684X+4WQAh9n8qu7AfpyUB+8tPcJd0vsHierhu3jaDB8p7X2jJGFI8PohepR8xbrFAW/IQjJiinb8Vtzm1TIXeRvVtOtBGrIYNBugRJQfMGkHKDI9XlxGZ0nl9qDNKAAdsK1sIC1Nd208liGOnWOuZ2qDie7gGiY8xhIymi+vkOvQKSSOsYHyXgzGVVWwrmZRUtmvtPLprQnj+u4cjXhPWtHoO6SZYVypPvon+TlJQMyGE+aG2TMVeQuZoc1juPgtIvdKHMjdzNsB6sSIce4w99B089rMAshtI3shf+qpyQzhlwP0cG8O5BQXVwVymu3140mPsPhNm0HRpx/fLgiEoQCCzdr817v2sMErn+7344sQM8+ff2fFOFti/YkyMDsPqSGNKudHHXbvs249TWttynQYzDeDVADZrGTL9jAHT39yEXne/dJm89z9Khkpo3E/uqfHQ4ZFf4xT1E1r0s6M8gML6nN3siDkudn9tz+C0xvHy0dsVpcdbjrfvNaNaxKELjUQW3jR1Ma1JiOXDU7OWe8Tw2loeLwiP/RmHHhnE+1CN6VwelaQz4D402UY6uoA6Yy+7miEfBhPDaHC5xZlaqavf6NPkKjMqEh4c1sQ6CKUOOOMccusB9F6B8r7EP0MLUYyjU8l/LkxK7c6VVuSMYKFc5i13XgpsO8HT9K1vxPANJ1KcVnV1WMUrmwofss9jS/iA2kPdKXjeMikS0FT0oce9Zly4STXEvLN2Qo1nnaSxmRFnT9lTxWUyn4/HnUfcNEo9KPNhkzmDATHLJW96lDthVI+ra+8SQDs3jlMM0Ptqwutbf","layer_level":1},{"id":"103282ec-7831-4657-8318-d9fafafe4fae","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"交易限制处理","description":"trading-restrictions","prompt":"详细说明Exchange模块中涨停跌停与停牌状态的识别与处理机制。解析limit_threshold参数的三种模式：None（无限制）、浮点数阈值和表达式模式（LT_FLT, LT_TP_EXP），并说明其在中国A股等有涨跌幅限制市场的应用。描述check_stock_limit和check_stock_suspended方法如何协同工作以判断标的可交易性。解释$change字段的作用及涨跌停判定逻辑，展示extra_quote中limit_buy/limit_sell字段的优先级。通过案例说明当标的触及涨跌停或停牌时订单被拒绝的具体行为，并提供日志调试信息解读。","parent_id":"8a795b0e-5874-4e9c-9e5b-25bac7c2ce78","order":3,"progress_status":"completed","dependent_files":"qlib/backtest/exchange.py","gmt_create":"2025-09-27T10:37:54.132071+08:00","gmt_modified":"2025-09-27T12:09:11.595782+08:00","raw_data":"WikiEncrypted:YPFyHZBKLoeqhH/MwKsHwRcyAmhpy9s6Vp28jiIV5L0yEAsQ89p12Mhd3U4j6pJ2XtOYvo6ZecY5x88/KNZI2ER14U4kdR3hH+rzX2yV0ShNNe2Z565kAU/5THsRHGyVqiFmtaI9/Cd5Dd05xgZ53LHaBJlsG7Ul1B0vsp9NyTn8yrhBikfsQzslvkMoLlrCt/1qpFinX4wNhELjoW9Y++/0BNDA56R+psWm5klUjF6nFJnjCZHgjNKqzmM2NrR23WOygOczfgq6dfknGHpNz+ueDWb/K2keSeTayEPLbYlR+5VoPo801tZzbiTZ4yLlT4Xss7zyauwUUiN1WmVeRUvLNffgWi1NmKgt7WIKPjz60jIoihXx5E8rWHuufqVC2hflP2a3GJWw2ptpMuVW3TuI3TtGeaSKeet+1a9MvdUb/Plku5ZsfMOkip1oTCSJSADtkWZQ1QT6xTYA2CuxXDCGDpZXkVLfwNylfVPJNV1CVIp/5fK+wVc4Ol0xRd0b8tAmYXRgvMH9qpTPFSsfI9eYp2/udbBnq8/K7Wxk2g6xKX8LYXDs29zs/s2ukdfos7oL+LzNfSZO+oeQR7JlNAGhUmGWv4yxrPqdPwQi6iiN0nGD3MeIxbeQPpRphceMzDmu0gas5CzIrCU6rt1cTKtV5vtNnnSsqw8mU37e4q6IOnQWXE1LTNYPijfV3q6NYUfWbR41Iq/lVP+XI1AX75OdGEaCeJVIYXa8vB/egSFqbJnKZClueKzeX4VhLPQREckKOEhQnywwyf9Yrb6puPcgYqQhe5c9YWJkXjV04B7p0gqfqhifvAUjHkfzwLkZSQ8isv9Op6Hcrj3C+jmry13AAfl994QVptj1blMaWUevjxwSTQoegRkgrPqvpEbSpjVw4G0xRvT8tiTri5Aa5QpncfvLUrHGXDTAjlYXSunBVe6sz4jL28jE8dh/RCUZUZFdneg5YnWO61Wa3cU3Z4Ui6xXVR0t1HYnWHZt2eMnquQroRyGi5OdxKpCet+2mePuvXrhEr8ZEJUQl/jDuXfFjnYy2CWrDnyLGJ2CkGKtj0hhd1jrG1awGcUbupcZzZb3ps78I+cish3Hi7TsDpaG+mcaiwCqtULohjeeQLijczyRIf+hiUC4P5fW9+E734ND/WlBAb/qLeX3kEaEeeQ==","layer_level":2},{"id":"e8ee7688-4515-44e1-bb0f-750d98f9b765","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"图注意力网络（GATs）","description":"gats-models","prompt":"详细阐述Qlib中图注意力网络（GATs）在跨资产关系建模中的实现与应用。说明如何构建股票间关联图结构，描述节点特征表示、边权重学习及多头图注意力机制的具体实现方式。结合pytorch_gats.py代码分析消息传递过程与聚合策略，并通过workflow_config_gats_Alpha360.yaml展示训练任务配置。提供案例说明如何利用GATs挖掘市场联动效应，在行业轮动或风险传导分析中提升预测准确性。","parent_id":"6bbf8837-7976-424a-be4f-c64d28edb86c","order":3,"progress_status":"completed","dependent_files":"qlib/contrib/model/pytorch_gats.py,qlib/contrib/model/pytorch_gats_ts.py,examples/benchmarks/GATs/workflow_config_gats_Alpha360.yaml","gmt_create":"2025-09-27T10:38:45.915029+08:00","gmt_modified":"2025-09-27T12:25:24.630193+08:00","raw_data":"WikiEncrypted:oAB2hVa9E3ERNzaUM0uIFB9GFKkchPnlJWP5uT3SAiV7gvHKSPLMu8TrTGF2yiqGJkH5WAPiQLRyVpduQPeNxzS0U4Ac/moBNhhEad52aSm16p0HlfhDREBls1qQIUO64Shp+G/5bEef5Ytr1sXbtyz/uKA0TVQhC3EeJzewZERly7V3PmUVhdtPl7UiGcRlzt+dKfr9c+WJntghHJgI5Knzvi6132pxn9N4SBfw+SPvMQSBMktKihc22eykrRzGDDPe3+E3p55uW1r8q9UmgyZCXyu/G3txKbYlIYX3gUdWMEssl0kidCf4rtl2LbUhV4M29jPbL3N+rjMy1+P5uFE6ZsudREdPfyRi+myYd0z29QAV2hrDjuxC2Ca0oppzVIJi7b2pT0OGVC+2Ed866HAaRlOfBaR3CmfQxIuvnWRKkrGRlUwssoQ0AIWVyjMvqh3j3TmRtScmbJhwipFp6an/VkHm/jWCKplmPCqCinjlB25WirqebqiACx/CRRWuotzPJSyJuCaf/wQ9pOj7BVnBqpvBf0vn1HXhb9Bx7CJxZdIMZE4JQk+zhIl5YS0LDiJH/PO2ZBE5YIzCl3HQnV6jWiXK/YlYpIkL1AJc9NwgMi8X6APR/8VcNvzX0HatsRVWG1+FZNQKEf+ZYLtUiyZ1QG5CRErQM95Qaz6gzvvhK6l51Ah63l+ei1UmNk/nDk/MsTDg2OmZEQxnORKU3YIfk/JiPrKBvQZnNh0xN7rKcFOWz/VA5OtCXzp3NQ6KbMtsX+vlMegradfMA5BarWmcMHlf6Rji66mGwdW59Ef+g3EybPWHPp6T79s5ZmWDw7ZPGdR0Qbvrh9vn/95Kni4GFRtyv/5ibvUyPWfaXLZMixX1KUkZsYHZf+dk2QtWyKKvNRe3tCyRrLm0zaQ/qidgBxCk5WygpF4pxWxlYk1993VNNRI5amAyq7S3nXvQydFs0PwtbXxOpD0UEANhOiYxj9WPtLiqiq//Z6solg7pGPl3WQ5+osbdxpknhNJBY1xEEZq92Luhwu5QcKM0aEeURMN49SE0NUgwx0nUtRyl3lBVLbNKNXVJZEoHn8+CRoVjYlaV0XlGd1rYVRImZkkEHFUdwzV+RhvoC+bc5+30TbSxuGXkbYft7GPDYZUs","layer_level":3},{"id":"1199927d-238d-49a5-89bc-4314faadcf85","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"调试与性能优化","description":"debugging-performance","prompt":"提供自定义执行器的全链路调试指南，包括日志埋点建议、中间状态持久化、订单流追踪等技术手段。分析常见性能瓶颈如I/O阻塞、锁竞争、内存泄漏，并给出基于Python profiling工具的诊断流程。介绍如何利用report.py生成执行质量分析报告，评估滑点、成交率和策略偏离度指标，进而优化执行逻辑。","parent_id":"763d86f8-f7b4-435e-ad6e-05140152c8fd","order":3,"progress_status":"completed","dependent_files":"qlib/backtest/executor.py,qlib/utils/log.py,qlib/backtest/report.py","gmt_create":"2025-09-27T10:38:49.955869+08:00","gmt_modified":"2025-09-27T12:26:03.081714+08:00","raw_data":"WikiEncrypted:IGJnZREY6KPscHFIFvSUZIbSWKeGOny4Yy8OV+P/Ks6RvvIqxlbl+X92207Fyfrb7c74NONWdC1BrHodrMotv+J1CUaQusAPrUEYEQIE9AA3qHkBsY1Ge9KUbliIcQpfzWY5kQ9Tw8uPJxUNkgtVin8mIPVLB36PYbH48dZGXyAp9j+kG2RZ5EdVU2k/FJxxsGeP6sM+7YNTdlTzcsEoD/X4zOlyxISA+EwWD1+zZqHiTJIYTK32Kf+zRxOx5cuX3eDx0qvu98DXA/cTa2gy/jp0pUqNIZ5KJtqLj6NHyxz2j6m036EcVzl7nDm5MtQIPTLN8q7icFiQKVKGUEItgMUHJUR8589fw4S2N7mKZmk/N5LWSCPwg1lGE5uu3Gs5AE4Dt6Vo2hxChmYfI15DHgGwW4FJNESbj3pimAJDLXi5et5zsIBiKVa7XiTlhofALCdcaS55mGzjKxkYzsW1icXKMQDmv/GKxDnHuRbWZlXKUv7n2UBjKHd4ovnXpftOuTT4q4JhohD8JdAPKm1hwq3u3pSZeka6t0PWp8PsOVcOYIqTWMzSnhJxEzMD7TEJxtKmRvabn+Dhf1EZ2NXxHCVjbdB0ViK19gaIeGozCg1cK99xNvRasOsfCzU2f2rfEerMjl800Hqr46wlZ6K5WM+/lkAyQZmgtU3Li7g1FFb9HC6n1YxNlTBoJCuuE/Hxebz5yPpM6nuQhxR6ZAUEQTwLCwF9o0S/1gh0vVG1IMhKzOHWqSxPReP7zO6wNx4EvHzNlrFnhsvQ5O2LJFXrQt3pPvSD0PMT1FJva5WhEtj626feTJfXMZWMvL+AafPwdg0CtVnXH9x7BqVH5lDrHi0snxVKO8UQg+0YKcE+ewvfTz8rUIHr8zS1Fmtjw0TTCuG/lqlqjFISXcKzuhMXj1UoE8zp6s76QAOnjLQog7D78opLFxTEiJUX1tXusqQUwTV078/s02oQsnroUDrvug==","layer_level":3},{"id":"a87540af-7ec3-4c36-b16a-41d9eedae177","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"回测模块","description":"backtest-module","prompt":"系统性地文档化回测引擎的各个组成部分及其协同工作机制。详细描述Backtest类的整体控制逻辑，Executor执行器的不同模式（如日频、高频），Exchange模拟交易所的订单撮合规则，Account账户管理系统和Position持仓跟踪机制。解释交易成本模型、滑点处理和流动性限制的实现方式。结合highfreq目录下的高频回测示例说明高精度时间序列回测能力。提供自定义执行策略和交易规则的扩展方法，并指出关键配置参数对回测结果的影响。","order":4,"progress_status":"completed","dependent_files":"qlib/backtest/backtest.py,qlib/backtest/executor.py,qlib/backtest/exchange.py,qlib/backtest/account.py,qlib/backtest/position.py","gmt_create":"2025-09-27T10:34:17.043977+08:00","gmt_modified":"2025-09-27T10:57:24.931011+08:00","raw_data":"WikiEncrypted:GW0J6qhdI+Co5+lmnL12JjYIUk3DbZsaFJ+dKUcypngDyj9jBHhKaoXglNfCK/Ox5N1/QIL9yHtLWa3IPMVYN0HZzC9c5CjGR703xUtKInt54QwHgPtmV04adfREW7t6d5lSaLPdQivWUYgUvx1ddJpbKZaUAq9wD+36qoOwC31JDujgDAeQZr5Euo6fN61AFoFush6wMA2Olmq8usPcaWJWc1+drBEr/Vr4RaxrT+Gjd90S7Wx6JbaTcWX2hBC0YhCWSGPZRu0rJZIjHvEjPpTGJJ+34vZPAOHZS+ORiW+WDFuR17dcIBrsxbnKbK5eJ/6hhs6Kb72S0WMw7/0x5DORZMbQXyxgzmMPHtLBXniMZJDVQl9e7AI8dluI086TV5ggNy9dTV5ky996MHVeIusrxXm6wj0BJUrUcvwDVFa2jdN0/Of8VDheP4V63km4eLBje4m/QkN4tqpOyXXRa2Yj88CSRYn0T1nVo6JKS+cWfxJoCKLbdWfthlGLJ/uTeNAK4mGyoa7Le2cKUBK84BKnLULbxvGoQgPTDimt8NZO+piklwK79vvL/ovV0a9hVTNoHGi52ihzXVcspfJ8JFqQ1dO183skQ/fp87nTdEUuWshArHJzfreEaV58cvTEWN+JdM7wV+lbljKGG7VFjGKSywlVP5pp4vOY7Kdt8xgKEPxaspXv4sV2Xs2csj+SKDBPEkEFrLXznrkBJWkLHycaztn4urRZtxgYolL6fXErgV4Coz5i0E955mTHz7MqRivr1yalgv83UhsdDI4HdY1rIW4mTB47+qiRWrR4o7Yu6qo1sgIimVbnkeMDWhTZ2/XAsA6gTP9zxjkiki1M0USwn7a3UPjpU9RduwJ8eI62HUhg0befECT1QitRqH4f9VYD8MUy4EE8i/m5LunCWluvJYPVGz7JiPX2u6zmK8xMNXLnpjVXFcOitx+DX1jwKojpWX8mcChOwzkw5E3QMw7Bl2GycFPPoXljGCj2p2HxQIQYupNQYgx8z/bjVmoBaAn9Wsjm6MWctcwhyb/x0No1EbWPxO6vt+quwAHLklPT8yVM+n8HlniYp4E2PArO4QcsC7qw6A9tWlupGPeXo41lW35mf/eaiUvr7698tKeqT0nsZ2f2Bz7TqkBtGDJZIihM9LOgY6O4DtvCmTCSZsc8mssFBbsng8W3afOz5rpszqARUvnxHmkuGB2Sjw6naImFqzcKUbyn0xcAHjw8ctGIigsJ6yxbw27XCqKuW3Ef6XRZ2Oi/7o3Zrk1WECyg"},{"id":"a3b46aca-1fbc-48c9-bea6-2c2492f97f37","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"数据存储","description":"data-storage","prompt":"详细记录Qlib的数据存储架构，对比分析两种storage模块的设计差异：顶层storage.py提供的通用存储抽象与dataset/storage.py针对因子数据优化的专用存储接口。说明file_storage.py如何将HDF5/NumPy等格式封装为统一访问层，支持高效随机读写。阐述存储分片策略、压缩算法选择及跨平台兼容性考虑。提供自定义存储后端（如云存储、数据库）的扩展指南，包括接口契约与性能基准测试建议。","parent_id":"ee2e30e0-2b00-44a7-a86d-d24456832772","order":4,"progress_status":"completed","dependent_files":"qlib/data/storage/storage.py,qlib/data/storage/file_storage.py,qlib/data/dataset/storage.py","gmt_create":"2025-09-27T10:35:10.389513+08:00","gmt_modified":"2025-09-27T11:38:00.474391+08:00","raw_data":"WikiEncrypted:yP6vl3GzzNMVOI7+ToNUFRcI4c/RWCpG/mylJHPfvYA/WsylqNr8Xx2i7CQkqsrKXGkAQGpzpW0DSfI5uwvozwakVF+12xWVYSgACTJ7br9TU8svvOA1VmSs7rxlczF5J/i5m4V+FdtvnJm0hce18TFrDB8XYSBYe0PrZpQahK/TNmOCw38rbSGPWsY3ndhuvMYfcnrBnd1kf4OPEVCpuVDLrKFJ1DjfXfWFb3XXTx8CIvmGDAd5C8k1URNvIZOX7xz0lBhn0LXIVuxSMmsD6ZHcszqYaQWB+5VHWNLzjUy+91jIb7bm6UpFfEWaWwROYPYZRKS7lLaBGhXc7DhMDde5y9NTEVeoHf3YqbAB0e1Lw/dcxLIaCDLq5Q2z3FYcxWmg45yV0OqJNpN/7Xf5AtGryp41KPrScfTHlWV7G51KIxhXHV21u2hRg5dIQZRp5Yn9EoZt5XKpwk2hPkoid6T2H/APKEjY+WNSuVYFeKkBmPMAC9AuV+FswOknVPr30k/bY1gMVXMCXZ4HPqE4gSA7ylsW8ORg+rffI8pZD4rpw/gdOKpCFS1VyUovcSHy75vrWPr3XUNob8fVxqdbtnhtiuE6pedQiRYERXpIwE9LO1ixmfUK7XxAsHkcLItbkyPooPhBKi+LIrV4ZMra9Ca7CVQIvBgt7yPKIFEeGjiVKgGkEI2MXXegYeRxkR9abq78MYg7HZIhKPWdts5/p+8JZDf7a7a3+m+GrpeVVzlWIJdZQ/XBW1anI7WKX6YMSbAm6Zniw0t2QP99YZ+2JD0CdBEG62b5mwyvuUwK6D45cb2EaLDfAhHBj3Om+Z6DMZOc7wLWKufaAiODwQ5ZWC2R4zJyqI2wcZe5Ndffk4iSP6+Lq/IUDNEXpn46Xt7MoeDxykotYqmaRbumT68O0yRuHZxlGrPivG90V77chKF7KVK8RMh7gv/OOC2HLf+SHrNd274joetSMAjdBPU97h6gI3yd7BqsXLN3wpu3dSIX69o4aD/qwJmIEoCAbKQb32TFn7jgDv9xc4oaX+nGb0bVL5ZhnTjFBnPDSxiiU++APkqESPIqene6FNL/igLgxNhu155VeoRzxzdgaCD4ww==","layer_level":1},{"id":"05af8451-2db9-4d5f-a70c-45138d95a380","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"收益归因分析","description":"profit-attribution","prompt":"创建收益归因（Profit Attribution）系统的深度技术文档。详细解释该模块如何将投资组合的整体收益分解至个股贡献、行业因子、风格因子等维度，支持Brinson模型或其他归因方法。说明其输入数据要求（如权重变化、收益率序列）和输出格式规范。结合report.py中的绩效报告生成功能，描述归因结果如何可视化呈现，包括累计贡献图、滚动归因热力图等图表类型。提供API调用示例展示如何在回测结束后自动执行归因分析，并讨论归因误差来源及其校正方法。此外，指导用户如何扩展新的归因算法并集成到现有报告体系中。","parent_id":"a87540af-7ec3-4c36-b16a-41d9eedae177","order":4,"progress_status":"completed","dependent_files":"qlib/backtest/profit_attribution.py,qlib/backtest/report.py","gmt_create":"2025-09-27T10:35:18.493028+08:00","gmt_modified":"2025-09-27T11:40:18.185548+08:00","raw_data":"WikiEncrypted:3KJFs/+fakBIzq/vLbWLrbrIMWWMrhfjCX80e+t9IJ/XZGedY5MkSkmh4yUpVPgWs4zdMLDA9nV02L3olTADvhaebdaLFUPXRP07AR8OVXpOhOpUcfLpHnh4A64quyp4CDRK1siSxdkGggCatfDPoB055ckmADOAxmemOJ02WCy38dDhU8rliQWrsl2h0voyulggZfEnS/tre1P9k4LFGMCsTjxu4K1FrF/ieSqso2meT5Qfd1s56r48k0YYvkc38WyKqOsVQB/yFVVAZ9xrK6ACdeu07p6PDlX9s0iu6uyU/ZkMj0FnxboNSXtN2gg4eh1i4EUuWfRF19snXBxVmHwdigGeQifr08JtRyX39gMaiGwCANeyeDJw/u5qELo2Rv591ISG2EXgL+3v6dXrjWhCMLeG47eGO+WkZCEUsxrYBAaYoZnKAfw/wK29XfvZAzvKVg4oEBPLKKyA2Xfl66mztRNsoSOZGI+Nhw7Z98dA7SBKag1uumDWqOwJF/LkB2bY7r0zN5V/D0ODchJEfBrZ23b17yBWnwQ8Ab8t9eCO0bmTYa7wy/yZei8XBjBAA97SG0EVoNVEDigh+699gNJNeidLRxT90USAedQX6ilidmTApRFj6JaEjs+RL50VK1tCgywj00Dzawus0TiWUuGmLbcQyWX7b31EXVv4hYdbauCqeSvkvHHg5o8EhMO4moP65tbWoGs+xggxb35hSsm9qrTOJ/gvrMtz9EVVphQSFhFw+CEc9uVkistAENSAaaqySrx/lS+70hoQdxxfHb8SrP62w56AUYDha0S2acQQqSjbZ2XHKvM0/c+7AM3MZ1wg31taWnd+QOb5it/hvUfwNsKb6fWqSuceV3qDT0AnspI8K4zdxcM+EiBOrXdmEIuz+Dv7qfpGHaCL7a3rs1LFSfE94IgYft+aCVB8e96nil8lGkgA0wQ94jApgINcObis5sHjJkmiXlu9Jzjdtxb/e88GzA7gLw7FyO3IPn70kTEhUxMJV+5FI8aWaw8cKUxlL+/zsqnEeliiBPnbyHZjnTKPeGEaXKfAenqpduIJkA3GKvKfis4sru41VfpnUNzc7brAt3tM+9DWwHcPSOu95GymEfmCHiiq7EaCwquRQM8jFvAYZaTPLGOdC3JB8ILEQskwPDT1DH1ULly/2JwRurw7EnPW9+88+krowX6MZOSaLyxGCZ6oAmtpJk1/M+HZCrFZTjf3/WCPIt6B15FLGusOLqh8HW68RB8P9gy/m23WuPjaV/0qOQRX9l8JY4drFUJ5OQgNNkU6C0tppA==","layer_level":1},{"id":"353d09e0-c8e7-430d-8bbf-ccb7654da1c1","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"策略模块API","description":"api-reference-strategy","prompt":"撰写策略模块的详细API文档，涵盖规则型、信号驱动型和投资组合优化型三大策略体系。说明`Strategy`基类的设计原则，以及各类具体策略（如TopkDropoutStrategy、EnhancedIndexingStrategy）的配置参数与行为差异。展示如何将模型输出的分数映射为实际交易指令，并介绍成本控制、换仓频率限制等功能的实现方式。结合真实workflow_config.yaml文件片段，演示多策略组合与嵌套决策执行的高级模式，同时提醒用户注意策略漂移与过拟合风险。","parent_id":"f0a006c3-89a9-481f-b536-5c95399bd31f","order":4,"progress_status":"completed","dependent_files":"qlib/strategy/__init__.py,qlib/strategy/base.py,qlib/contrib/strategy/signal_strategy.py,qlib/contrib/strategy/rule_strategy.py,qlib/contrib/strategy/optimizer/enhanced_indexing.py","gmt_create":"2025-09-27T10:37:00.522252+08:00","gmt_modified":"2025-09-27T11:40:33.102024+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgyJ7+w/F5D0Ic8not7ght8eprdUyYRKaf2fB3Qdn/1MH4wHRXGX7Yt8qnAg9maxDMdGk4IENJieJT0C4P0fO0lUBOa0VEOp9bOvrnN4QGSVXgDyf6/LyC20glEBRhahAdYJQ+ttIhAJ7zG2PHy8Ls2ptxhqqOdQLGE5PJi76kUPksroNbSOY2SQbY3OAgUP5QtPsLECQFH9Hk0VPj5EdZXfhDB269dvkpudQ7yQTBSMNaC6xiMtYS6BUY27B1l0g3SR8ea/bF7IEUHHWx1dll6n2NQbX3xYn/bdgRNJdqvS+0xsB07dWjU8VmpQ4R2apKSCkiUzzombykAN8mqk1gGO+B34hc7X4hlXrIkZUBEs4moMewXpD/WKHgNEwFkCJiFmQ2CHq2J1P6ta72XoYhGpvyQSFEtDIwnyEekYgHUxgk2Ct0wEaCc/EbQVKEC1UVlcOWykZ01gMQ5PDDjYNxRMYMLEunwGPOeiq7b28y60bKETk8WjNykEEXsnFQxMbLnIdlh+YrAPWnhO0CzPY/tzip7MsNEAVBKnO06NiMOMzkq6kMlmDpfjtBVvfuNhJ0epO8WgCDfW/nrcF8YwWEkahizzynFYSM8IOjSFsP+KltDEdHH2KMgIuqVJ5hP2qa5qm1DT6bB2wgntN+pMKPfrzuYvzbOEUegUVCAatbvpRarRmdDhZS44SsR43yvxXgQDN3b8BeUOPesXmGlzxODksNwVmFnWn3D9OPn+5ah6rfIwqBagOAdPdRRHtz35nqy2zYs/TkO/IFuGmlfuSnIs8NQ9bopvXfM7+Xei0vCeMxy/4Iv5PKmbedpsreFj+ZS5p5lV1v2DH7d+kvhhb3B9Rx18JoGAqbot1+ZgVVPcoLn95pc5xwJLNtaDQC6Lsc7fgMAJ6QCNng1ZaVitHVayHbXbmVFtinw10HhsWnAn/zU+dC8e/gS9WGG7wuOIZxWBSs126O/T4hm67Qr0aftYrpG/uzQ7NzmhFiJzgfzT0QPP2Lq236x82L6uGceRx8O6Xb7y0H8Xhmff3qA3RoNWX6CCZqhD7QVDk0H0x0RZcDMsS8sdiEWoxJI+Oh5iCUCZkoagQLC0iYuMc5yB97qQSjABLqbK6+Uh48IbnJ95sPAQ8krIPVa4b4yC//29DA6JasQOnGOG/zUDhqocdRdsonvS0Hfw62Hieo27Q2nERxhiikZzRigmVqbPE2yYAGNAiAqnLuVJYGIBN+qqvQszJq7cL4l6TwBNy8uAr45ZxHfd0eX6QKyL5uaY7j2lCTRVrXXvywxKRzCJtIrvHfLQ=","layer_level":1},{"id":"bb76881e-d26f-41b8-a58c-cc38ac34790f","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"交易成本计算","description":"cost-calculation","prompt":"精确描述Exchange模块中交易成本的构成与计算方式。分解open_cost（开仓费率）、close_cost（平仓费率）、min_cost（最低手续费）三项核心参数的作用机制，给出典型费率配置示例（如中国A股默认0.0015开仓、0.0025平仓）。说明当交易金额较小时min_cost如何起主导作用，避免不合理的零成本假设。结合deal_order方法中的update_order调用，追踪成本从订单执行到账户更新的完整链路。提供自定义成本结构的扩展接口说明，并列举常见错误配置及其对回测结果的扭曲效应。","parent_id":"8a795b0e-5874-4e9c-9e5b-25bac7c2ce78","order":4,"progress_status":"completed","dependent_files":"qlib/backtest/exchange.py","gmt_create":"2025-09-27T10:37:54.133055+08:00","gmt_modified":"2025-09-27T12:09:17.604996+08:00","raw_data":"WikiEncrypted:mGwBr1hJF7YSiDcLUPPvj4LLesl+CCy3taP+0Zs+gtcTOOuUJOWy7vVqmHfjBHYPXMvJ03wOam/QYk1ARVNaf+91foPBq2NvXPjQYvaqgOAxH9uIMe9sLmUviqswEVajwtUxua2EQayt4fTYXTsXIhHF3C52oj3iTEeYejH/q+QtJe+WnBS2hu/aRxtWaMJb89Gr5vCzdHCvCiDwDiyuo29mLTAf/dMJNWdJjffiMvuVjBwvVsac/DnuVEJTeyoziGnFbDzg2wEQ2k7sTr5v/crrvgSIqND5VVmpYqwNQQQ5/qiiZk4UzVllNnlEBc4WILwk3oGNodRohFe2d93hAN7ivQjtS5jDFzH4zQM6Nkv9zHj0Ezl51JI1Dru0xUJKt/PsZ02PvmKkBRK6scdFnw+rt/lsZSwh9oIIVqGBNse22MG2NDnj7RjNzEsjkFdlVNVdFeGaG2jPI4umhO2kYc7mgTn+YZ2BV4ygYGcnx1qlYxWze9ncMA3ulwCB0hYIxRC74FpxZbMEoQM27jHt9b7k1k7Pcxj0VPdIwMkfzua/wlIAiWxb6jjaSH8X+mSro1ZoINXqjB1J1WRgBVSfGPHV3HHUV5mBC034PjIVQJbJjmG+Z8hNk0CQWE13s3k585XhJg60T6CN5Ulu9aRfCo3J1XBKHPeluQl4/cGfCwyVXZoZgFBnocFLudv4GvBNAbHyVe5HjUpN0Qfb2MZwTtHdReqrS0FbdtA/t4j7+SOxAv91j7yyolPepNDbRALg3V46ESlS8rCGePvr0WLFqL/rdn5yD/VCoYafpcCRIUkLhFuBzLmwN/Gp0IqkMd6Z3eZXGgG5/JorfDKA+OGhV8bpIQgW+M3UiVmkAfHAsImC1I7JMHE7bF54QXECb9tji4K7G0/TATVilvYR0WJBu1/3CqpcgheY7IYIlatyO8KFkWQtGL4R+AjPlGLE9n31T1Kq4Nvpegz//TQhqANcytYQwcwtTXZWCitCV58z6VzOtS7SF29f7jlkW/y26rJskMDClA4yIHDoo42imILGFcNw8fhCheNCf01XeCQzHn7Ahn+1xlOYEy4p1x4+FkTJveiRWnfWFQ9Pk25F8voJZN90WWmA5pP4A9Ft1aKG19+KypK9KSUiZxmuF0GDLZZnEwaYtGvzEvqSRkPaxNghrMUNUts8b5qILpWUV9dAnjY=","layer_level":2},{"id":"4f001765-24bf-4912-bd0e-a98d8a4907e6","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"时间卷积网络（TCN）","description":"tcn-models","prompt":"系统讲解Qlib中时间卷积网络（TCN）的架构设计与适用场景。重点介绍膨胀因果卷积如何有效捕获长期依赖关系，避免传统RNN的梯度问题。解析残差连接、权重共享及空洞率递增策略的技术实现，并结合pytorch_tcn.py源码说明层堆叠方式。通过TCN在高频信号提取中的实例，指导用户合理设置卷积核大小、膨胀系数和通道数以平衡模型容量与过拟合风险。","parent_id":"6bbf8837-7976-424a-be4f-c64d28edb86c","order":4,"progress_status":"completed","dependent_files":"qlib/contrib/model/pytorch_tcn.py,qlib/contrib/model/pytorch_tcn_ts.py,examples/benchmarks/TCN/workflow_config_tcn_Alpha360.yaml","gmt_create":"2025-09-27T10:38:45.915854+08:00","gmt_modified":"2025-09-27T12:25:48.933111+08:00","raw_data":"WikiEncrypted:54LbZ/N4E1gjIskchDUQljqXU/mGLnVcphRP+WG2GrIxdenV20g6xZ6rm8EQqtT4JdkXtSrmyhtE6hwMj9jpmX7ijxmDAPcOMI7UCO09NEZQ4KH1FrBWQaq3C1fmo1SHSFd0P6sq3w0re+QE2X85SPc2ua1lBZFrcmkIvVtEQ+CEEI/oYqAhhKVvLnj5bjKk8Zc7Ey/MjSbL3I86CYWo52MgQ2w6zngYWQkhw3Le71jctJj/snrYr4YW25CGUpB+WQ3R4ruXDxe9d2G6U242foLStLexOuSc7G+Hq6GihTyP8b9mJ2un0gAjvVhpteBAwg2wGCWIYRLNYiuhGXMhKQn4dw+YP2aOYo32RF+3q1vJ6YUwv/AZbbpHcWqStCfdXQBtecWMPDL1MhTN1eaXhyeY2ejkXCentVNb4d0sHj8Q/WD/Hm2H/Cek8G91vRuxVilrxOUPbCF1qgoQraeyzpD0nq/6b4N0JkFhowCkqOZKjAI+yXTAJifCcQBfFLIA9PMSPkitiTn4yh/Bgb2bWSIsx7+f6FbxYpMD0xuvxN2EDsbfOhUg9RuTnYWXxyBSW7NiUUFvxVYpMLR82YmfPC5f6FTxSTGQCe8FSacR4Bcq3+XaG3V3d0I1nq53D+eDuTMqMyu4Y6J5HrASigforN2ZvM5rPbjRuJ1jKC40wCRmG9e4LFdvz0Q91qONGjkNKb/PTdtmuxWoUQpgiOix7NB19mIBNo+z27ffYVBVt0cFzWCUPGxSpNKc5wUUVqDTz9t7hPLcH7zLQwS7+Ng/ohdNsLkD7gVvK2Br8MM3KnSXDsfXXxpLiHp5lJ+C57/Od96v9HlLoB78mX69Qf9cyo3SZcsjfs4bQMlc/YmrsekUOD+Ksd+2VfqCTKY1ofo3PfWcyStCuOCAzrFQ5zzb0mgUm/Dz3CWgPDDhXUR4u34xWn5LVlyDJBSvGaD7e5zeuvo15RLy/7SvoLT5oiQF+u+UfLIME4Jon3Y4woSL/sV7LZIbulPXGCypCWsR7Uni2Cnwvo7kd/XxG3Mx1OzM9Q==","layer_level":3},{"id":"c59872d2-5d34-4292-8555-4dc28a9b4d2d","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"策略模块","description":"strategy-module","prompt":"详尽描述交易策略与投资组合优化的实现体系。阐明Strategy基类的设计原则及其与决策系统（decision.py）的交互方式。分别解析规则型策略（rule_strategy）、信号驱动策略（signal_strategy）和增强型指数跟踪优化器（enhanced_indexing.py）的具体实现逻辑。说明如何将模型预测输出转化为具体的买卖信号，并生成订单流。涵盖成本控制、风险预算分配和动态再平衡等高级策略特性。提供策略开发模板和调试建议，帮助用户构建自己的定制化策略。","order":5,"progress_status":"completed","dependent_files":"qlib/strategy/base.py,qlib/contrib/strategy/rule_strategy.py,qlib/contrib/strategy/signal_strategy.py,qlib/contrib/strategy/optimizer/","gmt_create":"2025-09-27T10:34:17.044601+08:00","gmt_modified":"2025-09-27T10:55:54.654663+08:00","raw_data":"WikiEncrypted:vncIuVLs5gKBPQDvkV46pFSzFyvWj3omU/sAn5JCycfAkK1XsnLsiB1WxvhBqowwj/dcI8MaAOmU/VmbJ08b6+Oain5mr7Q6QAyF4ihgvzGtd3GSX5j/oxSqiwOI7n9wjr9eUyIg+EFWRjkGUCPwR8HlETD/L/PK+q/kbrfm5N56afhNtQVyjhHEax1OiE6vRtioogzNOhM/i1XShIcVQA9U3oVpasNVuZurRM7Aiwku2rSh487Ysc7fXJCst7N006dyeaXSZxfi8LbavXFh+9uzXCnwvgm18fB0BrXEPy3jWYeWUfWwua8Fb3DmXmeG+ud0jagKnnwcjug44AD/rnigLal66dtKeJxWlMWzEI7kUrPdlgtAOxQy0S2Z6xBFY2LD5qzAiRhtSe0egMVjqnPW1fZqyjmQtWAhyc/oTrcTq68EBwe6M055rhl5uok87kyJupc2Rd9jNmujj9Al/4IF2eZCiMwEyAvL9nKbyLp3amFWWyq9X+zrMxtlT7B8py4j7e39C2Uwhk5DcZg2HEmh5Hk6kbZEju0364C1xnzCKWvCQHJ7nofBpnkXSRACrBw1sA0eiNw/LUw8ZhU0XiShYcY8wv/zDm/3FnHMeOuAhoE7TULJi9EmyjU7ixRtmwXoya8O+WU5EDiTkgBB7RnrDuYRWk+1UIGgpX1oE7uY320BbybQrWsbN4OiXsj1CCc7Oagp8xAjnF9t+OmLxIjCpfQJV8FZoL2w09AdahM98h/EYa2qlbRFB1Qbyx7KGB4KOMKMxdlH9TUu1NlNLS4ioO0B/hBfAG8Ag+04MDJ786NxySafTG1nk0MQJ/mwAkqcg3y5SJLCuqkH9fT4MFsYLRBGBDjeX9+uP1WazYGRmJ03cPLBsygbPxROsC9h+EJrrduUdlqLkhuATmYPNqhFdDCtRzmZicrq9E29w9uoD2oILwfxiXqJs/lTaltySMjbYGNiVwqGrxFsvVSQF+IY9ID8fJqq/2WXUpo031PYfAZBVbebhVsO7XhZqVvh2+fuScPwLEkMhxfUMS03ZR8MKZwI/ogwq8TeNiFm9QSIHIZLX1f1iNR+BNKUc+45a/oXHp6aSAiSMWKPGQURiTi15WUB3yPWdix4rykvoMj8BeV2RdPo5M95LOOOJyr6rVX1wppsvEM92VuxgPGeFI9rKLeCjS0glbl/3jXgL+l5BkNgcJ+ScmoVkVr3bxn/YBW02o849yunC20doMhx5LXX70m0Z6LIO3wxNktcUochsSxQ9CyclG8IveqBbF1X1OdnqZForpZI0yrRieMzoNzxM3Ng8xLq0Px6irGNs+I="},{"id":"129bed2c-f23a-4aa2-b364-f810b72537d9","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"强化学习API","description":"api-reference-rl","prompt":"编制强化学习模块的专业API文档，聚焦订单执行（Order Execution）场景下的环境、策略与训练接口。详细描述基于Qlib的模拟器（SimulatorQLib）如何对接市场数据，定义状态空间（State）、动作空间（Action）与奖励函数（Reward）。说明PPO、OPDS等策略网络的配置方式，以及如何使用`Trainer`进行离线训练与在线评估。提供从原始行情数据构建RL训练集的完整流程示例，并强调有限horizon环境、episode重置机制等特殊设计要点。","parent_id":"f0a006c3-89a9-481f-b536-5c95399bd31f","order":5,"progress_status":"completed","dependent_files":"qlib/rl/__init__.py,qlib/rl/trainer/api.py,qlib/rl/order_execution/simulator_qlib.py,qlib/rl/order_execution/policy.py,qlib/rl/data/native.py","gmt_create":"2025-09-27T10:37:00.522932+08:00","gmt_modified":"2025-09-27T11:40:27.599827+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg4Wx7q23weO8TFYlUdMKP93E4feYs4AJye97QHPQeDDflyto2AOEFtD0weG/V315IUM0fTFJ+nFZWTzvXElGIslAjD1DPE4EzvnwTjlge3f2PBFLdq0dyDaAujtx7dhbY9AJrKdr02wpfIX+0A0hVoLLSY40X+kIMzDXoSKzorYUQsn0sMou8DNH36kS77ucZG2PmOnTmmg2VLtu/nnVypmol/KXU3rf7I7jlP8t5RtSl4TG2ObfCVr/lUF9T6lmqSaiJUfQAPpKP7k7FDygcuZlLtl3oXJgZqJxeo+GaX3rFyAhHcifKgNg/dJNqnTTRiHmQ5eKupsW+yhgt394FEaTn2V1ePGMdQo/8vmEJXFDunl0nJ8OinY7OF+9UGr12PVZwRO17snT3YjR73oB7gS7ilFKv0vWJUilEUkMv1FjXKScYhRRSeXTWdtLzYRr+XkTzHo4UeJKjvRrqexdliOs4C4+xTAeioivNN3KZP7CyygGYYoutMpojmM23CbXx8iodpSyOSVYdnsSE7+U3UROF66xJM0d6pkCzHnhI7zFGMQ3X9D3j0zdFxZxHUqXXYLdvWgFmMWduXr1oIZZqlZULl1B4yaW/4osfUNQR8ICvIaY5EAOwWBxp+S8qek2Ffug7AnY/2WQjlggswLoRYmhK+D5pCZvMj+ml7EYaYbZMXJtqgzZEBiijKjBt7Rbd1GjI36t6Ix9ar0aOynjJStldYXRIIgQ1X6itnJqAGuVw3gGMILd7+la1d5jlPF1rtHii1hJWsUjsREMeN4whbKeKQE5/eDlvS/0oRZSxRKU16vfPaF5USvMCBL2YeFenWgKDvr+QmHQMOgpfsCPNoox+0J8VVV3HtnYOw9QMVBn5G+vsE69fYKqEn6zomedaaDN9ZwVazxfLgrvVBOvAY2TgGl3fCcSQqH3vx9JSrdPb+fbV8Gni6Trb828Raysn6pmFzi6n/Vls+u5LVnu18niV95/qWUSgD4Fq4AsJAgx/exELFy3bPxoNm+wJkSMoNhI6lsKSQIpN+xf6ONx7is6KtXuQ+7OtqyFEaySjYw150loo+sVAkw3RQ28nxjP4Inji7PZxrVpOmklMJghzgST5yraSvt2pJnSaeAu/8fLw1TmyQ8JYJWPjrq6vU+2d21m370pjOMzczIIN/+fqKfi0TCxURCf3NxmV+L2xZVz39ort7CRO8OBv3jIp3j/dmgDtK9Wc56Ys9+7EfTyafg=","layer_level":1},{"id":"c1615506-454c-4d28-91e9-d3a5c2e4b021","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"工作流管理","description":"workflow-management","prompt":"全面阐述实验管理和工作流自动化系统的运作机制。解释Experiment和Recorder如何与MLflow集成以实现完整的实验追踪、指标记录和模型版本管理。描述在线服务模块（online/）如何支持模型的滚动更新、预测服务部署和实时推理。结合run_all_model.py示例说明批量运行多个模型工作流的组织方式。涵盖记录器生命周期、资产保存、元数据管理以及分布式任务调度等关键方面。提供生产级部署的最佳实践和监控方案。","order":6,"progress_status":"completed","dependent_files":"qlib/workflow/exp.py,qlib/workflow/recorder.py,qlib/workflow/online/,examples/run_all_model.py","gmt_create":"2025-09-27T10:34:17.045408+08:00","gmt_modified":"2025-09-27T10:58:34.140782+08:00","raw_data":"WikiEncrypted:5TfoOZUXi2pU1NStYas3S1WH1ckc6IJLa7qn4ne9HJZesbdQ3TXvg0Bsthtlx9u3JuqPiyfVULuRiElb0bWOw83VhGKAtzofRd0P4hJrMzGCSovNEepVEVYHnbK75nBwFf57/F/TAA09Lq0uZz7fLrpsSu30/fii/QdTPJLCHlTnK1pXcwRPSfwtjjW1vPAwolp7XLpl/IdlZp0zZJyakqbDwxTgteryOtZYM942umk0Q3Rcf99013WN4IhpNKyOPd8GqFx1SQMjTrXuFjOi2M1UjeB+kJlffxyeNEfCa2aTqxHJ0N19YL4W/Z7ggR1A5wKNtR0S9UWBdIjIb0VoNKlMtbGAYLZn8m3pm5iy8fMHBPtNGaC2dLPPn5giMkztH0rrwS3PlL8gwyE/ewNP1kCG5gxa2V59VJSf8YrvaoRqzdw9etWf+WeUvoKYPro85/zEWiGunbo0naoP4LV2ISMAQkevdcNTUITtanCDrfPzoGbpFpvdiCBwG3qKDfSBIVz/FSQfI3NBT5+RmDxYMM82eexmYu8E6b6DSQ74YtXqfaavwLlXHPpiOsUFtKAngAcj0aSUCM1cq5lg7TylkuwgOi+YJsDNVRfND/c9Pealqd/ZCw2pae5AvsZQaleUW5NCCenqYmELCGk6LIYcaiVVnd7a0dYgTvNeMtxs3InttG7lpzqsGUtzgiY0/gbSxEXfKjvHAW/bWTAmxthX8zBX7n9tsvK67IEXjNilkB+xYAtCysYk45/v1nx1UA1l/dZA2Az+wG3VVUFKCau93gmDW8KQXDlac4IQelXvofZF3YNlZD8NcnShbI7cipUwLAfyyAAIn2Xn5JO5VqE/Jab6+96BiY/PItyVZ7uuCQe+Dz8mUMCwgXRQAtUdWsfK616LGG4vI5TSd+0Z6nwMfXNIk5VcQotglyef2/lab/WzNpEfJvjPr0dcUzpPGLJ1IseTCpZjlr8pdV7tRKYmmvsxOBnfDTdiuAzob2D1dZMvJMK5MTTq24NTAYdo48XbtuBbDC3tUQ7ykB89vzJu5zgJq/uRZb1mfhVE4Aw4tFebUEeI/uZMvAWkgZuaFJWKzKpvkWoXov4lUZVXtyaoqtbjJat+5aeFfAlSW2o6+fzewPAHkdryV61d7SRSa1WQI4/AzYCEFNTApXqk/sE7DtCk2tjyA38l2XCs+gcaxGHDjwpt06inF7peFQNMNoi7"},{"id":"2dee8519-8300-484a-ac75-ed4178778c13","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"工具与辅助API","description":"api-reference-utils","prompt":"整理实用工具模块的API文档，涵盖序列化、并行计算、文件操作和模块动态加载等底层支持功能。重点说明`mod.ModuleType`如何实现插件式架构，使用户能够注册自定义数据处理器或模型。解释`get_module_by_name`、`save_objects`、`parallel_run`等高频工具函数的使用方法与性能考量。提供安全反序列化实践指南，避免pickle漏洞；同时给出多进程资源竞争问题的规避策略。","parent_id":"f0a006c3-89a9-481f-b536-5c95399bd31f","order":6,"progress_status":"completed","dependent_files":"qlib/utils/__init__.py,qlib/utils/mod.py,qlib/utils/serial.py,qlib/utils/paral.py,qlib/utils/file.py","gmt_create":"2025-09-27T10:37:00.523492+08:00","gmt_modified":"2025-09-27T11:43:34.052803+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgzoHgLoux831Pur05SO18iwTERsQ4Sn6aIEpCzvvf+nFKkhUJkxyOEQYiPYotjS/sdc2AZ+ZKMYP8RqLIVdqG+KhevGcYvbeut4oIfezUWa5pDsORipYQMK74QcMHMEdM+qHFW2RXw954LTlv1RZwyT0ultUOaCc02Wpm94oOb3y8izrqg+W08wufcYL5+cBkaoUnAB/KixJZQynf8oUhx9T8xOb1HNpkpl/KuzLO29sKf5VLOMTlBDP3SjFiywKNycpTWcp914iD71W/bU8im03t9UnzAOaHXAdDXpgDHY+lFOjjGIiKZI5BJ/VMIUQRe0ozPNc18cYaxZ+mdjv2cmE9RBwz+Ysv8q50IgMNtGDdiUEjuirLvfudtcCkn9+9XioPlBv6/wEt3d/siIOhEB3hnUoEheeocW2otjFXR6XUYc5ZidIjwVJkLnKJrJ7YtChBR6vAmmAh0FAq81Nbmrbja2Y0oGCy2f6Er40Kdt2hR9XMn+wKa8zyNUr3/eG/5HfGBL5D1Ak+Ttco7/JG3LBOww0aEmzM1AywyrkCjUiKhdZ/ykzT+g0Yey8hJOfi3T+66DYTwFfmsTMahJ9TjaigcA2JXTjTgNtBIjt4wkf8GFSaOo2rP7feWdrfks9HB8OFdLdOyyDkyr2ykzKMrK99F7C4Ihhs5X6kZG2WBgMhc+3seUCeAcpHo5aUhk+p4HtVVnMXHmwlG7p3iUAvrXkpqaE/OiKcqfDY19yZ8OrNuOO9/UIju72AGIbalJMVsewc/wNKovukgIjKuwRcGOCLlBLo1Bgv8NU78XImBLDFsVjNcZe14vpiOYOYSboUG89SlnGnaeVpS4zzqppmJIE7JYC9/Weezx2GVGKkoN+MGWHwnfLS5RQw0orY8pmzwWjpmAOu4zxcWWDetuuto9GlXBHNJ9QkxwOOOB0AUgiSTx2QvWjfS+NfEVH0YtOq1KU0zt/5mAUiwhgv/Gb8S8wLoDYNc8+KOBts9kE+ybDZgpbnK54+3phnwg4PCozy/HDBLqYUoynmQN6p08w+UexgarsmeRgJPAVi/XcdU5936qAEWohgzYTUE23g/58YQ==","layer_level":1},{"id":"ce98115e-5189-4b0f-a4a9-025618b5ef1a","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"高级特性","description":"advanced-features","prompt":"深入探讨Qlib平台的三大高级功能领域：高频交易、强化学习和元学习。针对高频交易，分析highfreq_handler.py和highfreq_processor.py如何处理毫秒级行情数据，并支持复杂的事件驱动回测。对于强化学习，解析rl模块中的环境模拟器（simulator）、策略网络（policy）和训练流程（trainer），并结合rl_order_execution示例说明订单执行场景的应用。关于元学习，说明meta模块如何实现数据选择、模型选择的自动化决策。此外，介绍嵌套决策执行等复杂应用场景的实现模式。","order":7,"progress_status":"completed","dependent_files":"examples/highfreq/,qlib/rl/,qlib/contrib/meta/,examples/nested_decision_execution/workflow.py","gmt_create":"2025-09-27T10:34:17.046562+08:00","gmt_modified":"2025-09-27T11:01:53.745209+08:00","raw_data":"WikiEncrypted:qSUmbhu+RuqdVWUcJ+wGd4e+ZlhOlcU0FTi9snO9I31pFDv5klxFooIMNUPcliqF/M2nmJ8YIAXOaLMHKbF3NmjcvT/jJCcv4YdlDaEv3cWOjFFEBgo424F0hd4mxMi6YSJNtwqosy3FlCBitCoikuyKTQ1Q7NbzDBql2fnJuMjL37ZnKoOs9cCRIFjYyVZUWnTN2geqbIrSee9ExAleCj3IFwBasySIbb3OGXwACjMQreDh5c4rjMIZ0HlMzmXAqgZ4hzEXvwkh0uf8G+DKAdWibTQlBSIifS+bDwj+ZZym43pJJCSIkU/UxXf+V0IdwfUPk/VvpmoYWSH/taNVNetqyJ15Eg/RyTuN5U7Vovs3XmUfWKHljt1pZiT1xyeYabAqtkSt5qA+IMfIMXLoHqSyuE98VIXObLqnpDMPlKDlKl7YwpACL9QrUOxwRAZim7ubuRh8kkMypQTFY5XCxLNW3hB20PPH6iZflibGFxRDE1cG5gKxaiOPXA1HhworsMuVEYp8/erYSjS5g3K5Ifzlr4/qHSPmfNtr3KICKwaJQ6GW9cqAL6EOfKo6xyYV2Z6YAT/PT/PaTVH/iz+x1OrcDEMfG4nYFR7UEt0F0+aa1ERqrCG5jyRmAWC4v/N6M1hS+gBhv4oMojuQwCAeeb6NR0HwQB2hktSW/1hd/pFVK+79Dl2iiYyxpgH6qQrPEa8EctrZyO0cIsnrqUm8zhWTdwVbE79OXdnm4By3y4WRW4rW225rCnOqITt8q5uewAQxhfIHNRa0Ff/cRaCF7lMLtSmzi/1WwcZU+4a6nckkr3Q/OovfqZ8wCTqaKXbKmwAGVcAltQRLQ5ECYUGNSH93QbTRTNZtWakgthDMlXDfJyrPtglhvrLkivImlYzbTjWoqGgbXSZV0dNNSiUakJ1ERRvmxZs20pWemX6HzELtsN93j6ME9bcpmQrjff2LvUzrA52EbY2Oo5DefLNcXxDuXJ3Tkq9oY/j5QBRqjw7FqR49kFWREN5JjhCkBImO+6PW5LFivkoStrfEhtOiOCttA78wzob3oMe38rJbjf+rS3jYWpyP4nuQAAONaWLgTF14rO12MjtiHUpQbbEyJNA91fn/iTxGmg30krMCw0SlZvl5G8A8dFf7VxkUox+9mHueQJdwiX8eSJLY9IQWgRB/kQGV/QSU95FX7fLmFpDZNc/jZeUS6NCEOfBdyBNOlcMhOEfQ1VAfJ+l2lKuocVRxxLjIXLm5bF06ov7AG4InRWzOvlpJKOkmxADzX00V"},{"id":"92216737-d741-43cb-a9ca-9366bed85f6d","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"工具与脚本","description":"tools-scripts","prompt":"系统整理所有辅助工具和实用脚本的功能与使用方法。详细介绍scripts目录下各数据收集器（如baostock_5min、yahoo、crypto）的配置与运行方式。说明check_data_health.py、dump_bin.py等维护脚本的作用。提供基于Dockerfile的容器化部署指南和Makefile的自动化构建流程。涵盖测试脚本的使用方法以确保系统稳定性。强调这些工具在日常研究和生产部署中的实际价值，并给出典型使用场景示例。","order":8,"progress_status":"completed","dependent_files":"scripts/,Dockerfile,Makefile,tests/test_get_data.py","gmt_create":"2025-09-27T10:34:17.047369+08:00","gmt_modified":"2025-09-27T11:00:24.146184+08:00","raw_data":"WikiEncrypted:AuR4gEt6SNghGgaHWHfZznsWgEEbGx+uy6DUPPP4NV8e0QJev206B+4XuNHBQFZJH4RM8oCW6fa32QE4nNykjnQgYFhkvR0NWxmfBQf6X3uEA1Tol6QXealKh3W94SyRFFzoVUDiAMa/2+6AVji4VY3h30b2J4tGCif9D6HO+fuIp1swgMZgzgS8IAqHb1R8ufohjkh/0z5876Jt/bDltRolRiFr6hHQhVq5hW1QHZ8868kOTvRgQ0tF5kUJvthpW4tmVt7D5yRjzn847+vOW7arSztxPrcgl0VytFen1qZQDf60bpUEMeVABu6rqcoE9GUaajY4mWFZCkJCS07bLs07AHcBsC3jpMaw+MHZiszl4VvbSn1KNorUGlPMWx6wzO1EsUp+y7p3yjoqwE3HJ3QoGfqSYRRLMcbmzQnBCSucq9iH3rX33nCWfZ0/s+/LIMCuBiyiS4rBlF7ShY8LD/BtI8yfDd9VjiPPLw/L4zo5bLClzoAwQL5gg/tk7jFD4UOUC6uD19g9sczjt9F/vmymcHvfVNLKQJKTWfeCzMn2QthTpqKjH93qqUAQxTx5/FUE7Te4LSWIvpDKruxcF/wAzsvdnzkM3qBOGFd0biEkGKL2q/YKF7tOxKnId34MdlaLXIUvo5PLIcYQs0wIixcvsFXg8GVGDfJTVX/phLS9ZSl8DbEzqmB3MxywgtiztqjDZFSL2QkkQa8Noe2FnmQEZIeGCNOFbgOQd4iI5psQ/Mv73tSjY4YA+JjkKEhuQXl276aGSkQPiSvXY2qHlBQDIz9FGAnCeVod1n/qK5NwwUmUK7Xj0evtfKp/VMbfDlqOuNaPBeaXx1IJXNx2puA7ZuCMlLQjvKzxX1BYirRWIPDaFman89JXQCrKHc2FTL464ujv2ZC4OVc/O0CXYJFoAYwNZ/uxPxM5bQ9cz6AoImRDIVNWVhCaVaZgv0w1yLmk62UcfVCNTWP5pvVj3isarn1YrS/TlP5cPRrFOLl10lneiMqSbJia5BcNThrn0NDuoJ3fS68G08cB7eue//VrMrshpX3vQobzRIOT8gFCTQtma9bHCp/zSDWrkdrC"},{"id":"f0a006c3-89a9-481f-b536-5c95399bd31f","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"API参考","description":"api-reference","prompt":"创建完整的公共API参考文档，涵盖所有可通过import qlib访问的接口。详细列出__init__.py中导出的核心类和函数，包括data、model、workflow、backtest等模块的入口点。为每个API元素提供精确的函数签名、参数说明、返回值类型和异常情况。利用typehint.py中的类型定义增强文档准确性。解释配置系统（config.py）的结构和可配置项。说明mod.py中的模块注册机制如何支持插件式扩展。确保文档结构清晰，便于开发者快速查找和正确使用API。","order":9,"progress_status":"completed","dependent_files":"qlib/__init__.py,qlib/config.py,qlib/typehint.py,qlib/utils/mod.py","gmt_create":"2025-09-27T10:34:17.047957+08:00","gmt_modified":"2025-09-27T11:01:18.196496+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg+WPNa2UHH7yP2PPjE4/OPkUytUlTK+XtmhJqDmkbtEH0Tyap2QGufhdR5Xt/kLwoKqwJhTkpGouWGx41MbX4mXcC93qokWfVkygvncWyZljQWyhM6S4bs3aapngnGKHyhOEbLtKgLStuquQAreoYCbgOm9Khpycs6tNh42QzIgT6nqHW/IAHTgCdhwzH4ZT2y+YVjHd6TN6eADL6jTu7J5Yfc4u39EGyR4LKuXaFbGx0vzaiN8q20oY9wF/DNUUbTiqJrGqJUGe6OYWAQGn4/pYxlGZj8e51d7MgUtQAdAhhEXd7awgTiPZnbgVOiAIenc7Q32P9grwqpYir7sb32cv06fMnqMDssK+bfGlhhEl9fwqwuZNtY0cSZpwpZs1YOXUaBa9J8w2pWn1AKQAj0c4PWNSYEigdmXD3s+F+VEjByewa+Izww2627PxBisLbb/HDxgAKP2PxJM9iC/SA7Hk0IMy0zlen71MTIIXssLSlYKaSCtdwHJEA4jD3tDToUa2JWn+XKRqDt0PEFxauF8ILYEkK42I6GuTS3+YPFdUVeT17Z7i5v+Zzj7rlWezF917uVS15agjQ1l+quqfLyrT9A9TEUfff3YwTCG22UD8ZWl6UqimjeGhzq0Pv+Hkwt8m8A9DA/6bP1jHhZKssGgi7WjdXFe1Ctpu/bFTxOj+Y/X+NPT71wZZfaiZdoz9UA/gGpRFiOzN6wwBEb/8NUSWL1A//Jg/teM1QxoLAkrRHAq3fVK+juXfTxUTaqdRm9KxhWSVQxYR0byRs0ldX+jARZC0fRRYYYmnjHNrobnJbfUIhbNbqvUS4wnf4ep82hJgErP7HxvVjEIImuAzYWl32Rt9Zz9msjRVYM/9F6pIu6oH1WxTBghzOKpKCSZbCGK0OA+n5QD5ff/u1sU4sADPCC9BzUR2vZPyNfsaR8TUnKaoX15qfDFjjsIzLOi0Rfpa3hIEDSdpWuAjAbdqDMKM3GjOW/CH2GRBYuofOOTxGpEJCi9Ve12xCkmqyo6itJO0GY6NaR+HYBXOEel2+9i6wHD+CBsPIL3BN774KY9ezRa0FUdaeZfcg+vttoT+ysCe+RvZ7RoLdktTUQqTsboQiS2eZEYURYmf5D4yJfbkcM7wGskdZsKF3gYVp6Wo51i0T8xMl/ye8WlOopFUcacYLRVXycZ0s+ivZl2o60km"},{"id":"5f30fbb8-df8f-4f6b-b56d-e2f0335cd9c7","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"贡献指南","description":"contribution-guide","prompt":"编写详尽的开发者贡献指南，明确代码标准、开发流程和模型贡献规范。依据code_standard_and_dev_guide.rst中的规定，说明编码风格、测试要求和提交流程。解释如何添加新的机器学习模型或数据处理器，并确保与现有架构兼容。强调单元测试（tests/目录）的重要性，指导贡献者编写有效的测试用例。概述Pull Request审查流程和社区行为准则（CODE_OF_CONDUCT.md）。提供从环境搭建到代码提交的完整路径，降低新贡献者的参与门槛。","order":10,"progress_status":"completed","dependent_files":"README.md,CODE_OF_CONDUCT.md,docs/developer/code_standard_and_dev_guide.rst,tests/","gmt_create":"2025-09-27T10:34:17.048499+08:00","gmt_modified":"2025-09-27T11:03:21.222758+08:00","raw_data":"WikiEncrypted:BxDZrTl5aGXx1MaECOB3Neyk0qJpNGfyo5P4oy8YSOOJ7KO8Krt0w/QnZtYrQ6ghjcjAIq8HmCLW4xESwmQJYiw+u+TDgL1tzX4ib62RUcX9j+mF5Iorn2ShBnkaLhqjorVCC/YuD7c0DLR2GBiksqiHowTtISLNnJTnQLZBB5HWvG3e5WDhvutjagmzaAUOIfdBZOjC7oq4ObnMPqa6tDvKBv+FA1bd5hGi/T5ZwWqnnGVbgUPq+LPZtmQTW0bOAvhb1eQ3+/MTenEcu7xmat406l91P7Jd8jZUE1co5mmS2s7XnoL8I1COR16T0xKkbs0ZJr0dlYiQ0I0UPeUseF8I758bgis+RpLjwKB+jKODpYj/FakjQQUIioS4motEIwxw52jnGLqjWeu0BK/Mjc+PTBKKi0LDLDL1sLWtmYraLPf+bgm7PeOkmaO9d80EVTqKHRytYXzMkoDpFhgThzj9Qy8+hiKehIScreqLZKMdCugUIf9SywthF+b9eJPhgCQwzFILXgtozLw8ExRA61vDeQEVaMOqjJ1dwzm4DKGaX1J8Dd3qpbei04x4pLcUg+suFULtDI39W636PbgF+YD1YWrZkIbHh0HMMGu3nPlnKT8liImuOksrt/9APmHETYhHXLpzC0hW7EnTz0WAiWcCd7MCLfarlpbUBOozCV2q+82PwI/l3eAzIZIZiUUPipOCfK/NBYscVIqqJYzsoOnL1MtLjL0bjtNyo6IoIgIANUrXFjahF2VOl5qLH+aAMQZokvrQonj9X7wUpniWWM5V1OH332bOuorJ8BrKWFgoHXw4HSSxiphnP659+CWU13bSbpppLXJ0NLeZJ/Lb+F/VSE1dJbXXA2qe0AGZB+bgTPTFinBuNSvLQdJt9upxN2MtgSd910V+iefvs0WzGZA89PMoqBPuAuySMuJTkgIy2nzc/oncPZdgCK0J3x1RFOKgvpDVuRHMaq4UAF/15sC8GKM1NaLfOpEGXhVPRp7gcE3VWprNRiMRHFrJQnLPAxL9AwU5dnleayEGT4OLBqdO4u+zgzvf7MEuRPxqvqSPMowJRs/trYDjc9TplVKh3jEUsKAQ5nlLOUJzRx/+0TudFHTw2TDI3F5sjhmqSvOpj6U3HXmT32SqxTSVpOBSD8YT+sLw9lYVi/2A2n3IS9nHFiPN6yCHaLKiL34+ELA="}],"wiki_items":[{"catalog_id":"c59872d2-5d34-4292-8555-4dc28a9b4d2d","title":"策略模块","description":"strategy-module","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"57b82c04-cfe3-42f1-8df9-ee1558c044e0","gmt_create":"2025-09-27T10:55:54.650422+08:00","gmt_modified":"2025-09-27T10:55:54.655022+08:00"},{"catalog_id":"a87540af-7ec3-4c36-b16a-41d9eedae177","title":"回测模块","description":"backtest-module","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"fd83fbf3-e184-49e3-b7ab-8b34c702eb79","gmt_create":"2025-09-27T10:57:24.927819+08:00","gmt_modified":"2025-09-27T10:57:24.931385+08:00"},{"catalog_id":"d2a28939-7c7a-4533-8058-05a082de18d0","title":"模型模块","description":"model-module","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"2ae26fdf-5764-4db9-93ff-24342f4417b1","gmt_create":"2025-09-27T10:57:28.367232+08:00","gmt_modified":"2025-09-27T10:57:28.371695+08:00"},{"catalog_id":"c1615506-454c-4d28-91e9-d3a5c2e4b021","title":"工作流管理","description":"workflow-management","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"46f67cd1-d3bd-4776-97ad-e777e3a23fea","gmt_create":"2025-09-27T10:58:34.136935+08:00","gmt_modified":"2025-09-27T10:58:34.140962+08:00"},{"catalog_id":"92216737-d741-43cb-a9ca-9366bed85f6d","title":"工具与脚本","description":"tools-scripts","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"57a1df55-fd34-450a-8b8e-fed10ce82762","gmt_create":"2025-09-27T11:00:24.142918+08:00","gmt_modified":"2025-09-27T11:00:24.146408+08:00"},{"catalog_id":"f0a006c3-89a9-481f-b536-5c95399bd31f","title":"API参考","description":"api-reference","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"cb8e5643-fbcb-4ae8-8d29-8c284ba0f9f8","gmt_create":"2025-09-27T11:01:18.192674+08:00","gmt_modified":"2025-09-27T11:01:18.196814+08:00"},{"catalog_id":"ce98115e-5189-4b0f-a4a9-025618b5ef1a","title":"高级特性","description":"advanced-features","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"a2343f51-31ff-4af0-bf66-fd438158f5c4","gmt_create":"2025-09-27T11:01:53.74142+08:00","gmt_modified":"2025-09-27T11:01:53.745583+08:00"},{"catalog_id":"2d6c0203-db64-4a78-9f37-7283382ae7d7","title":"模型训练框架","description":"model-training-framework","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"76ba2f38-8a7d-4810-a928-debe4746b88e","gmt_create":"2025-09-27T11:03:11.655287+08:00","gmt_modified":"2025-09-27T11:03:11.659744+08:00"},{"catalog_id":"5f30fbb8-df8f-4f6b-b56d-e2f0335cd9c7","title":"贡献指南","description":"contribution-guide","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"58e910b1-7d4d-4072-8016-9f5b5d635675","gmt_create":"2025-09-27T11:03:21.218882+08:00","gmt_modified":"2025-09-27T11:03:21.223144+08:00"},{"catalog_id":"043cc9d7-ad60-4051-a9eb-6011db75f9bb","title":"数据加载","description":"data-loading","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"b3cb5f56-2e91-41b8-a484-9bb47d6fd5e4","gmt_create":"2025-09-27T11:04:16.193949+08:00","gmt_modified":"2025-09-27T11:04:16.19763+08:00"},{"catalog_id":"e8f0b24c-4064-4eb4-8c05-5b7ae8c0abe3","title":"回测引擎核心","description":"backtest-engine","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"89c56e46-725f-4591-9730-d3618702ce34","gmt_create":"2025-09-27T11:06:46.370282+08:00","gmt_modified":"2025-09-27T11:06:46.374213+08:00"},{"catalog_id":"af87a56e-9df4-42a5-bcda-d53d2b76b95f","title":"实验管理","description":"experiment-management","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"668fb3e4-a5c3-4a86-9b88-64b3976db207","gmt_create":"2025-09-27T11:06:57.606651+08:00","gmt_modified":"2025-09-27T11:06:57.608919+08:00"},{"catalog_id":"b737c40a-3bd3-4864-99d7-ab208252032a","title":"基础策略","description":"base-strategy","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"f87e2e81-8dba-47db-aeae-66851f4e334e","gmt_create":"2025-09-27T11:07:35.245255+08:00","gmt_modified":"2025-09-27T11:07:35.249263+08:00"},{"catalog_id":"38c260e9-2df8-4c2b-bb2a-735ac3c31c53","title":"高频交易","description":"high-frequency-trading","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"723bac0b-5c87-405e-bf6a-3664ba8be10e","gmt_create":"2025-09-27T11:10:06.356575+08:00","gmt_modified":"2025-09-27T11:10:06.359868+08:00"},{"catalog_id":"66a35b0c-ba2e-43d8-a417-168f6e3e423a","title":"支持的模型列表","description":"supported-models","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"6a788a69-1c71-4b55-81ad-0b9249ea5430","gmt_create":"2025-09-27T11:15:13.650669+08:00","gmt_modified":"2025-09-27T11:15:13.654822+08:00"},{"catalog_id":"fdd3ce66-d34b-4d6d-aeb2-55379e51aaf0","title":"数据模块API","description":"api-reference-data","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"d17b79d6-d9bd-4511-b94b-bc5c42907209","gmt_create":"2025-09-27T11:15:33.866281+08:00","gmt_modified":"2025-09-27T11:15:33.870623+08:00"},{"catalog_id":"c10254f8-a52d-4bcc-8567-070acde13848","title":"数据采集工具","description":"data-collection-tools","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"720ebbf1-bd52-45cf-b247-39d14501c050","gmt_create":"2025-09-27T11:16:14.739065+08:00","gmt_modified":"2025-09-27T11:16:14.742979+08:00"},{"catalog_id":"819e201d-802b-412c-89a0-b62419af5078","title":"特征工程","description":"feature-engineering","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"25e7a8d2-9593-45af-a272-07f6e822edf5","gmt_create":"2025-09-27T11:18:03.301689+08:00","gmt_modified":"2025-09-27T11:18:03.30551+08:00"},{"catalog_id":"36ea3fec-0792-4dd4-8cfc-d9f1beed50d9","title":"执行器模式","description":"executor-modes","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"45feaeec-31fe-48b5-9358-f6baeedbddce","gmt_create":"2025-09-27T11:18:55.820338+08:00","gmt_modified":"2025-09-27T11:18:55.824172+08:00"},{"catalog_id":"17fe62fd-e9ec-4729-a465-a47f5667fdec","title":"信号驱动策略","description":"signal-driven-strategy","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"fa82e7f3-bc7b-4508-ba34-88dd67fba7ba","gmt_create":"2025-09-27T11:20:16.767452+08:00","gmt_modified":"2025-09-27T11:20:16.771609+08:00"},{"catalog_id":"509c2946-5c94-4f98-a278-6bd995ab8f23","title":"在线预测服务","description":"online-prediction-service","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"42b18d0d-eb21-47f4-bc83-187883aa77ec","gmt_create":"2025-09-27T11:20:48.486472+08:00","gmt_modified":"2025-09-27T11:20:48.490375+08:00"},{"catalog_id":"fc22d761-6d46-469a-bec6-390b613bbecc","title":"强化学习","description":"reinforcement-learning","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"e6194b42-486f-43a1-b018-35f7220e6753","gmt_create":"2025-09-27T11:21:55.57656+08:00","gmt_modified":"2025-09-27T11:21:55.580793+08:00"},{"catalog_id":"3947ab4b-6bcc-4c8c-811b-1f42c082562e","title":"系统维护脚本","description":"system-maintenance-scripts","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"b4e0198a-a632-4257-9807-52ef3d9b134a","gmt_create":"2025-09-27T11:23:14.582843+08:00","gmt_modified":"2025-09-27T11:23:14.5869+08:00"},{"catalog_id":"b53ca906-fc21-4221-b5b8-74cec2815a72","title":"超参数优化","description":"hyperparameter-tuning","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"58731dd3-4271-40bc-9351-48947147f25a","gmt_create":"2025-09-27T11:24:20.676102+08:00","gmt_modified":"2025-09-27T11:24:20.680051+08:00"},{"catalog_id":"077d6f8e-6b5e-439d-a1e5-1384c4598717","title":"数据集构建","description":"dataset-construction","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"42acae5d-3e25-4051-8ece-70bcf5bf7ce2","gmt_create":"2025-09-27T11:26:13.073026+08:00","gmt_modified":"2025-09-27T11:26:13.07714+08:00"},{"catalog_id":"a50eff8a-552b-442b-9a2c-ccd3fa5cbf4a","title":"模型模块API","description":"api-reference-model","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"8ebaa9ef-626a-4ddc-91fd-59e73d25db3b","gmt_create":"2025-09-27T11:26:21.166746+08:00","gmt_modified":"2025-09-27T11:26:21.169475+08:00"},{"catalog_id":"8a795b0e-5874-4e9c-9e5b-25bac7c2ce78","title":"交易所模拟","description":"exchange-simulation","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"7a7a138a-dc9c-47e1-90f1-3cbcf87b13aa","gmt_create":"2025-09-27T11:28:09.706474+08:00","gmt_modified":"2025-09-27T11:28:09.709611+08:00"},{"catalog_id":"aac29f43-9f90-4c80-9269-26885f4e524b","title":"投资组合优化","description":"portfolio-optimization","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"60149ab0-1a90-4bc3-90d8-aac7282879c8","gmt_create":"2025-09-27T11:29:29.797428+08:00","gmt_modified":"2025-09-27T11:29:29.801606+08:00"},{"catalog_id":"0af577de-8a9a-43d5-b1d9-c6942419c884","title":"工作流任务调度","description":"workflow-task-scheduling","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"179adc5e-e5e0-4be5-a3af-7ea2f0a43cb1","gmt_create":"2025-09-27T11:30:29.798701+08:00","gmt_modified":"2025-09-27T11:30:29.80281+08:00"},{"catalog_id":"421482bd-b97b-4666-8e71-7074ea00e869","title":"元学习","description":"meta-learning","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"b1cf45f5-f62e-4348-a29e-4907c47df22a","gmt_create":"2025-09-27T11:31:04.723821+08:00","gmt_modified":"2025-09-27T11:31:04.72723+08:00"},{"catalog_id":"540792b2-188c-4ccf-8da7-338657bd16be","title":"部署与自动化工具","description":"deployment-automation-tools","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"dfde1a7b-beb6-46cb-aa4f-7d57b342775a","gmt_create":"2025-09-27T11:32:01.274255+08:00","gmt_modified":"2025-09-27T11:32:01.277885+08:00"},{"catalog_id":"290d0e69-84c8-44b1-901e-338444ae5eab","title":"模型可解释性","description":"model-interpretability","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"6a430da4-1e2a-4014-a745-8f8f7462e37b","gmt_create":"2025-09-27T11:33:12.72353+08:00","gmt_modified":"2025-09-27T11:33:12.727419+08:00"},{"catalog_id":"ea52b938-3e89-4573-9ee5-b850fab4d950","title":"PIT数据模型","description":"pit-model","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"c6c8b9ca-963a-4f7d-b902-b9f980aef6d9","gmt_create":"2025-09-27T11:34:06.116823+08:00","gmt_modified":"2025-09-27T11:34:06.120562+08:00"},{"catalog_id":"b5d93425-d9c1-4758-99f7-bdeb6f82febf","title":"工作流管理API","description":"api-reference-workflow","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"e764fdd1-3855-4ddb-9d41-b13d72ea5385","gmt_create":"2025-09-27T11:34:17.333509+08:00","gmt_modified":"2025-09-27T11:34:17.336732+08:00"},{"catalog_id":"a45e1a1c-ff24-45a5-ba1b-2460d5c65266","title":"账户与持仓管理","description":"account-position","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"194f996d-70eb-4f9b-a395-3411a76464ac","gmt_create":"2025-09-27T11:35:33.237339+08:00","gmt_modified":"2025-09-27T11:35:33.241584+08:00"},{"catalog_id":"b6548749-6d5c-468e-8bf8-6fbc56cc074e","title":"测试与验证工具","description":"testing-validation-tools","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"b5d745d8-480a-4aea-b812-43c8a58acf18","gmt_create":"2025-09-27T11:36:41.451595+08:00","gmt_modified":"2025-09-27T11:36:41.455345+08:00"},{"catalog_id":"a3b46aca-1fbc-48c9-bea6-2c2492f97f37","title":"数据存储","description":"data-storage","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"11bd547b-5995-4e3a-8e28-a0f8aed25daa","gmt_create":"2025-09-27T11:38:00.470583+08:00","gmt_modified":"2025-09-27T11:38:00.474787+08:00"},{"catalog_id":"f299c43c-fee6-4271-b5d0-bbbf6846660d","title":"回测系统API","description":"api-reference-backtest","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"a4a3e3e3-7e2d-4262-b534-7f97344db15e","gmt_create":"2025-09-27T11:38:10.25373+08:00","gmt_modified":"2025-09-27T11:38:10.257774+08:00"},{"catalog_id":"05af8451-2db9-4d5f-a70c-45138d95a380","title":"收益归因分析","description":"profit-attribution","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"c960e17b-cf66-47e2-9172-dcd66656ffe7","gmt_create":"2025-09-27T11:40:18.181801+08:00","gmt_modified":"2025-09-27T11:40:18.185821+08:00"},{"catalog_id":"129bed2c-f23a-4aa2-b364-f810b72537d9","title":"强化学习API","description":"api-reference-rl","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"770e1c77-7373-4f0e-95c2-947464fda647","gmt_create":"2025-09-27T11:40:27.595514+08:00","gmt_modified":"2025-09-27T11:40:27.600061+08:00"},{"catalog_id":"353d09e0-c8e7-430d-8bbf-ccb7654da1c1","title":"策略模块API","description":"api-reference-strategy","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"e5fd08cc-0b62-4277-ac16-ea1eba771fb3","gmt_create":"2025-09-27T11:40:33.098018+08:00","gmt_modified":"2025-09-27T11:40:33.10231+08:00"},{"catalog_id":"c9481076-7cb9-470f-97c3-f5e2e363c34c","title":"模型训练核心接口","description":"model-training-core-interface","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"320c8298-49ef-45fe-9160-1f78ec1285bf","gmt_create":"2025-09-27T11:42:34.295169+08:00","gmt_modified":"2025-09-27T11:42:34.299049+08:00"},{"catalog_id":"35c975e3-f685-4df6-a0ee-07b10140a00e","title":"GBDT系列模型","description":"gbdt-models","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"20fd67bd-92f0-41ba-9caa-de5f550fed7a","gmt_create":"2025-09-27T11:43:18.354183+08:00","gmt_modified":"2025-09-27T11:43:18.357628+08:00"},{"catalog_id":"2dee8519-8300-484a-ac75-ed4178778c13","title":"工具与辅助API","description":"api-reference-utils","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"a593ed80-4235-4577-a5ee-9ef619dd6067","gmt_create":"2025-09-27T11:43:34.04899+08:00","gmt_modified":"2025-09-27T11:43:34.05316+08:00"},{"catalog_id":"594a266c-ef43-48f5-bcd9-ff523751ad62","title":"超参数配置定义","description":"hyperparameter-configuration","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"f72675b5-802c-4bde-8003-527276e1bf47","gmt_create":"2025-09-27T11:45:02.317574+08:00","gmt_modified":"2025-09-27T11:45:02.321474+08:00"},{"catalog_id":"1bfa88c2-7422-47a5-bc2f-1846db7a5341","title":"账户系统","description":"account-system","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"f41f27e0-0ccd-4b7c-8d38-0605d3e8b2b8","gmt_create":"2025-09-27T11:47:25.558011+08:00","gmt_modified":"2025-09-27T11:47:25.562308+08:00"},{"catalog_id":"66fdb51e-5633-4980-bf5b-5a453f594ca1","title":"日频标准执行器","description":"daily-executor","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"22ff4161-ed9a-4978-80b1-17064eda1d49","gmt_create":"2025-09-27T11:47:38.853727+08:00","gmt_modified":"2025-09-27T11:47:38.857671+08:00"},{"catalog_id":"e8340bf5-ddcf-44fd-a015-1067f62a447e","title":"核心优化器架构","description":"portfolio-optimizer-core","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"37ad86e5-7747-483d-aa95-2783e59169ba","gmt_create":"2025-09-27T11:48:36.297942+08:00","gmt_modified":"2025-09-27T11:48:36.302406+08:00"},{"catalog_id":"12908bdb-698e-475d-b73b-f6e11dee778a","title":"在线模型管理","description":"online-model-management","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"a4b4a27d-ac27-499e-8bad-08265281c65b","gmt_create":"2025-09-27T11:50:21.725939+08:00","gmt_modified":"2025-09-27T11:50:21.730195+08:00"},{"catalog_id":"6fe713f3-65c2-4213-9b0f-8d1dde2c5929","title":"训练生命周期管理","description":"training-lifecycle-management","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"b20957fe-f99f-4423-a792-1fb55c00b1e6","gmt_create":"2025-09-27T11:51:02.711052+08:00","gmt_modified":"2025-09-27T11:51:02.715201+08:00"},{"catalog_id":"aca40851-d9fb-43c7-b5d7-4b03ced8e88a","title":"订单撮合规则","description":"order-matching-rules","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"a8011235-363a-45b2-a8cd-a70cfa3f3601","gmt_create":"2025-09-27T11:51:17.682814+08:00","gmt_modified":"2025-09-27T11:51:17.687102+08:00"},{"catalog_id":"6bbf8837-7976-424a-be4f-c64d28edb86c","title":"深度神经网络模型","description":"neural-network-models","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"a1fa60be-e7af-42a5-8e8f-0d7ba5aa1227","gmt_create":"2025-09-27T11:52:45.800284+08:00","gmt_modified":"2025-09-27T11:52:45.804939+08:00"},{"catalog_id":"5c16b89e-5d17-4c05-bf1f-529d9c710711","title":"超参数优化引擎","description":"hyperparameter-engine","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"5a8d60e8-49e7-43af-86ad-53cd20d56589","gmt_create":"2025-09-27T11:53:20.493241+08:00","gmt_modified":"2025-09-27T11:53:20.497261+08:00"},{"catalog_id":"5d8e37a2-e264-4386-a540-bd5de2c0d9ca","title":"高频精确执行器","description":"highfreq-executor","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"4c1817ea-b5f9-4b73-b93d-7adda685d29b","gmt_create":"2025-09-27T11:53:27.988239+08:00","gmt_modified":"2025-09-27T11:53:27.992076+08:00"},{"catalog_id":"ed4d9310-4350-4bae-b6d0-ccb8ba8a608c","title":"配置驱动的实例化机制","description":"config-driven-instantiation","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"f89421b5-670a-4f2a-abe1-c0eca651ba01","gmt_create":"2025-09-27T12:03:33.805302+08:00","gmt_modified":"2025-09-27T12:03:33.808556+08:00"},{"catalog_id":"f06dc428-cd94-436c-bfc9-335ea578a7ee","title":"集成学习方法","description":"ensemble-methods","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"d125a199-e8d1-4096-9965-8544be4eb6b2","gmt_create":"2025-09-27T12:03:40.06922+08:00","gmt_modified":"2025-09-27T12:03:40.071859+08:00"},{"catalog_id":"3bbbf0d4-63b2-40ed-87ee-615b2e348362","title":"滚动更新机制","description":"rolling-update-mechanism","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"a33e108b-297a-48c6-9854-28f2ce6919c6","gmt_create":"2025-09-27T12:03:57.544057+08:00","gmt_modified":"2025-09-27T12:03:57.547962+08:00"},{"catalog_id":"ae9a2a80-f431-48a1-a292-4a75b6f5b9f6","title":"调参任务执行流程","description":"hyperparameter-execution","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"b11fde74-4bd2-49a9-9eff-17842552c100","gmt_create":"2025-09-27T12:05:50.547698+08:00","gmt_modified":"2025-09-27T12:05:50.551811+08:00"},{"catalog_id":"763d86f8-f7b4-435e-ad6e-05140152c8fd","title":"自定义执行器开发","description":"custom-executor","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"af9e713a-3ac7-45e1-a52e-03aa6f6ac077","gmt_create":"2025-09-27T12:07:02.459806+08:00","gmt_modified":"2025-09-27T12:07:02.464268+08:00"},{"catalog_id":"0ae0f6bd-8447-4ddc-a14c-f3684a129b66","title":"滑点模型","description":"slippage-models","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"ac9aeaf0-dd9d-42b5-88ed-77e33a385f6e","gmt_create":"2025-09-27T12:07:14.189971+08:00","gmt_modified":"2025-09-27T12:07:14.193887+08:00"},{"catalog_id":"103282ec-7831-4657-8318-d9fafafe4fae","title":"交易限制处理","description":"trading-restrictions","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"785f38f8-6adc-47ff-b84b-146f32a1989e","gmt_create":"2025-09-27T12:09:11.591524+08:00","gmt_modified":"2025-09-27T12:09:11.596079+08:00"},{"catalog_id":"bb76881e-d26f-41b8-a58c-cc38ac34790f","title":"交易成本计算","description":"cost-calculation","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"983bae29-dcfe-455c-83d1-c2365b038253","gmt_create":"2025-09-27T12:09:17.601765+08:00","gmt_modified":"2025-09-27T12:09:17.605436+08:00"},{"catalog_id":"855f6509-8186-434f-9336-4134d6e1c9a6","title":"核心执行机制","description":"highfreq-executor-core","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"a1c33804-e302-4b79-847b-29caae87fbdc","gmt_create":"2025-09-27T12:10:16.440079+08:00","gmt_modified":"2025-09-27T12:10:16.443569+08:00"},{"catalog_id":"49546360-cd8e-4bc4-9de2-f1c0629aa5d1","title":"LSTM模型","description":"lstm-models","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"e131f93a-c799-4c30-a094-0600f5ed5d57","gmt_create":"2025-09-27T12:12:09.141685+08:00","gmt_modified":"2025-09-27T12:12:09.146076+08:00"},{"catalog_id":"d919344c-2508-4ba7-abc6-74ba78558be6","title":"执行器接口规范","description":"executor-interface","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"0e92b56a-7cb8-47d2-9c04-879769b57e25","gmt_create":"2025-09-27T12:13:46.364358+08:00","gmt_modified":"2025-09-27T12:13:46.367818+08:00"},{"catalog_id":"7bcaf13b-a41b-4f2d-bba5-83dd34b350b4","title":"限价单撮合机制","description":"limit-order-matching","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"0e609b74-dffb-49fc-ac24-e2cb98be6a81","gmt_create":"2025-09-27T12:14:01.947138+08:00","gmt_modified":"2025-09-27T12:14:01.95045+08:00"},{"catalog_id":"8bfdb83a-aa3a-492b-9ca4-be69b8428558","title":"涨跌停限制处理","description":"limit-up-down-handling","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"d91bd2c0-5c9b-40e1-b18c-e6f374ecc0d6","gmt_create":"2025-09-27T12:15:57.834796+08:00","gmt_modified":"2025-09-27T12:15:57.839161+08:00"},{"catalog_id":"d636a2d0-0fb0-4e3b-877a-883a1d1cad63","title":"累积成交量模式","description":"cumulative-liquidity","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"f2584071-0123-4762-96e1-7995575ec722","gmt_create":"2025-09-27T12:16:31.206091+08:00","gmt_modified":"2025-09-27T12:16:31.209373+08:00"},{"catalog_id":"9a3cca5b-e2af-485e-8ed2-579b8ad16c3b","title":"高频数据集成","description":"highfreq-data-integration","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"b7d12a1e-1cf9-45bc-b159-230efcb31ca5","gmt_create":"2025-09-27T12:16:55.380511+08:00","gmt_modified":"2025-09-27T12:16:55.384569+08:00"},{"catalog_id":"653de15c-5817-404f-8ee3-4b612961b53e","title":"GRU模型","description":"gru-models","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"6cfe768b-e3be-4b38-bd4f-493e4624ae86","gmt_create":"2025-09-27T12:18:18.747633+08:00","gmt_modified":"2025-09-27T12:18:18.750898+08:00"},{"catalog_id":"4da9a75e-5505-48a7-a549-679650bc6aee","title":"市价单撮合机制","description":"market-order-matching","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"bd9ca7df-728b-4b84-94c4-227975c8162b","gmt_create":"2025-09-27T12:19:19.837645+08:00","gmt_modified":"2025-09-27T12:19:19.841152+08:00"},{"catalog_id":"70b916b6-1606-4125-820e-91e1f0524d8e","title":"外部系统集成模式","description":"integration-patterns","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"e34b7156-e33b-4b1c-b7f5-59a4af98058f","gmt_create":"2025-09-27T12:19:38.876449+08:00","gmt_modified":"2025-09-27T12:19:38.880144+08:00"},{"catalog_id":"bd4fdd94-a201-4f97-a801-731ccfb5e023","title":"停牌状态处理","description":"suspended-trading-handling","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"383668db-1ef2-4b74-a0b0-9e05902b56c5","gmt_create":"2025-09-27T12:20:41.542096+08:00","gmt_modified":"2025-09-27T12:20:41.546293+08:00"},{"catalog_id":"b858e97e-424a-42d7-b6e4-e7b42eaef21f","title":"瞬时成交量模式","description":"instantaneous-liquidity","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"7af442e4-ec6a-4e47-a351-9a609561f6b4","gmt_create":"2025-09-27T12:21:15.046811+08:00","gmt_modified":"2025-09-27T12:21:15.049957+08:00"},{"catalog_id":"7713fe51-6c7a-4bb2-bf01-8a51c8d17321","title":"配置与最佳实践","description":"highfreq-configuration-practice","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"7bc6a925-5728-405f-88f6-68a17609745b","gmt_create":"2025-09-27T12:23:13.627477+08:00","gmt_modified":"2025-09-27T12:23:13.631257+08:00"},{"catalog_id":"604c91f8-a45f-421c-9850-3f7805d47461","title":"Transformer系列模型","description":"transformer-based-models","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"584d0247-a0c9-4a06-8165-0bee6a644af4","gmt_create":"2025-09-27T12:23:25.237278+08:00","gmt_modified":"2025-09-27T12:23:25.240839+08:00"},{"catalog_id":"944070cf-6853-4f77-9458-ee7ebe06dca1","title":"高级执行策略实现","description":"advanced-execution-strategies","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"d1ec3261-ab76-42c2-aaac-39a93d6eb772","gmt_create":"2025-09-27T12:23:56.696742+08:00","gmt_modified":"2025-09-27T12:23:56.70076+08:00"},{"catalog_id":"e8ee7688-4515-44e1-bb0f-750d98f9b765","title":"图注意力网络（GATs）","description":"gats-models","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"8d80a15a-6d0e-4435-9b3d-af8a48afa84f","gmt_create":"2025-09-27T12:25:24.626771+08:00","gmt_modified":"2025-09-27T12:25:24.630567+08:00"},{"catalog_id":"4f001765-24bf-4912-bd0e-a98d8a4907e6","title":"时间卷积网络（TCN）","description":"tcn-models","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"0de4e0aa-92e3-4537-b34a-ef1480e6205c","gmt_create":"2025-09-27T12:25:48.929581+08:00","gmt_modified":"2025-09-27T12:25:48.933443+08:00"},{"catalog_id":"1199927d-238d-49a5-89bc-4314faadcf85","title":"调试与性能优化","description":"debugging-performance","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"7b8fabe2-7f9a-4888-bd98-43603fb403c3","gmt_create":"2025-09-27T12:26:03.078074+08:00","gmt_modified":"2025-09-27T12:26:03.08214+08:00"},{"catalog_id":"3a0f0fd2-9c35-4169-9198-8ab6fee0ff3a","title":"标准Transformer模型","description":"standard-transformer","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"c0597fe4-fd33-4478-83d2-339381b0fad3","gmt_create":"2025-09-27T12:27:17.168964+08:00","gmt_modified":"2025-09-27T12:27:17.171028+08:00"},{"catalog_id":"bca65967-5165-40a2-896e-151887d70ff6","title":"LocalFormer模型","description":"localformer-model","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"c092b022-a042-4aa1-8b33-d3fa7ca768f8","gmt_create":"2025-09-27T12:28:06.675125+08:00","gmt_modified":"2025-09-27T12:28:06.679083+08:00"},{"catalog_id":"a392b60b-87b4-455d-b113-17105ad33931","title":"ALSTM模型","description":"alstm-model","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"1634d1e3-e82d-4175-8062-a7d901f75809","gmt_create":"2025-09-27T12:28:57.936478+08:00","gmt_modified":"2025-09-27T12:28:57.94045+08:00"},{"catalog_id":"b17ba87b-04e4-40df-96d7-c15bdb0978ab","title":"快速入门","description":"getting-started","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"92824eb3-e01a-40df-a31d-a21ba813a7de","gmt_create":"2025-09-27T12:31:20.119748+08:00","gmt_modified":"2025-09-27T12:31:20.123462+08:00"},{"catalog_id":"ee2e30e0-2b00-44a7-a86d-d24456832772","title":"数据模块","description":"data-module","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"4529e857-9d92-41e5-b4ba-5625ee3480f3","gmt_create":"2025-09-27T12:32:00.778705+08:00","gmt_modified":"2025-09-27T12:32:00.783121+08:00"},{"catalog_id":"0893498a-d1d2-4fb9-91ac-3a14c401cb68","title":"增强型指数跟踪策略","description":"enhanced-indexing-strategy","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"b4a3386a-084a-4ff3-80ee-bc59140f8b3c","gmt_create":"2025-09-27T12:42:37.750691+08:00","gmt_modified":"2025-09-27T12:42:37.754326+08:00"},{"catalog_id":"e6f41d57-0a1d-4daa-9003-056b3ef361c5","title":"持仓跟踪机制","description":"position-tracking","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"a915225e-a4cd-4e7c-9fcc-78dc33c449da","gmt_create":"2025-09-27T12:43:52.321276+08:00","gmt_modified":"2025-09-27T12:43:52.325281+08:00"},{"catalog_id":"9e358b07-2b8b-4786-9cdb-dd3d08eae06b","title":"项目概述","description":"project-overview","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"69cda1c4-d5cf-4f3a-9d4f-88aa386fb081","gmt_create":"2025-09-27T12:44:41.997608+08:00","gmt_modified":"2025-09-27T12:44:42.001544+08:00"},{"catalog_id":"fc288f22-3853-4393-8138-199e00b56885","title":"流动性建模","description":"liquidity-modeling","extend":"{}","progress_status":"completed","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","id":"da15e0ba-4fa9-41b8-89d3-2f8a9408b36a","gmt_create":"2025-09-27T12:45:02.47687+08:00","gmt_modified":"2025-09-27T12:45:02.480595+08:00"}],"wiki_overview":{"content":"\u003cblog\u003e\n# Qlib项目综合分析\n\n## 1. 项目介绍\n\n### 项目概述\nQlib是一个开源的、面向人工智能的量化投资平台，旨在通过AI技术实现量化投资领域的潜力挖掘、研究赋能和价值创造。该项目支持多种机器学习建模范式，包括监督学习、市场动态建模和强化学习。\n\n### 核心目标与功能\n- 实现从研究创意到生产部署的完整ML流程\n- 覆盖量化投资全链条：Alpha因子挖掘、风险建模、投资组合优化和订单执行\n- 提供强大的基础设施支持量化研究\n- 支持多样化的学习框架和模式\n\n### 目标用户群体\n- 量化投资研究人员\n- 金融数据科学家\n- AI算法交易开发者\n- 金融机构的技术团队\n- 学术研究人员\n\n## 2. 技术架构\n\n### 组件分解\nQlib采用模块化设计，各组件松耦合，可独立使用：\n\n```mermaid\nflowchart TD\n    A[数据层] --\u003e B[模型层]\n    B --\u003e C[策略层]\n    C --\u003e D[回测层]\n    D --\u003e E[分析层]\n    E --\u003e F[在线服务]\n    \n    A --\u003e|数据处理| G[Data Provider]\n    B --\u003e|模型训练| H[Model Trainer]\n    C --\u003e|决策生成| I[Strategy Engine]\n    D --\u003e|执行模拟| J[Backtest System]\n    E --\u003e|结果评估| K[Analysis Report]\n    F --\u003e|实时预测| L[Online Serving]\n```\n\n### 设计模式\n- **工厂模式**：通过`init_instance_by_config`动态创建实例\n- **观察者模式**：实验记录器(Recorder)系统\n- **策略模式**：多种回测和交易策略实现\n- **缓存模式**：多层次数据缓存机制\n\n### 系统关系\n```mermaid\ngraph TD\n    Client[客户端] --\u003e API[Qlib API]\n    API --\u003e DataLayer[数据层]\n    API --\u003e ModelLayer[模型层]\n    API --\u003e StrategyLayer[策略层]\n    API --\u003e Workflow[工作流管理]\n    \n    DataLayer --\u003e Storage[存储系统]\n    ModelLayer --\u003e MLFramework[机器学习框架]\n    StrategyLayer --\u003e Backtest[回测引擎]\n    Workflow --\u003e Experiment[实验管理]\n    \n    Experiment --\u003e MLflow[MLflow]\n    Storage --\u003e Local[本地存储]\n    Storage --\u003e NFS[NFS网络存储]\n    MLFramework --\u003e PyTorch[PyTorch]\n    MLFramework --\u003e LightGBM[LightGBM]\n    MLFramework --\u003e XGBoost[XGBoost]\n```\n\n### 数据流图\n```mermaid\nflowchart LR\n    Source[原始数据源] --\u003e Preprocess[数据预处理]\n    Preprocess --\u003e Feature[特征工程]\n    Feature --\u003e Dataset[数据集构建]\n    Dataset --\u003e Train[模型训练]\n    Train --\u003e Predict[预测生成]\n    Predict --\u003e Strategy[策略决策]\n    Strategy --\u003e Backtest[回测执行]\n    Backtest --\u003e Analyze[结果分析]\n    Analyze --\u003e Report[报告生成]\n    Report --\u003e Serve[在线服务]\n```\n\n## 3. 关键实现\n\n### 主要入口点\n- `qlib/cli/run.py`: 命令行接口主入口\n- `examples/workflow_by_code.py`: 代码方式工作流示例\n- `scripts/get_data.py`: 数据获取脚本\n\nSources:\n- [run.py](qlib/cli/run.py)\n- [workflow_by_code.py](examples/workflow_by_code.py)\n- [get_data.py](scripts/get_data.py)\n\n### 核心模块\n- `qlib/data`: 数据处理核心模块\n- `qlib/model`: 模型训练与管理\n- `qlib/backtest`: 回测系统\n- `qlib/workflow`: 工作流管理\n- `qlib/contrib`: 贡献者实现的模型和工具\n\nSources:\n- [data.py](qlib/data/data.py)\n- [model.py](qlib/model/base.py)\n- [backtest.py](qlib/backtest/backtest.py)\n- [exp.py](qlib/workflow/exp.py)\n\n### 配置方法\n- `qlib/config.py`: 全局配置系统\n- YAML配置文件: 工作流配置\n- 环境变量: QLIB_前缀的环境变量\n- 运行时参数: qlib.init()函数参数\n\nSources:\n- [config.py](qlib/config.py)\n- [workflow_config_lightgbm_Alpha158.yaml](examples/benchmarks/LightGBM/workflow_config_lightgbm_Alpha158.yaml)\n\n### 外部依赖\n- `pyproject.toml`: 项目依赖声明\n- `requirements.txt`: 各示例项目的具体依赖\n- `setup.py`: 构建依赖\n\nSources:\n- [pyproject.toml](pyproject.toml)\n- [requirements.txt](examples/benchmarks/LightGBM/requirements.txt)\n- [setup.py](setup.py)\n\n### 集成点\n- `qlib/contrib`: 第三方贡献集成\n- `scripts/data_collector`: 数据收集器集成\n- `qlib/rl`: 强化学习框架集成\n- `qlib/workflow/online`: 在线服务集成\n\nSources:\n- [contrib](qlib/contrib/)\n- [data_collector](scripts/data_collector/)\n- [rl](qlib/rl/)\n- [online](qlib/workflow/online/)\n\n### 组件关系图\n```mermaid\ngraph LR\n    Data[数据模块] --\u003e Model[模型模块]\n    Model --\u003e Strategy[策略模块]\n    Strategy --\u003e Backtest[回测模块]\n    Backtest --\u003e Analysis[分析模块]\n    Analysis --\u003e Workflow[工作流管理]\n    Workflow --\u003e Online[在线服务]\n    \n    Data --\u003e|提供数据| Model\n    Model --\u003e|生成信号| Strategy\n    Strategy --\u003e|制定决策| Backtest\n    Backtest --\u003e|产生结果| Analysis\n    Analysis --\u003e|记录指标| Workflow\n    Workflow --\u003e|管理实验| Online\n    \n    Utils[工具模块] --\u003e All((所有模块))\n    Config[配置模块] --\u003e All\n```\n\n## 4. 关键特性\n\n### 功能概览\n- **多模型支持**: 包含数十种先进量化模型\n- **全流程覆盖**: 从数据到生产的完整管道\n- **高性能计算**: 优化的数据处理和缓存机制\n- **灵活配置**: 支持代码和配置文件两种方式\n- **在线服务**: 支持模型在线预测和服务\n\n### 实现亮点\n- **统一API**: 一致的接口设计简化使用\n- **模块化架构**: 松耦合设计便于扩展\n- **高性能数据层**: 优化的数据存储和访问\n- **实验管理**: 集成MLflow进行实验跟踪\n- **多频率支持**: 支持日频和分钟级数据\n\nSources:\n- [workflow_by_code.py](examples/workflow_by_code.py)\n- [config.py](qlib/config.py)\n- [data.py](qlib/data/data.py)\n\n### 特性架构图\n```mermaid\nstateDiagram-v2\n    [*] --\u003e 初始化\n    初始化 --\u003e 数据准备: qlib.init()\n    数据准备 --\u003e 模型训练: dataset.prepare()\n    模型训练 --\u003e 信号生成: model.fit()\n    信号生成 --\u003e 策略决策: strategy.generate()\n    策略决策 --\u003e 回测执行: backtest.run()\n    回测执行 --\u003e 结果分析: analysis.generate()\n    结果分析 --\u003e 在线部署: online.serve()\n    在线部署 --\u003e [*]\n    \n    state \"模型训练\" as train {\n        [*] --\u003e 参数设置\n        参数设置 --\u003e 训练过程\n        训练过程 --\u003e 模型保存\n    }\n    \n    state \"回测执行\" as backtest {\n        [*] --\u003e 执行初始化\n        执行初始化 --\u003e 交易执行\n        交易执行 --\u003e 结果计算\n    }\n```\n\u003c/blog\u003e","gmt_create":"2025-09-27T10:29:37.113595+08:00","gmt_modified":"2025-09-27T10:29:37.113596+08:00","id":"6ccd0f84-0b7f-4d81-bf9d-1c984115ddad","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5"},"wiki_readme":{"content":"No readme file","gmt_create":"2025-09-27T10:14:03.718238+08:00","gmt_modified":"2025-09-27T10:14:03.718239+08:00","id":"78e602b3-a5a9-431a-bff6-afc00f910fc1","repo_id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5"},"wiki_repo":{"id":"081ea5c1-6ba2-4ff7-88b1-23e4578414e5","name":"qlib","progress_status":"completed","wiki_present_status":"COMPLETED","optimized_catalog":"\".\\n├── examples\\n│   ├── benchmarks\\n│   │   ├── ADARNN\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   └── workflow_config_adarnn_Alpha360.yaml\\n│   │   ├── ADD\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   └── workflow_config_add_Alpha360.yaml\\n│   │   ├── ALSTM\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   ├── workflow_config_alstm_Alpha158.yaml\\n│   │   │   └── workflow_config_alstm_Alpha360.yaml\\n│   │   ├── CatBoost\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   ├── workflow_config_catboost_Alpha158.yaml\\n│   │   │   ├── workflow_config_catboost_Alpha158_csi500.yaml\\n│   │   │   ├── workflow_config_catboost_Alpha360.yaml\\n│   │   │   └── workflow_config_catboost_Alpha360_csi500.yaml\\n│   │   ├── DoubleEnsemble\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   ├── workflow_config_doubleensemble_Alpha158.yaml\\n│   │   │   ├── workflow_config_doubleensemble_Alpha158_csi500.yaml\\n│   │   │   ├── workflow_config_doubleensemble_Alpha360.yaml\\n│   │   │   ├── workflow_config_doubleensemble_Alpha360_csi500.yaml\\n│   │   │   └── workflow_config_doubleensemble_early_stop_Alpha158.yaml\\n│   │   ├── GATs\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   ├── workflow_config_gats_Alpha158.yaml\\n│   │   │   └── workflow_config_gats_Alpha360.yaml\\n│   │   ├── GRU\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   ├── workflow_config_gru_Alpha158.yaml\\n│   │   │   └── workflow_config_gru_Alpha360.yaml\\n│   │   ├── GeneralPtNN\\n│   │   │   ├── README.md\\n│   │   │   ├── workflow_config_gru.yaml\\n│   │   │   ├── workflow_config_gru2mlp.yaml\\n│   │   │   └── workflow_config_mlp.yaml\\n│   │   ├── HIST\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   └── workflow_config_hist_Alpha360.yaml\\n│   │   ├── IGMTF\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   └── workflow_config_igmtf_Alpha360.yaml\\n│   │   ├── KRNN\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   └── workflow_config_krnn_Alpha360.yaml\\n│   │   ├── LSTM\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   ├── workflow_config_lstm_Alpha158.yaml\\n│   │   │   └── workflow_config_lstm_Alpha360.yaml\\n│   │   ├── LightGBM\\n│   │   │   ├── README.md\\n│   │   │   ├── features_resample_N.py\\n│   │   │   ├── features_sample.py\\n│   │   │   ├── multi_freq_handler.py\\n│   │   │   ├── requirements.txt\\n│   │   │   ├── workflow_config_lightgbm_Alpha158.yaml\\n│   │   │   ├── workflow_config_lightgbm_Alpha158_csi500.yaml\\n│   │   │   ├── workflow_config_lightgbm_Alpha158_multi_freq.yaml\\n│   │   │   ├── workflow_config_lightgbm_Alpha360.yaml\\n│   │   │   ├── workflow_config_lightgbm_Alpha360_csi500.yaml\\n│   │   │   ├── workflow_config_lightgbm_configurable_dataset.yaml\\n│   │   │   └── workflow_config_lightgbm_multi_freq.yaml\\n│   │   ├── Linear\\n│   │   │   ├── requirements.txt\\n│   │   │   ├── workflow_config_linear_Alpha158.yaml\\n│   │   │   ├── workflow_config_linear_Alpha158_csi500.yaml\\n│   │   │   └── workflow_config_linear_Alpha158_multi_pass_bt.yaml\\n│   │   ├── Localformer\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   ├── workflow_config_localformer_Alpha158.yaml\\n│   │   │   └── workflow_config_localformer_Alpha360.yaml\\n│   │   ├── MLP\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   ├── workflow_config_mlp_Alpha158.yaml\\n│   │   │   ├── workflow_config_mlp_Alpha158_csi500.yaml\\n│   │   │   ├── workflow_config_mlp_Alpha360.yaml\\n│   │   │   └── workflow_config_mlp_Alpha360_csi500.yaml\\n│   │   ├── SFM\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   └── workflow_config_sfm_Alpha360.yaml\\n│   │   ├── Sandwich\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   └── workflow_config_sandwich_Alpha360.yaml\\n│   │   ├── TCN\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   ├── workflow_config_tcn_Alpha158.yaml\\n│   │   │   └── workflow_config_tcn_Alpha360.yaml\\n│   │   ├── TCTS\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   └── workflow_config_tcts_Alpha360.yaml\\n│   │   ├── TFT\\n│   │   │   ├── data_formatters\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   └── qlib_Alpha158.py\\n│   │   │   ├── expt_settings\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   └── configs.py\\n│   │   │   ├── libs\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── hyperparam_opt.py\\n│   │   │   │   ├── tft_model.py\\n│   │   │   │   └── utils.py\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   ├── tft.py\\n│   │   │   └── workflow_config_tft_Alpha158.yaml\\n│   │   ├── TRA\\n│   │   │   ├── configs\\n│   │   │   │   ├── config_alstm.yaml\\n│   │   │   │   ├── config_alstm_tra.yaml\\n│   │   │   │   ├── config_alstm_tra_init.yaml\\n│   │   │   │   ├── config_transformer.yaml\\n│   │   │   │   ├── config_transformer_tra.yaml\\n│   │   │   │   └── config_transformer_tra_init.yaml\\n│   │   │   ├── data\\n│   │   │   │   └── README.md\\n│   │   │   ├── src\\n│   │   │   │   ├── dataset.py\\n│   │   │   │   └── model.py\\n│   │   │   ├── README.md\\n│   │   │   ├── example.py\\n│   │   │   ├── requirements.txt\\n│   │   │   ├── run.sh\\n│   │   │   ├── workflow_config_tra_Alpha158.yaml\\n│   │   │   ├── workflow_config_tra_Alpha158_full.yaml\\n│   │   │   └── workflow_config_tra_Alpha360.yaml\\n│   │   ├── TabNet\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   ├── workflow_config_TabNet_Alpha158.yaml\\n│   │   │   └── workflow_config_TabNet_Alpha360.yaml\\n│   │   ├── Transformer\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   ├── workflow_config_transformer_Alpha158.yaml\\n│   │   │   └── workflow_config_transformer_Alpha360.yaml\\n│   │   ├── XGBoost\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   ├── workflow_config_xgboost_Alpha158.yaml\\n│   │   │   └── workflow_config_xgboost_Alpha360.yaml\\n│   │   └── README.md\\n│   ├── benchmarks_dynamic\\n│   │   ├── DDG-DA\\n│   │   │   ├── Makefile\\n│   │   │   ├── README.md\\n│   │   │   ├── requirements.txt\\n│   │   │   ├── vis_data.py\\n│   │   │   └── workflow.py\\n│   │   ├── baseline\\n│   │   │   ├── README.md\\n│   │   │   ├── rolling_benchmark.py\\n│   │   │   ├── workflow_config_lightgbm_Alpha158.yaml\\n│   │   │   └── workflow_config_linear_Alpha158.yaml\\n│   │   └── README.md\\n│   ├── data_demo\\n│   │   ├── README.md\\n│   │   ├── data_cache_demo.py\\n│   │   └── data_mem_resuse_demo.py\\n│   ├── highfreq\\n│   │   ├── README.md\\n│   │   ├── highfreq_handler.py\\n│   │   ├── highfreq_ops.py\\n│   │   ├── highfreq_processor.py\\n│   │   ├── workflow.py\\n│   │   └── workflow_config_High_Freq_Tree_Alpha158.yaml\\n│   ├── hyperparameter/LightGBM\\n│   │   ├── Readme.md\\n│   │   ├── hyperparameter_158.py\\n│   │   ├── hyperparameter_360.py\\n│   │   └── requirements.txt\\n│   ├── model_interpreter\\n│   │   └── feature.py\\n│   ├── model_rolling\\n│   │   └── task_manager_rolling.py\\n│   ├── nested_decision_execution\\n│   │   ├── README.md\\n│   │   └── workflow.py\\n│   ├── online_srv\\n│   │   ├── online_management_simulate.py\\n│   │   ├── rolling_online_management.py\\n│   │   └── update_online_pred.py\\n│   ├── orderbook_data\\n│   │   ├── README.md\\n│   │   ├── create_dataset.py\\n│   │   └── example.py\\n│   ├── portfolio\\n│   │   ├── README.md\\n│   │   ├── config_enhanced_indexing.yaml\\n│   │   └── prepare_riskdata.py\\n│   ├── rl_order_execution\\n│   │   ├── exp_configs\\n│   │   │   ├── backtest_opds.yml\\n│   │   │   ├── backtest_ppo.yml\\n│   │   │   ├── backtest_twap.yml\\n│   │   │   ├── train_opds.yml\\n│   │   │   └── train_ppo.yml\\n│   │   ├── scripts\\n│   │   │   ├── gen_pickle_data.py\\n│   │   │   ├── gen_training_orders.py\\n│   │   │   ├── merge_orders.py\\n│   │   │   └── pickle_data_config.yml\\n│   │   └── README.md\\n│   ├── rolling_process_data\\n│   │   ├── README.md\\n│   │   ├── rolling_handler.py\\n│   │   └── workflow.py\\n│   ├── README.md\\n│   ├── run_all_model.py\\n│   └── workflow_by_code.py\\n├── qlib\\n│   ├── backtest\\n│   │   ├── __init__.py\\n│   │   ├── account.py\\n│   │   ├── backtest.py\\n│   │   ├── decision.py\\n│   │   ├── exchange.py\\n│   │   ├── executor.py\\n│   │   ├── high_performance_ds.py\\n│   │   ├── position.py\\n│   │   ├── profit_attribution.py\\n│   │   ├── report.py\\n│   │   ├── signal.py\\n│   │   └── utils.py\\n│   ├── cli\\n│   │   ├── data.py\\n│   │   └── run.py\\n│   ├── contrib\\n│   │   ├── data\\n│   │   │   ├── utils\\n│   │   │   │   └── sepdf.py\\n│   │   │   ├── data.py\\n│   │   │   ├── dataset.py\\n│   │   │   ├── handler.py\\n│   │   │   ├── highfreq_handler.py\\n│   │   │   ├── highfreq_processor.py\\n│   │   │   ├── highfreq_provider.py\\n│   │   │   ├── loader.py\\n│   │   │   └── processor.py\\n│   │   ├── eva\\n│   │   │   └── alpha.py\\n│   │   ├── meta\\n│   │   │   ├── data_selection\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── dataset.py\\n│   │   │   │   ├── model.py\\n│   │   │   │   ├── net.py\\n│   │   │   │   └── utils.py\\n│   │   │   └── __init__.py\\n│   │   ├── model\\n│   │   │   ├── __init__.py\\n│   │   │   ├── catboost_model.py\\n│   │   │   ├── double_ensemble.py\\n│   │   │   ├── gbdt.py\\n│   │   │   ├── highfreq_gdbt_model.py\\n│   │   │   ├── linear.py\\n│   │   │   ├── pytorch_adarnn.py\\n│   │   │   ├── pytorch_add.py\\n│   │   │   ├── pytorch_alstm.py\\n│   │   │   ├── pytorch_alstm_ts.py\\n│   │   │   ├── pytorch_gats.py\\n│   │   │   ├── pytorch_gats_ts.py\\n│   │   │   ├── pytorch_general_nn.py\\n│   │   │   ├── pytorch_gru.py\\n│   │   │   ├── pytorch_gru_ts.py\\n│   │   │   ├── pytorch_hist.py\\n│   │   │   ├── pytorch_igmtf.py\\n│   │   │   ├── pytorch_krnn.py\\n│   │   │   ├── pytorch_localformer.py\\n│   │   │   ├── pytorch_localformer_ts.py\\n│   │   │   ├── pytorch_lstm.py\\n│   │   │   ├── pytorch_lstm_ts.py\\n│   │   │   ├── pytorch_nn.py\\n│   │   │   ├── pytorch_sandwich.py\\n│   │   │   ├── pytorch_sfm.py\\n│   │   │   ├── pytorch_tabnet.py\\n│   │   │   ├── pytorch_tcn.py\\n│   │   │   ├── pytorch_tcn_ts.py\\n│   │   │   ├── pytorch_tcts.py\\n│   │   │   ├── pytorch_tra.py\\n│   │   │   ├── pytorch_transformer.py\\n│   │   │   ├── pytorch_transformer_ts.py\\n│   │   │   ├── pytorch_utils.py\\n│   │   │   ├── tcn.py\\n│   │   │   └── xgboost.py\\n│   │   ├── online\\n│   │   │   ├── __init__.py\\n│   │   │   ├── manager.py\\n│   │   │   ├── online_model.py\\n│   │   │   ├── operator.py\\n│   │   │   ├── user.py\\n│   │   │   └── utils.py\\n│   │   ├── ops\\n│   │   │   └── high_freq.py\\n│   │   ├── report\\n│   │   │   ├── analysis_model\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   └── analysis_model_performance.py\\n│   │   │   ├── analysis_position\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── cumulative_return.py\\n│   │   │   │   ├── parse_position.py\\n│   │   │   │   ├── rank_label.py\\n│   │   │   │   ├── report.py\\n│   │   │   │   ├── risk_analysis.py\\n│   │   │   │   └── score_ic.py\\n│   │   │   ├── data\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── ana.py\\n│   │   │   │   └── base.py\\n│   │   │   ├── __init__.py\\n│   │   │   ├── graph.py\\n│   │   │   └── utils.py\\n│   │   ├── rolling\\n│   │   │   ├── __init__.py\\n│   │   │   ├── base.py\\n│   │   │   └── ddgda.py\\n│   │   ├── strategy\\n│   │   │   ├── optimizer\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   ├── enhanced_indexing.py\\n│   │   │   │   └── optimizer.py\\n│   │   │   ├── __init__.py\\n│   │   │   ├── cost_control.py\\n│   │   │   ├── order_generator.py\\n│   │   │   ├── rule_strategy.py\\n│   │   │   └── signal_strategy.py\\n│   │   ├── tuner\\n│   │   │   ├── __init__.py\\n│   │   │   ├── config.py\\n│   │   │   ├── launcher.py\\n│   │   │   ├── pipeline.py\\n│   │   │   ├── space.py\\n│   │   │   └── tuner.py\\n│   │   ├── workflow\\n│   │   │   ├── __init__.py\\n│   │   │   └── record_temp.py\\n│   │   ├── evaluate.py\\n│   │   ├── evaluate_portfolio.py\\n│   │   └── torch.py\\n│   ├── data\\n│   │   ├── _libs\\n│   │   │   └── __init__.py\\n│   │   ├── dataset\\n│   │   │   ├── __init__.py\\n│   │   │   ├── handler.py\\n│   │   │   ├── loader.py\\n│   │   │   ├── processor.py\\n│   │   │   ├── storage.py\\n│   │   │   ├── utils.py\\n│   │   │   └── weight.py\\n│   │   ├── storage\\n│   │   │   ├── __init__.py\\n│   │   │   ├── file_storage.py\\n│   │   │   └── storage.py\\n│   │   ├── __init__.py\\n│   │   ├── base.py\\n│   │   ├── cache.py\\n│   │   ├── client.py\\n│   │   ├── data.py\\n│   │   ├── filter.py\\n│   │   ├── inst_processor.py\\n│   │   ├── ops.py\\n│   │   └── pit.py\\n│   ├── model\\n│   │   ├── ens\\n│   │   │   ├── ensemble.py\\n│   │   │   └── group.py\\n│   │   ├── interpret\\n│   │   │   └── base.py\\n│   │   ├── meta\\n│   │   │   ├── __init__.py\\n│   │   │   ├── dataset.py\\n│   │   │   ├── model.py\\n│   │   │   └── task.py\\n│   │   ├── riskmodel\\n│   │   │   ├── __init__.py\\n│   │   │   ├── base.py\\n│   │   │   ├── poet.py\\n│   │   │   ├── shrink.py\\n│   │   │   └── structured.py\\n│   │   ├── __init__.py\\n│   │   ├── base.py\\n│   │   ├── trainer.py\\n│   │   └── utils.py\\n│   ├── rl\\n│   │   ├── contrib\\n│   │   │   ├── backtest.py\\n│   │   │   ├── naive_config_parser.py\\n│   │   │   ├── train_onpolicy.py\\n│   │   │   └── utils.py\\n│   │   ├── data\\n│   │   │   ├── __init__.py\\n│   │   │   ├── base.py\\n│   │   │   ├── integration.py\\n│   │   │   ├── native.py\\n│   │   │   └── pickle_styled.py\\n│   │   ├── order_execution\\n│   │   │   ├── __init__.py\\n│   │   │   ├── interpreter.py\\n│   │   │   ├── network.py\\n│   │   │   ├── policy.py\\n│   │   │   ├── reward.py\\n│   │   │   ├── simulator_qlib.py\\n│   │   │   ├── simulator_simple.py\\n│   │   │   ├── state.py\\n│   │   │   ├── strategy.py\\n│   │   │   └── utils.py\\n│   │   ├── strategy\\n│   │   │   ├── __init__.py\\n│   │   │   └── single_order.py\\n│   │   ├── trainer\\n│   │   │   ├── __init__.py\\n│   │   │   ├── api.py\\n│   │   │   ├── callbacks.py\\n│   │   │   ├── trainer.py\\n│   │   │   └── vessel.py\\n│   │   ├── utils\\n│   │   │   ├── __init__.py\\n│   │   │   ├── data_queue.py\\n│   │   │   ├── env_wrapper.py\\n│   │   │   ├── finite_env.py\\n│   │   │   └── log.py\\n│   │   ├── __init__.py\\n│   │   ├── aux_info.py\\n│   │   ├── interpreter.py\\n│   │   ├── reward.py\\n│   │   ├── seed.py\\n│   │   └── simulator.py\\n│   ├── strategy\\n│   │   ├── __init__.py\\n│   │   └── base.py\\n│   ├── tests\\n│   │   ├── __init__.py\\n│   │   ├── config.py\\n│   │   └── data.py\\n│   ├── utils\\n│   │   ├── __init__.py\\n│   │   ├── data.py\\n│   │   ├── exceptions.py\\n│   │   ├── file.py\\n│   │   ├── index_data.py\\n│   │   ├── mod.py\\n│   │   ├── objm.py\\n│   │   ├── paral.py\\n│   │   ├── resam.py\\n│   │   ├── serial.py\\n│   │   └── time.py\\n│   ├── workflow\\n│   │   ├── online\\n│   │   │   ├── manager.py\\n│   │   │   ├── strategy.py\\n│   │   │   ├── update.py\\n│   │   │   └── utils.py\\n│   │   ├── task\\n│   │   │   ├── __init__.py\\n│   │   │   ├── collect.py\\n│   │   │   ├── gen.py\\n│   │   │   ├── manage.py\\n│   │   │   └── utils.py\\n│   │   ├── __init__.py\\n│   │   ├── exp.py\\n│   │   ├── expm.py\\n│   │   ├── record_temp.py\\n│   │   ├── recorder.py\\n│   │   └── utils.py\\n│   ├── __init__.py\\n│   ├── config.py\\n│   ├── constant.py\\n│   ├── log.py\\n│   └── typehint.py\\n├── scripts\\n│   ├── data_collector\\n│   │   ├── baostock_5min\\n│   │   │   ├── README.md\\n│   │   │   ├── collector.py\\n│   │   │   └── requirements.txt\\n│   │   ├── br_index\\n│   │   │   ├── README.md\\n│   │   │   ├── collector.py\\n│   │   │   └── requirements.txt\\n│   │   ├── cn_index\\n│   │   │   ├── README.md\\n│   │   │   ├── collector.py\\n│   │   │   └── requirements.txt\\n│   │   ├── contrib\\n│   │   │   ├── fill_cn_1min_data\\n│   │   │   │   ├── README.md\\n│   │   │   │   ├── fill_cn_1min_data.py\\n│   │   │   │   └── requirements.txt\\n│   │   │   └── future_trading_date_collector\\n│   │   │       ├── README.md\\n│   │   │       ├── future_trading_date_collector.py\\n│   │   │       └── requirements.txt\\n│   │   ├── crowd_source\\n│   │   │   └── README.md\\n│   │   ├── crypto\\n│   │   │   ├── README.md\\n│   │   │   ├── collector.py\\n│   │   │   └── requirement.txt\\n│   │   ├── fund\\n│   │   │   ├── README.md\\n│   │   │   ├── collector.py\\n│   │   │   └── requirements.txt\\n│   │   ├── pit\\n│   │   │   ├── README.md\\n│   │   │   ├── collector.py\\n│   │   │   └── requirements.txt\\n│   │   ├── us_index\\n│   │   │   ├── README.md\\n│   │   │   ├── collector.py\\n│   │   │   └── requirements.txt\\n│   │   ├── yahoo\\n│   │   │   ├── README.md\\n│   │   │   ├── collector.py\\n│   │   │   └── requirements.txt\\n│   │   ├── README.md\\n│   │   ├── base.py\\n│   │   ├── future_calendar_collector.py\\n│   │   ├── index.py\\n│   │   └── utils.py\\n│   ├── README.md\\n│   ├── check_data_health.py\\n│   ├── check_dump_bin.py\\n│   ├── collect_info.py\\n│   ├── dump_bin.py\\n│   ├── dump_pit.py\\n│   └── get_data.py\\n├── tests\\n│   ├── backtest\\n│   │   ├── test_file_strategy.py\\n│   │   └── test_high_freq_trading.py\\n│   ├── data_mid_layer_tests\\n│   │   ├── README.md\\n│   │   ├── test_dataloader.py\\n│   │   ├── test_dataset.py\\n│   │   ├── test_handler.py\\n│   │   ├── test_handler_storage.py\\n│   │   └── test_processor.py\\n│   ├── dataset_tests\\n│   │   ├── README.md\\n│   │   └── test_datalayer.py\\n│   ├── dependency_tests\\n│   │   ├── README.md\\n│   │   └── test_mlflow.py\\n│   ├── misc\\n│   │   ├── test_get_multi_proc.py\\n│   │   ├── test_index_data.py\\n│   │   ├── test_sepdf.py\\n│   │   └── test_utils.py\\n│   ├── model\\n│   │   └── test_general_nn.py\\n│   ├── ops\\n│   │   ├── test_elem_operator.py\\n│   │   └── test_special_ops.py\\n│   ├── rl\\n│   │   ├── test_data_queue.py\\n│   │   ├── test_finite_env.py\\n│   │   ├── test_logger.py\\n│   │   ├── test_qlib_simulator.py\\n│   │   ├── test_saoe_simple.py\\n│   │   └── test_trainer.py\\n│   ├── rolling_tests\\n│   │   └── test_update_pred.py\\n│   ├── storage_tests\\n│   │   └── test_storage.py\\n│   ├── conftest.py\\n│   ├── pytest.ini\\n│   ├── test_all_pipeline.py\\n│   ├── test_contrib_model.py\\n│   ├── test_contrib_workflow.py\\n│   ├── test_dump_data.py\\n│   ├── test_get_data.py\\n│   ├── test_pit.py\\n│   ├── test_register_ops.py\\n│   ├── test_structured_cov_estimator.py\\n│   └── test_workflow.py\\n├── CHANGES.rst\\n├── CODE_OF_CONDUCT.md\\n├── Dockerfile\\n├── Makefile\\n├── README.md\\n├── SECURITY.md\\n├── build_docker_image.sh\\n├── pyproject.toml\\n└── setup.py\\n\"","current_document_structure":"WikiEncrypted:","catalogue_think_content":"WikiEncrypted:","recovery_checkpoint":"wiki_generation_completed","last_commit_id":"7d66e4b7882862ab3d72087ebfe9ca88e80b458a","last_commit_update":"2025-09-15T17:09:36+08:00","gmt_create":"2025-09-27T10:13:54.774058+08:00","gmt_modified":"2025-09-27T12:45:02.593817+08:00","extend_info":"{\"language\":\"zh\",\"active\":true,\"branch\":\"main\",\"shareStatus\":\"\",\"server_error_code\":\"\",\"cosy_version\":\"\"}"}}